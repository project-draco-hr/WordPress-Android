{
  final boolean useGridView=useGridView();
  final int actionbarHeight=getResources().getDimensionPixelSize(R.dimen.reader_actionbar_height);
  final Context context=container.getContext();
  final View view;
  if (useGridView) {
    view=inflater.inflate(R.layout.fragment_reader_post_grid,container,false);
  }
 else {
    view=inflater.inflate(R.layout.fragment_reader_post_list,container,false);
  }
  mNewPostsBar=(TextView)view.findViewById(R.id.text_new_posts);
  mNewPostsBar.setVisibility(View.GONE);
  mNewPostsBar.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
      reloadPosts();
      hideNewPostsBar();
    }
  }
);
  if (mIsTranslucentActionBarEnabled) {
    RelativeLayout.LayoutParams params=(RelativeLayout.LayoutParams)mNewPostsBar.getLayoutParams();
    params.setMargins(0,actionbarHeight,0,0);
  }
  mEmptyMessage=(TextView)view.findViewById(R.id.text_empty);
  if (useGridView) {
    final StaggeredGridView gridView=(StaggeredGridView)view.findViewById(R.id.grid);
    gridView.setOnTouchListener(this);
    if (mIsTranslucentActionBarEnabled) {
      RelativeLayout header=new RelativeLayout(context);
      header.setLayoutParams(new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.MATCH_PARENT,RelativeLayout.LayoutParams.WRAP_CONTENT));
      header.setMinimumHeight(actionbarHeight - (gridView.getItemMargin() * 2));
      gridView.setHeaderView(header);
    }
    mFooterProgress=inflater.inflate(R.layout.reader_footer_progress,gridView,false);
    gridView.setFooterView(mFooterProgress);
    gridView.setOnItemClickListener(new StaggeredGridView.OnItemClickListener(){
      @Override public void onItemClick(      StaggeredGridView parent,      View view,      int position,      long id){
        position-=gridView.getHeaderViewsCount();
        ReaderPost post=(ReaderPost)getPostAdapter().getItem(position);
        ReaderActivityLauncher.showReaderPostDetailForResult(getActivity(),post);
      }
    }
);
    gridView.setAdapter(getPostAdapter());
  }
 else {
    final ListView listView=(ListView)view.findViewById(android.R.id.list);
    listView.setOnTouchListener(this);
    listView.setOnScrollListener(this);
    mFooterProgress=inflater.inflate(R.layout.reader_footer_progress,listView,false);
    listView.addFooterView(mFooterProgress);
    if (mIsTranslucentActionBarEnabled) {
      int headerHeight=actionbarHeight - getResources().getDimensionPixelSize(R.dimen.reader_margin_medium);
      RelativeLayout header=new RelativeLayout(context);
      header.setLayoutParams(new AbsListView.LayoutParams(AbsListView.LayoutParams.MATCH_PARENT,headerHeight));
      listView.addHeaderView(header,null,false);
    }
    listView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
      @Override public void onItemClick(      AdapterView<?> adapterView,      View view,      int position,      long id){
        position-=listView.getHeaderViewsCount();
        ReaderPost post=(ReaderPost)getPostAdapter().getItem(position);
        ReaderActivityLauncher.showReaderPostDetailForResult(getActivity(),post);
      }
    }
);
    listView.setAdapter(getPostAdapter());
  }
  mFooterProgress.setVisibility(View.GONE);
  mFooterProgress.setBackgroundColor(context.getResources().getColor(R.color.reader_divider_grey));
  return view;
}
