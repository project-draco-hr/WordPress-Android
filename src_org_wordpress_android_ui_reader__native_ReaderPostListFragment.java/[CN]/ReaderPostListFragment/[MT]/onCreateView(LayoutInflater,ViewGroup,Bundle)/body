{
  final boolean useGridView=useGridView();
  final Context context=container.getContext();
  final int actionbarHeight=DisplayUtils.getActionBarHeight(context);
  final boolean isTranslucentActionBarEnabled=NativeReaderActivity.isTranslucentActionBarEnabled();
  final View view;
  if (useGridView) {
    view=inflater.inflate(R.layout.reader_fragment_post_grid,container,false);
  }
 else {
    view=inflater.inflate(R.layout.reader_fragment_post_list,container,false);
  }
  mNewPostsBar=(TextView)view.findViewById(R.id.text_new_posts);
  mNewPostsBar.setVisibility(View.GONE);
  mNewPostsBar.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
      reloadPosts();
      hideNewPostsBar();
    }
  }
);
  mEmptyView=view.findViewById(R.id.empty_view);
  if (isTranslucentActionBarEnabled) {
    RelativeLayout.LayoutParams params=(RelativeLayout.LayoutParams)mNewPostsBar.getLayoutParams();
    if (params != null) {
      params.setMargins(0,actionbarHeight,0,0);
    }
    mEmptyView.setPadding(0,actionbarHeight,0,0);
  }
  mProgress=(ProgressBar)view.findViewById(R.id.progress_footer);
  mProgress.setVisibility(View.GONE);
  if (useGridView) {
    final StaggeredGridView gridView=(StaggeredGridView)view.findViewById(R.id.grid);
    if (isTranslucentActionBarEnabled) {
      RelativeLayout header=new RelativeLayout(context);
      header.setLayoutParams(new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.MATCH_PARENT,RelativeLayout.LayoutParams.WRAP_CONTENT));
      header.setMinimumHeight(actionbarHeight - gridView.getItemMargin());
      gridView.setHeaderView(header);
      if (hasActivity() && getActivity() instanceof NativeReaderActivity)       ((NativeReaderActivity)getActivity()).setActionBarAlpha(NativeReaderActivity.ALPHA_LEVEL_3);
    }
    gridView.setOnItemClickListener(new StaggeredGridView.OnItemClickListener(){
      @Override public void onItemClick(      StaggeredGridView parent,      View view,      int position,      long id){
        position-=gridView.getHeaderViewsCount();
        ReaderPost post=(ReaderPost)getPostAdapter().getItem(position);
        ReaderActivityLauncher.showReaderPostDetailForResult(getActivity(),post);
      }
    }
);
    gridView.setSelector(R.drawable.reader_list_selector);
    gridView.setAdapter(getPostAdapter());
  }
 else {
    final ListView listView=(ListView)view.findViewById(android.R.id.list);
    listView.setOnScrollListener(this);
    if (isTranslucentActionBarEnabled) {
      RelativeLayout header=new RelativeLayout(context);
      header.setLayoutParams(new AbsListView.LayoutParams(AbsListView.LayoutParams.MATCH_PARENT,actionbarHeight));
      listView.addHeaderView(header,null,false);
      listView.setOverScrollMode(View.OVER_SCROLL_ALWAYS);
    }
    listView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
      @Override public void onItemClick(      AdapterView<?> adapterView,      View view,      int position,      long id){
        position-=listView.getHeaderViewsCount();
        ReaderPost post=(ReaderPost)getPostAdapter().getItem(position);
        ReaderActivityLauncher.showReaderPostDetailForResult(getActivity(),post);
      }
    }
);
    listView.setAdapter(getPostAdapter());
  }
  return view;
}
