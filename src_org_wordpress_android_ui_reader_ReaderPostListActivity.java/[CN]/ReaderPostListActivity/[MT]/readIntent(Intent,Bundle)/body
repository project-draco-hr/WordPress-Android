{
  if (intent == null) {
    return;
  }
  if (intent.hasExtra(ReaderConstants.ARG_POST_LIST_TYPE)) {
    mPostListType=(ReaderTypes.ReaderPostListType)intent.getSerializableExtra(ReaderConstants.ARG_POST_LIST_TYPE);
  }
 else {
    mPostListType=ReaderTypes.DEFAULT_POST_LIST_TYPE;
  }
  if (mPostListType.isPreviewType()) {
    setContentView(R.layout.reader_activity_post_list);
  }
 else {
    createMenuDrawer(R.layout.reader_activity_post_list);
  }
switch (mPostListType) {
case TAG_PREVIEW:
    setTitle(R.string.reader_title_tag_preview);
  break;
case BLOG_PREVIEW:
setTitle(R.string.reader_title_blog_preview);
break;
default :
break;
}
if (savedInstanceState == null) {
AnalyticsTracker.track(AnalyticsTracker.Stat.READER_ACCESSED);
if (mPostListType == ReaderTypes.ReaderPostListType.BLOG_PREVIEW) {
long blogId=intent.getLongExtra(ReaderConstants.ARG_BLOG_ID,0);
String blogUrl=intent.getStringExtra(ReaderConstants.ARG_BLOG_URL);
showListFragmentForBlog(blogId,blogUrl);
}
 else {
String tagName=intent.getStringExtra(ReaderConstants.ARG_TAG_NAME);
if (TextUtils.isEmpty(tagName)) {
tagName=UserPrefs.getReaderTag();
}
if (mPostListType == ReaderTypes.ReaderPostListType.TAG_FOLLOWED && !ReaderTagTable.tagExists(tagName)) {
tagName=ReaderTag.TAG_NAME_DEFAULT;
}
showListFragmentForTag(tagName,mPostListType);
}
}
}
