{
  Date date=new Date();
  SimpleDateFormat gmtDf=new SimpleDateFormat(pattern);
  if (blogTimeZoneOption == null) {
    AppLog.w(T.UTILS,"blogTimeZoneOption is null. getCurrentDateTZ() will return the device time!");
    return gmtDf.format(date);
  }
  AppLog.v(T.STATS,"Parsing the following Timezone received from WP: " + blogTimeZoneOption);
  String timezoneNormalized;
  if (blogTimeZoneOption.equals("0") || blogTimeZoneOption.equals("0.0")) {
    timezoneNormalized="GMT";
  }
 else {
    String[] timezoneSplitted=org.apache.commons.lang.StringUtils.split(blogTimeZoneOption,".");
    timezoneNormalized=timezoneSplitted[0];
    if (timezoneSplitted.length > 1 && timezoneSplitted[1].equals("5")) {
      timezoneNormalized+=":30";
    }
    if (timezoneNormalized.startsWith("-")) {
      timezoneNormalized="GMT" + timezoneNormalized;
    }
 else {
      if (timezoneNormalized.startsWith("+")) {
        timezoneNormalized="GMT" + timezoneNormalized;
      }
 else {
        timezoneNormalized="GMT+" + timezoneNormalized;
      }
    }
  }
  AppLog.v(T.STATS,"Setting the following Timezone: " + timezoneNormalized);
  gmtDf.setTimeZone(TimeZone.getTimeZone(timezoneNormalized));
  return gmtDf.format(date);
}
