{
  String token=uri.getQueryParameter("token");
  if (token != null && !token.isEmpty()) {
    final Account account=AccountHelper.getDefaultAccount();
    account.setAccessToken(token);
    account.save();
    account.fetchAccountDetails();
    SimperiumUtils.configureSimperium(WordPress.getContext(),token);
    FetchBlogListWPCom listWPCom=new FetchBlogListWPCom();
    listWPCom.execute(new FetchBlogListAbstract.Callback(){
      @Override public void onSuccess(      List<Map<String,Object>> userBlogList){
        if (userBlogList != null) {
          BlogUtils.addBlogs(userBlogList,account.getUserName());
          refreshFirstFiveBlogsContent();
        }
        trackAnalyticsSignIn();
        ReaderUpdateService.startService(getApplicationContext(),EnumSet.of(ReaderUpdateService.UpdateTask.TAGS));
        StatsWidgetProvider.updateWidgetsOnLogin(getApplicationContext());
        WordPress.getRestClientUtils().get("me",new RestRequest.Listener(){
          @Override public void onResponse(          JSONObject jsonObject){
            setPrimaryBlog(jsonObject);
            Intent intent=new Intent(getApplicationContext(),WPMainActivity.class);
            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
            startActivity(intent);
          }
        }
,null);
      }
      @Override public void onError(      int errorMessageId,      boolean twoStepCodeRequired,      boolean httpAuthRequired,      boolean erroneousSslCertificate,      String clientResponse){
        String yup="";
      }
    }
);
  }
}
