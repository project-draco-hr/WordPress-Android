{
  String result=null;
  post=params[0];
  if (post == null)   return null;
  XMLRPCClient client=new XMLRPCClient(WordPress.currentBlog.getUrl(),WordPress.currentBlog.getHttpuser(),WordPress.currentBlog.getHttppassword());
  ApiHelper.addAuthorizationHeaderIfNeeded(WordPress.currentBlog,client);
  Object versionResult=new Object();
  try {
    if (mIsPage) {
      Object[] vParams={WordPress.currentBlog.getRemoteBlogId(),post.getPostid(),WordPress.currentBlog.getUsername(),WordPress.currentBlog.getPassword()};
      versionResult=(Object)client.call("wp.getPage",vParams);
    }
 else {
      Object[] vParams={post.getPostid(),WordPress.currentBlog.getUsername(),WordPress.currentBlog.getPassword()};
      versionResult=(Object)client.call("metaWeblog.getPost",vParams);
    }
  }
 catch (  XMLRPCException e) {
    mErrorMsg=getResources().getText(R.string.error_generic).toString();
    return null;
  }
  if (versionResult != null) {
    try {
      Map<?,?> contentHash=(Map<?,?>)versionResult;
      if ((mIsPage && !"publish".equals(contentHash.get("page_status").toString())) || (!mIsPage && !"publish".equals(contentHash.get("post_status").toString()))) {
        if (mIsPage) {
          mErrorMsg=getString(R.string.page_not_published);
        }
 else {
          mErrorMsg=getString(R.string.post_not_published);
        }
        return null;
      }
 else {
        String postURL=contentHash.get("permaLink").toString();
        String shortlink=getShortlinkTagHref(postURL);
        if (shortlink == null) {
          result=postURL;
        }
 else {
          result=shortlink;
        }
      }
    }
 catch (    Exception e) {
      mErrorMsg=getResources().getText(R.string.error_generic).toString();
      return null;
    }
  }
  return result;
}
