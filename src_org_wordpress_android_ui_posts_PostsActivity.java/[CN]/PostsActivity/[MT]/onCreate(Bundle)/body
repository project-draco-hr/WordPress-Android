{
  super.onCreate(savedInstanceState);
  try {
    if (WordPress.hasValidWPComCredentials(this)) {
      GCMRegistrar.checkDevice(this);
      GCMRegistrar.checkManifest(this);
      String regId=GCMRegistrar.getRegistrationId(this);
      String gcmId=WordPress.config.getProperty("gcm.id").toString();
      if (gcmId != null && regId.equals("")) {
        GCMRegistrar.register(this,gcmId);
      }
 else {
        Log.v("WORDPRESS","Already registered for GCM");
      }
    }
  }
 catch (  Exception e) {
    Log.v("WORDPRESS","Could not register for GCM: " + e.getMessage());
  }
  createMenuDrawer(R.layout.posts);
  ActionBar actionBar=getSupportActionBar();
  actionBar.setDisplayShowTitleEnabled(true);
  FragmentManager fm=getSupportFragmentManager();
  postList=(ViewPostsFragment)fm.findFragmentById(R.id.postList);
  postList.setListShown(true);
  Bundle extras=getIntent().getExtras();
  if (extras != null) {
    isPage=extras.getBoolean("viewPages");
    String errorMessage=extras.getString("errorMessage");
    if (errorMessage != null) {
      AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(PostsActivity.this);
      dialogBuilder.setTitle(getResources().getText(R.string.error));
      dialogBuilder.setMessage(errorMessage);
      dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
        public void onClick(        DialogInterface dialog,        int whichButton){
        }
      }
);
      dialogBuilder.setCancelable(true);
      if (!isFinishing()) {
        dialogBuilder.create().show();
      }
    }
  }
  if (isPage)   setTitle(getString(R.string.pages));
 else   setTitle(getString(R.string.posts));
  WordPress.currentPost=null;
  WordPress.setOnPostUploadedListener(new WordPress.OnPostUploadedListener(){
    @Override public void OnPostUploaded(){
      if (isFinishing())       return;
      checkForLocalChanges(false);
    }
  }
);
  attemptToSelectPost();
}
