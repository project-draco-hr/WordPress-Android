{
  if (mPostList.getPostsTask != null) {
    mPostList.getPostsTask.cancel(true);
    mIsRefreshing=false;
  }
  if (post == null) {
    Toast.makeText(PostsActivity.this,R.string.post_not_found,Toast.LENGTH_SHORT).show();
    return;
  }
  if (action == POST_DELETE) {
    WPMobileStatsUtil.flagProperty(statEventForViewClosing(),WPMobileStatsUtil.StatsPropertyPostDetailClickedDelete);
    if (post.isLocalDraft()) {
      AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(PostsActivity.this);
      dialogBuilder.setTitle(getResources().getText(R.string.delete_draft));
      dialogBuilder.setMessage(getResources().getText(R.string.delete_sure) + " '" + post.getTitle()+ "'?");
      dialogBuilder.setPositiveButton(getResources().getText(R.string.yes),new DialogInterface.OnClickListener(){
        public void onClick(        DialogInterface dialog,        int whichButton){
          post.delete();
          popPostDetail();
          attemptToSelectPost();
          mPostList.loadPosts(false);
        }
      }
);
      dialogBuilder.setNegativeButton(getResources().getText(R.string.no),new DialogInterface.OnClickListener(){
        public void onClick(        DialogInterface dialog,        int whichButton){
        }
      }
);
      dialogBuilder.setCancelable(true);
      if (!isFinishing()) {
        dialogBuilder.create().show();
      }
    }
 else {
      AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(PostsActivity.this);
      dialogBuilder.setTitle(getResources().getText((post.isPage()) ? R.string.delete_page : R.string.delete_post));
      dialogBuilder.setMessage(getResources().getText((post.isPage()) ? R.string.delete_sure_page : R.string.delete_sure_post) + " '" + post.getTitle()+ "'?");
      dialogBuilder.setPositiveButton(getResources().getText(R.string.yes),new DialogInterface.OnClickListener(){
        public void onClick(        DialogInterface dialog,        int whichButton){
          new deletePostTask().execute(post);
        }
      }
);
      dialogBuilder.setNegativeButton(getResources().getText(R.string.no),new DialogInterface.OnClickListener(){
        public void onClick(        DialogInterface dialog,        int whichButton){
        }
      }
);
      dialogBuilder.setCancelable(true);
      if (!isFinishing()) {
        dialogBuilder.create().show();
      }
    }
  }
 else   if (action == POST_SHARE) {
    new shareURLTask().execute(post);
    WPMobileStatsUtil.flagProperty(statEventForViewClosing(),WPMobileStatsUtil.StatsPropertyPostDetailClickedShare);
  }
 else   if (action == POST_CLEAR) {
    FragmentManager fm=getSupportFragmentManager();
    ViewPostFragment f=(ViewPostFragment)fm.findFragmentById(R.id.postDetail);
    if (f != null) {
      f.clearContent();
    }
  }
 else   if (action == POST_COMMENT) {
    WPMobileStatsUtil.flagProperty(statEventForViewClosing(),WPMobileStatsUtil.StatsPropertyPostDetailClickedComment);
    Intent i=new Intent(PostsActivity.this,AddCommentActivity.class);
    i.putExtra("postID",post.getPostid());
    startActivityForResult(i,ACTIVITY_ADD_COMMENT);
  }
 else   if (action == POST_EDIT) {
    WPMobileStatsUtil.flagProperty(statEventForViewClosing(),WPMobileStatsUtil.StatsPropertyPostDetailClickedEdit);
  }
 else   if (action == POST_VIEW) {
    WPMobileStatsUtil.flagProperty(statEventForViewClosing(),WPMobileStatsUtil.StatsPropertyPostDetailClickedPreview);
  }
}
