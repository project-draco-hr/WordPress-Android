{
  this.mBlogID=blogID;
  this.mDate=response.getString("date");
  JSONObject jDaysObject=response.getJSONObject("days");
  if (jDaysObject.length() == 0) {
    throw new JSONException("Invalid document returned from the REST API");
  }
  Iterator<String> keys=jDaysObject.keys();
  String firstDayKey=keys.next();
  JSONObject firstDayObject=jDaysObject.getJSONObject(firstDayKey);
  this.otherViews=firstDayObject.getInt("other_views");
  this.totalViews=firstDayObject.getInt("total_views");
  JSONObject countryInfoJSON=response.optJSONObject("country-info");
  JSONArray viewsJSON=firstDayObject.optJSONArray("views");
  if (viewsJSON != null && countryInfoJSON != null) {
    countries=new ArrayList<>(viewsJSON.length());
    for (int i=0; i < viewsJSON.length(); i++) {
      JSONObject currentCountryJSON=viewsJSON.getJSONObject(i);
      String currentCountryCode=currentCountryJSON.getString("country_code");
      int currentCountryViews=currentCountryJSON.getInt("views");
      String flagIcon=null;
      String countryFullName=null;
      JSONObject currentCountryDetails=countryInfoJSON.optJSONObject(currentCountryCode);
      if (currentCountryDetails != null) {
        flagIcon=currentCountryDetails.optString("flag_icon");
        countryFullName=currentCountryDetails.optString("country_full");
      }
      GeoviewModel m=new GeoviewModel(currentCountryCode,countryFullName,currentCountryViews,flagIcon);
      countries.add(m);
    }
    Collections.sort(countries,new java.util.Comparator<GeoviewModel>(){
      public int compare(      GeoviewModel o1,      GeoviewModel o2){
        return o2.getViews() - o1.getViews();
      }
    }
);
  }
}
