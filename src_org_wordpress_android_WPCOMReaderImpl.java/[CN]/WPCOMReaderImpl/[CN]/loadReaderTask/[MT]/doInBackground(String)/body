{
  if (WordPress.currentBlog == null) {
    try {
      WordPress.currentBlog=new Blog(WordPress.wpDB.getLastBlogID(getActivity().getApplicationContext()),getActivity().getApplicationContext());
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
  loginURL=WordPress.currentBlog.getUrl().replace("xmlrpc.php","wp-login.php");
  if (WordPress.currentBlog.getUrl().lastIndexOf("/") != -1)   loginURL=WordPress.currentBlog.getUrl().substring(0,WordPress.currentBlog.getUrl().lastIndexOf("/")) + "/wp-login.php";
 else   loginURL=WordPress.currentBlog.getUrl().replace("xmlrpc.php","wp-login.php");
  String readerURL=WPCOMReaderImpl.this.getAuthorizeHybridURL(Constants.readerURL_v3);
  if ((getResources().getConfiguration().screenLayout & Configuration.SCREENLAYOUT_SIZE_MASK) == 4) {
    if (readerURL.contains("?"))     readerURL+="&per_page=20";
 else     readerURL+="?per_page=20";
  }
  try {
    String responseContent="<head>" + "<script type=\"text/javascript\">" + "function submitform(){document.loginform.submit();} </script>"+ "</head>"+ "<body onload=\"submitform()\">"+ "<form style=\"visibility:hidden;\" name=\"loginform\" id=\"loginform\" action=\"" + loginURL + "\" method=\"post\">"+ "<input type=\"text\" name=\"log\" id=\"user_login\" value=\""+ WordPress.currentBlog.getUsername()+ "\"/></label>"+ "<input type=\"password\" name=\"pwd\" id=\"user_pass\" value=\""+ WordPress.currentBlog.getPassword()+ "\" /></label>"+ "<input type=\"submit\" name=\"wp-submit\" id=\"wp-submit\" value=\"Log In\" />"+ "<input type=\"hidden\" name=\"redirect_to\" value=\""+ readerURL+ "\" />"+ "</form>"+ "</body>";
    wv.setWebViewClient(new WebViewClient(){
      @Override public void onPageStarted(      WebView view,      String url,      Bitmap favicon){
        if (url.equalsIgnoreCase(Constants.readerDetailURL)) {
          view.stopLoading();
          wv.loadUrl("javascript:Reader2.get_loaded_items();");
          onPostSelectedListener.onPostSelected(url);
        }
 else {
          startRotatingRefreshIcon();
        }
      }
      @Override public void onPageFinished(      WebView view,      String url){
        stopRotatingRefreshIcon();
      }
      @Override public boolean shouldOverrideUrlLoading(      WebView view,      String url){
        return false;
      }
    }
);
    wv.loadData(Uri.encode(responseContent),"text/html",HTTP.UTF_8);
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
  return null;
}
