{
  PreferenceScreen rootScreen=(PreferenceScreen)findPreference("wp_pref_root");
  rootScreen.addPreference(mNotificationsGroup);
  PreferenceCategory notificationTypesCategory=(PreferenceCategory)findPreference("wp_pref_notification_types");
  SharedPreferences settings=PreferenceManager.getDefaultSharedPreferences(this);
  String settingsJson=settings.getString("wp_pref_notification_settings",null);
  if (settingsJson == null) {
    rootScreen.removePreference(mNotificationsGroup);
    return;
  }
 else {
    try {
      Gson gson=new Gson();
      mNotificationSettings=gson.fromJson(settingsJson,HashMap.class);
      StringMap<?> mutedBlogsMap=(StringMap<?>)mNotificationSettings.get("muted_blogs");
      mMutedBlogsList=(ArrayList<StringMap<Double>>)mutedBlogsMap.get("value");
      Collections.sort(mMutedBlogsList,this.BlogNameComparatorForMutedBlogsList);
      Object[] mTypeList=mNotificationSettings.keySet().toArray();
      for (int i=0; i < mTypeList.length; i++) {
        if (!mTypeList[i].equals("muted_blogs") && !mTypeList[i].equals("mute_until")) {
          StringMap<?> typeMap=(StringMap<?>)mNotificationSettings.get(mTypeList[i].toString());
          CheckBoxPreference typePreference=new CheckBoxPreference(this);
          typePreference.setKey(mTypeList[i].toString());
          typePreference.setChecked(MapUtils.getMapBool(typeMap,"value"));
          typePreference.setTitle(typeMap.get("desc").toString());
          typePreference.setOnPreferenceChangeListener(mTypeChangeListener);
          notificationTypesCategory.addPreference(typePreference);
        }
      }
      PreferenceCategory selectBlogsCategory=(PreferenceCategory)findPreference("wp_pref_notification_blogs");
      for (int i=0; i < mMutedBlogsList.size(); i++) {
        StringMap<?> blogMap=(StringMap<?>)mMutedBlogsList.get(i);
        String blogName=(String)blogMap.get("blog_name");
        if (blogName == null || blogName.trim().equals(""))         blogName=(String)blogMap.get("url");
        CheckBoxPreference blogPreference=new CheckBoxPreference(this);
        blogPreference.setChecked(!MapUtils.getMapBool(blogMap,"value"));
        blogPreference.setTitle(StringUtils.unescapeHTML(blogName));
        blogPreference.setOnPreferenceChangeListener(mMuteBlogChangeListener);
        selectBlogsCategory.addPreference(blogPreference);
      }
    }
 catch (    JsonSyntaxException e) {
      Log.v("WORDPRESS","Notification Settings Json could not be parsed.");
      return;
    }
catch (    Exception e) {
      Log.v("WORDPRESS","Failed to load notification settings.");
      return;
    }
    CheckBoxPreference notificationsEnabledCheckBox=(CheckBoxPreference)findPreference("wp_pref_notifications_enabled");
    notificationsEnabledCheckBox.setOnPreferenceChangeListener(mNotificationsEnabledChangeListener);
  }
}
