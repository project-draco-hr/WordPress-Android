{
  super.onCreate(icicle);
  overridePendingTransition(R.anim.slide_up,R.anim.do_nothing);
  setTitle(getResources().getText(R.string.settings));
  ActionBar ab=getSupportActionBar();
  ab.setDisplayHomeAsUpEnabled(true);
  addPreferencesFromResource(R.xml.preferences);
  mNotificationsGroup=(PreferenceGroup)findPreference("wp_pref_notifications_category");
  preferenceChangeListener=new OnPreferenceChangeListener(){
    @Override public boolean onPreferenceChange(    Preference preference,    Object newValue){
      preference.setSummary(newValue.toString());
      return true;
    }
  }
;
  taglineTextPreference=(EditTextPreference)findPreference("wp_pref_post_signature");
  taglineTextPreference.setOnPreferenceChangeListener(preferenceChangeListener);
  Preference signOutPreference=(Preference)findPreference("wp_pref_sign_out");
  signOutPreference.setOnPreferenceClickListener(signOutPreferenceClickListener);
  mSettings=PreferenceManager.getDefaultSharedPreferences(this);
  if (WordPress.hasValidWPComCredentials(PreferencesActivity.this)) {
    String settingsJson=mSettings.getString("wp_pref_notification_settings",null);
    if (settingsJson == null) {
      com.wordpress.rest.RestRequest.Listener listener=new RestRequest.Listener(){
        @Override public void onResponse(        JSONObject jsonObject){
          ReaderLog.d("token action succeeded");
          Editor editor=mSettings.edit();
          try {
            JSONObject settingsJSON=jsonObject.getJSONObject("settings");
            editor.putString("wp_pref_notification_settings",settingsJSON.toString());
            editor.commit();
          }
 catch (          JSONException e) {
            e.printStackTrace();
          }
          refreshWPComAuthCategory();
        }
      }
;
      RestRequest.ErrorListener errorListener=new RestRequest.ErrorListener(){
        @Override public void onErrorResponse(        VolleyError volleyError){
          ReaderLog.w("blog action failed");
          ReaderLog.e(volleyError);
        }
      }
;
      NotificationUtils.getPushNotificationSettings(PreferencesActivity.this,listener,errorListener);
    }
  }
  if (AppLockManager.getInstance().isAppLockFeatureEnabled() == false) {
    PreferenceScreen rootScreen=(PreferenceScreen)findPreference("wp_pref_root");
    PreferenceGroup passcodeGroup=(PreferenceGroup)findPreference("wp_passcode_lock_category");
    rootScreen.removePreference(passcodeGroup);
  }
 else {
    final CheckBoxPreference passcodeEnabledCheckBoxPreference=(CheckBoxPreference)findPreference("wp_pref_passlock_enabled");
    passcodeEnabledCheckBoxPreference.setOnPreferenceClickListener(new OnPreferenceClickListener(){
      @Override public boolean onPreferenceClick(      Preference preference){
        passcodeEnabledCheckBoxPreference.setChecked(AppLockManager.getInstance().getCurrentAppLock().isPasswordLocked());
        return false;
      }
    }
);
  }
  displayPreferences();
}
