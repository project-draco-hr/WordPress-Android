{
  boolean returnValue=false;
  if (postValues.size() != 0) {
    db=ctx.openOrCreateDatabase(DATABASE_NAME,0,null);
    db.delete(POSTS_TABLE,"blogID=" + blogID + " AND uploaded=1 AND isPage="+ ((isPage) ? 1 : 0),null);
    for (int i=0; i < postValues.size(); i++) {
      ContentValues values=new ContentValues();
      HashMap<?,?> thisHash=(HashMap<?,?>)postValues.get(i);
      values.put("blogID",blogID);
      String postID=thisHash.get((isPage) ? "page_id" : "postid").toString();
      values.put("postid",postID);
      values.put("title",thisHash.get("title").toString());
      Date d=(Date)thisHash.get("dateCreated");
      values.put("dateCreated",d.getTime());
      d=(Date)thisHash.get("date_created_gmt");
      values.put("date_created_gmt",d.getTime());
      values.put("description",thisHash.get("description").toString());
      values.put("link",thisHash.get("link").toString());
      values.put("permaLink",thisHash.get("permaLink").toString());
      values.put("categories",thisHash.get("categories").toString());
      values.put("uploaded",true);
      Object[] categoriesArray=(Object[])thisHash.get("categories");
      JSONArray jsonArray=new JSONArray();
      if (categoriesArray.length > 0) {
        for (int x=0; x < categoriesArray.length; x++) {
          jsonArray.put(categoriesArray[x].toString());
        }
      }
      values.put("categories",jsonArray.toString());
      Object[] custom_fields=(Object[])thisHash.get("custom_fields");
      jsonArray=new JSONArray();
      if (custom_fields != null) {
        for (int x=0; x < custom_fields.length; x++) {
          jsonArray.put(custom_fields[x].toString());
        }
      }
      values.put("custom_fields",jsonArray.toString());
      values.put("mt_excerpt",thisHash.get((isPage) ? "excerpt" : "mt_excerpt").toString());
      values.put("mt_text_more",thisHash.get((isPage) ? "text_more" : "mt_text_more").toString());
      values.put("mt_allow_comments",(Integer)thisHash.get("mt_allow_comments"));
      values.put("mt_allow_pings",(Integer)thisHash.get("mt_allow_pings"));
      values.put("wp_slug",thisHash.get("wp_slug").toString());
      values.put("wp_password",thisHash.get("wp_password").toString());
      values.put("wp_author_id",thisHash.get("wp_author_id").toString());
      values.put("wp_author_display_name",thisHash.get("wp_author_display_name").toString());
      values.put("post_status",thisHash.get((isPage) ? "page_status" : "post_status").toString());
      values.put("userid",thisHash.get("userid").toString());
      if (isPage) {
        values.put("isPage",true);
        values.put("wp_page_parent_id",thisHash.get("wp_page_parent_id").toString());
        values.put("wp_page_parent_title",thisHash.get("wp_page_parent_title").toString());
      }
 else {
        values.put("mt_keywords",thisHash.get("mt_keywords").toString());
        values.put("wp_post_format",thisHash.get("wp_post_format").toString());
      }
      returnValue=db.insert(POSTS_TABLE,null,values) > 0;
    }
    db.close();
  }
  return (returnValue);
}
