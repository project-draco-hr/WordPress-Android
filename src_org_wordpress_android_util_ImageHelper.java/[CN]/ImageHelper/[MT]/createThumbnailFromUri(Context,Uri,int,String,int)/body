{
  if (context == null || imageUri == null)   return null;
  String filePath=null;
  if (imageUri.toString().contains("content:")) {
    String[] projection=new String[]{Images.Media.DATA};
    Cursor cur=context.getContentResolver().query(imageUri,projection,null,null,null);
    if (cur != null) {
      if (cur.moveToFirst()) {
        int dataColumn=cur.getColumnIndex(Images.Media.DATA);
        filePath=cur.getString(dataColumn);
      }
      cur.close();
    }
  }
  if (TextUtils.isEmpty(filePath)) {
    filePath=imageUri.toString().replace("content://media","");
    filePath=filePath.replace("file://","");
  }
  BitmapFactory.Options optBounds=new BitmapFactory.Options();
  optBounds.inJustDecodeBounds=true;
  try {
    BitmapFactory.decodeFile(filePath,optBounds);
  }
 catch (  OutOfMemoryError e) {
    WPMobileStatsUtil.trackEventForSelfHostedAndWPCom(WPMobileStatsUtil.StatsEventMediaOutOfMemory);
    return null;
  }
  int scale=1;
  if (maxWidth > 0 && optBounds.outWidth > maxWidth) {
    double d=Math.pow(2,(int)Math.round(Math.log(maxWidth / (double)optBounds.outWidth) / Math.log(0.5)));
    scale=(int)d;
  }
  BitmapFactory.Options optActual=new BitmapFactory.Options();
  optActual.inSampleSize=scale;
  Bitmap bmpResized;
  try {
    bmpResized=BitmapFactory.decodeFile(filePath,optActual);
  }
 catch (  OutOfMemoryError e) {
    WPMobileStatsUtil.trackEventForSelfHostedAndWPCom(WPMobileStatsUtil.StatsEventMediaOutOfMemory);
    return null;
  }
  if (bmpResized == null)   return null;
  ByteArrayOutputStream stream=new ByteArrayOutputStream();
  float percentage=(float)maxWidth / bmpResized.getWidth();
  float proportionateHeight=bmpResized.getHeight() * percentage;
  int finalHeight=(int)Math.rint(proportionateHeight);
  float scaleWidth=((float)maxWidth) / bmpResized.getWidth();
  float scaleHeight=((float)finalHeight) / bmpResized.getHeight();
  float scaleBy=Math.min(scaleWidth,scaleHeight);
  Matrix matrix=new Matrix();
  matrix.postScale(scaleBy,scaleBy);
  if (rotation != 0) {
    matrix.setRotate(rotation);
  }
  Bitmap.CompressFormat fmt;
  if (fileExtension != null && fileExtension.equalsIgnoreCase("png")) {
    fmt=Bitmap.CompressFormat.PNG;
  }
 else {
    fmt=Bitmap.CompressFormat.JPEG;
  }
  final Bitmap bmpRotated;
  try {
    bmpRotated=Bitmap.createBitmap(bmpResized,0,0,bmpResized.getWidth(),bmpResized.getHeight(),matrix,true);
  }
 catch (  OutOfMemoryError e) {
    CrashlyticsUtils.setInt(ExtraKey.IMAGE_ANGLE,rotation);
    CrashlyticsUtils.setInt(ExtraKey.IMAGE_WIDTH,bmpResized.getWidth());
    CrashlyticsUtils.setInt(ExtraKey.IMAGE_HEIGHT,bmpResized.getHeight());
    CrashlyticsUtils.setFloat(ExtraKey.IMAGE_RESIZE_SCALE,scaleBy);
    CrashlyticsUtils.logException(e,ExceptionType.SPECIFIC,T.UTILS);
    return null;
  }
  bmpRotated.compress(fmt,100,stream);
  bmpResized.recycle();
  bmpRotated.recycle();
  return stream.toByteArray();
}
