{
  if (mImageType == ImageType.NONE) {
    return;
  }
  int width=getWidth();
  int height=getHeight();
  ScaleType scaleType=getScaleType();
  boolean wrapWidth=false, wrapHeight=false;
  if (getLayoutParams() != null) {
    wrapWidth=getLayoutParams().width == LayoutParams.WRAP_CONTENT;
    wrapHeight=getLayoutParams().height == LayoutParams.WRAP_CONTENT;
  }
  boolean isFullyWrapContent=wrapWidth && wrapHeight;
  if (width == 0 && height == 0 && !isFullyWrapContent && mImageType != ImageType.GONE_UNTIL_AVAILABLE) {
    return;
  }
  if (TextUtils.isEmpty(mUrl)) {
    if (mImageContainer != null) {
      mImageContainer.cancelRequest();
      mImageContainer=null;
    }
    showErrorImage();
    return;
  }
  if (mImageContainer != null && mImageContainer.getRequestUrl() != null) {
    if (mImageContainer.getRequestUrl().equals(mUrl)) {
      if (mImageType != ImageType.GONE_UNTIL_AVAILABLE) {
        return;
      }
    }
 else {
      mImageContainer.cancelRequest();
      showDefaultImage();
    }
  }
  if (mUrlSkipList.contains(mUrl)) {
    AppLog.d(AppLog.T.UTILS,"skipping image request " + mUrl);
    showErrorImage();
    return;
  }
  int maxWidth=wrapWidth ? 0 : width;
  int maxHeight=wrapHeight ? 0 : height;
  ImageLoader.ImageContainer newContainer=WordPress.imageLoader.get(mUrl,new ImageLoader.ImageListener(){
    @Override public void onErrorResponse(    VolleyError error){
      showErrorImage();
      int statusCode=VolleyUtils.statusCodeFromVolleyError(error);
      if (statusCode == 404) {
        mUrlSkipList.add(mUrl);
      }
    }
    @Override public void onResponse(    final ImageLoader.ImageContainer response,    boolean isImmediate){
      if (isImmediate && isInLayoutPass) {
        post(new Runnable(){
          @Override public void run(){
            handleResponse(response,true);
          }
        }
);
      }
 else {
        handleResponse(response,isImmediate);
      }
    }
  }
,maxWidth,maxHeight,scaleType);
  mImageContainer=newContainer;
}
