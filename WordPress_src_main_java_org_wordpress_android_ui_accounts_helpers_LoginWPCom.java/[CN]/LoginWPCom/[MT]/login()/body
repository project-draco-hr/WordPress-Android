{
  WordPress.requestQueue.add(makeOAuthRequest(mUsername,mPassword,new Oauth.Listener(){
    @SuppressLint("CommitPrefEdits") @Override public void onResponse(    final Oauth.Token token){
      if (mJetpackBlog != null) {
        mJetpackBlog.setApi_key(token.toString());
        WordPress.wpDB.saveBlog(mJetpackBlog);
      }
      SharedPreferences settings=PreferenceManager.getDefaultSharedPreferences(WordPress.getContext());
      SharedPreferences.Editor editor=settings.edit();
      String existingUsername=settings.getString(WordPress.WPCOM_USERNAME_PREFERENCE,null);
      if (settings.contains(WordPress.IS_SIGNED_OUT_PREFERENCE) && existingUsername != null && !existingUsername.equals(mUsername)) {
        WordPress.wpDB.dangerouslyDeleteAllContent();
        WordPress.removeWpComUserRelatedData(WordPress.getContext());
        existingUsername=null;
        WordPress.currentBlog=null;
      }
      SimperiumUtils.configureSimperium(WordPress.getContext(),token.toString());
      if (mJetpackBlog == null || TextUtils.isEmpty(existingUsername)) {
        editor.putString(WordPress.WPCOM_USERNAME_PREFERENCE,mUsername);
        editor.putString(WordPress.ACCESS_TOKEN_PREFERENCE,token.toString());
      }
      editor.remove(WordPress.IS_SIGNED_OUT_PREFERENCE);
      editor.apply();
      mCallback.onSuccess();
    }
  }
,new Oauth.ErrorListener(){
    @Override public void onErrorResponse(    VolleyError volleyError){
      JSONObject errorObject=VolleyUtils.volleyErrorToJSON(volleyError);
      int errorMsgId=restLoginErrorToMsgId(errorObject);
      mCallback.onError(errorMsgId,errorMsgId == R.string.account_two_step_auth_enabled,false,false);
    }
  }
));
}
