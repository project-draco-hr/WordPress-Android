{
  super.onActivityResult(requestCode,resultCode,data);
  if (resultCode == RESULT_CANCELED) {
    if (option != null) {
      Intent intent=new Intent();
      setResult(Activity.RESULT_CANCELED,intent);
      finish();
    }
    return;
  }
  if (data != null || ((requestCode == 1 || requestCode == 3))) {
    Bundle extras;
switch (requestCode) {
case 0:
      Uri imageUri=data.getData();
    String imgPath=imageUri.toString();
  addMedia(imgPath,imageUri);
break;
case 1:
if (resultCode == Activity.RESULT_OK) {
File f=new File(SD_CARD_TEMP_DIR);
try {
  Uri capturedImage=Uri.parse(android.provider.MediaStore.Images.Media.insertImage(getContentResolver(),f.getAbsolutePath(),null,null));
  Log.i("camera","Selected image: " + capturedImage.toString());
  f.delete();
  addMedia(capturedImage.toString(),capturedImage);
}
 catch (FileNotFoundException e) {
}
catch (Exception e) {
}
}
break;
case 2:
Uri videoUri=data.getData();
String videoPath=videoUri.toString();
addMedia(videoPath,videoUri);
break;
case 3:
if (resultCode == Activity.RESULT_OK) {
Uri capturedVideo=data.getData();
addMedia(capturedVideo.toString(),capturedVideo);
}
break;
case 4:
try {
extras=data.getExtras();
String linkURL=extras.getString("linkURL");
if (!linkURL.equals("http://") && !linkURL.equals("")) {
WPEditText contentText=(WPEditText)findViewById(R.id.postContent);
if (selectionStart > selectionEnd) {
int temp=selectionEnd;
selectionEnd=selectionStart;
selectionStart=temp;
}
Editable str=contentText.getText();
if (localDraft) {
if (extras.getString("linkText") == null) {
if (selectionStart < selectionEnd) str.delete(selectionStart,selectionEnd);
str.insert(selectionStart,linkURL);
str.setSpan(new URLSpan(linkURL),selectionStart,selectionStart + linkURL.length(),Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
contentText.setSelection(selectionStart + linkURL.length());
}
 else {
String linkText=extras.getString("linkText");
if (selectionStart < selectionEnd) str.delete(selectionStart,selectionEnd);
str.insert(selectionStart,linkText);
str.setSpan(new URLSpan(linkURL),selectionStart,selectionStart + linkText.length(),Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
contentText.setSelection(selectionStart + linkText.length());
}
}
 else {
if (extras.getString("linkText") == null) {
if (selectionStart < selectionEnd) str.delete(selectionStart,selectionEnd);
String urlHTML="<a href=\"" + linkURL + "\">"+ linkURL+ "</a>";
str.insert(selectionStart,urlHTML);
contentText.setSelection(selectionStart + urlHTML.length());
}
 else {
String linkText=extras.getString("linkText");
if (selectionStart < selectionEnd) str.delete(selectionStart,selectionEnd);
String urlHTML="<a href=\"" + linkURL + "\">"+ linkText+ "</a>";
str.insert(selectionStart,urlHTML);
contentText.setSelection(selectionStart + urlHTML.length());
}
}
}
}
 catch (Exception e) {
e.printStackTrace();
}
break;
case 5:
extras=data.getExtras();
String cats=extras.getString("selectedCategories");
String[] splitCats=cats.split(",");
categories=new JSONArray();
for (int i=0; i < splitCats.length; i++) {
categories.put(splitCats[i]);
}
TextView selectedCategoriesTV=(TextView)findViewById(R.id.selectedCategories);
selectedCategoriesTV.setText(getResources().getText(R.string.selected_categories) + " " + getCategoriesCSV());
break;
}
}
}
