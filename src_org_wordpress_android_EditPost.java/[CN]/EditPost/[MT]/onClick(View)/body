{
switch (v.getId()) {
case R.id.bold:
    formatBtnClick(mBoldToggleButton,"strong");
  break;
case R.id.em:
formatBtnClick(mEmToggleButton,"em");
break;
case R.id.underline:
formatBtnClick(mUnderlineToggleButton,"u");
break;
case R.id.strike:
formatBtnClick(mStrikeToggleButton,"strike");
break;
case R.id.bquote:
formatBtnClick(mBquoteToggleButton,"blockquote");
break;
case R.id.more:
mSelectionEnd=mContentEditText.getSelectionEnd();
Editable str=mContentEditText.getText();
str.insert(mSelectionEnd,"\n<!--more-->\n");
break;
case R.id.link:
mSelectionStart=mContentEditText.getSelectionStart();
mStyleStart=mSelectionStart;
mSelectionEnd=mContentEditText.getSelectionEnd();
if (mSelectionStart > mSelectionEnd) {
int temp=mSelectionEnd;
mSelectionEnd=mSelectionStart;
mSelectionStart=temp;
}
Intent i=new Intent(EditPost.this,Link.class);
if (mSelectionEnd > mSelectionStart) {
String selectedText=mContentEditText.getText().subSequence(mSelectionStart,mSelectionEnd).toString();
i.putExtra("selectedText",selectedText);
}
startActivityForResult(i,ACTIVITY_REQUEST_CODE_CREATE_LINK);
break;
case R.id.addPictureButton:
mAddPictureButton.performLongClick();
break;
case R.id.pubDateButton:
showDialog(ID_DIALOG_DATE);
break;
case R.id.selectCategories:
Bundle bundle=new Bundle();
bundle.putInt("id",mBlogID);
if (mCategories.length() > 0) {
bundle.putString("categoriesCSV",getCategoriesCSV());
}
Intent i1=new Intent(EditPost.this,SelectCategories.class);
i1.putExtras(bundle);
startActivityForResult(i1,ACTIVITY_REQUEST_CODE_SELECT_CATEGORIES);
break;
case R.id.post:
if (mAutoSaveHandler != null) mAutoSaveHandler.removeCallbacks(autoSaveRunnable);
if (savePost(false)) {
if (mPost.isUploaded() || !mPost.getPost_status().equals("localdraft")) {
if (mOption != null) {
if (mOption.equals("newphoto") || mOption.equals("photolibrary")) mPost.setQuickPostType("QuickPhoto");
 else if (mOption.equals("newvideo") || mOption.equals("videolibrary")) mPost.setQuickPostType("QuickVideo");
}
mPost.upload();
}
finish();
}
break;
case R.id.viewMap:
Double latitude=0.0;
try {
latitude=mCurrentLocation.getLatitude();
}
 catch (Exception e) {
e.printStackTrace();
}
if (latitude != 0.0) {
String uri="geo:" + latitude + ","+ mCurrentLocation.getLongitude();
startActivity(new Intent(android.content.Intent.ACTION_VIEW,Uri.parse(uri)));
}
 else {
Toast.makeText(EditPost.this,getResources().getText(R.string.location_toast),Toast.LENGTH_SHORT).show();
}
break;
case R.id.updateLocation:
mLocationHelper.getLocation(EditPost.this,locationResult);
break;
case R.id.removeLocation:
if (mCurrentLocation != null) {
mCurrentLocation.setLatitude(0.0);
mCurrentLocation.setLongitude(0.0);
}
if (mPost != null) {
mPost.setLatitude(0.0);
mPost.setLongitude(0.0);
}
mLocationText.setText("");
break;
}
}
