{
  Intent intent=getIntent();
  String text=intent.getStringExtra(Intent.EXTRA_TEXT);
  String title=intent.getStringExtra(Intent.EXTRA_SUBJECT);
  if (text != null) {
    EditText titleET=(EditText)findViewById(R.id.title);
    if (title != null) {
      titleET.setText(title);
    }
    EditText contentET=(EditText)findViewById(R.id.content);
    if (text.contains("youtube_gdata")) {
      text=text.replace("feature=youtube_gdata","");
      text=text.replace("&","");
      text=text.replace("_player","");
      text=text.replace("watch?v=","v/");
      text="<object width=\"480\" height=\"385\"><param name=\"movie\" value=\"" + text + "\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\""+ text+ "\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" allowfullscreen=\"true\" width=\"480\" height=\"385\"></embed></object>";
      contentET.setText(text);
    }
 else {
      String[] parts=text.split("\\s");
      String finalText="";
      for (      String item : parts)       try {
        URL url=new URL(item);
        finalText+="<a href=\"" + url + "\">"+ url+ "</a> ";
        contentET.setText(Html.fromHtml(finalText));
        isUrl=true;
      }
 catch (      MalformedURLException e) {
        finalText+=item + " ";
        contentET.setText(finalText);
      }
    }
  }
 else {
    String action=intent.getAction();
    final String type=intent.getType();
    final ArrayList<Uri> multi_stream;
    if (Intent.ACTION_SEND_MULTIPLE.equals(action)) {
      multi_stream=intent.getParcelableArrayListExtra((Intent.EXTRA_STREAM));
    }
 else {
      multi_stream=new ArrayList<Uri>();
      multi_stream.add((Uri)intent.getParcelableExtra(Intent.EXTRA_STREAM));
    }
    Vector<Serializable> params=new Vector<Serializable>();
    params.add(multi_stream);
    params.add(type);
    new processAttachmentsTask().execute(params);
  }
}
