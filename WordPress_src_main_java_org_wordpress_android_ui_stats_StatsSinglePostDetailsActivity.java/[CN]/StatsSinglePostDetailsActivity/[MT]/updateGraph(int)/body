{
  final VisitModel[] dataToShowOnGraph=getDataToShowOnGraph();
  final String[] horLabels=new String[dataToShowOnGraph.length];
  String[] mStatsDate=new String[dataToShowOnGraph.length];
  GraphView.GraphViewData[] views=new GraphView.GraphViewData[dataToShowOnGraph.length];
  boolean isEmptyGraph=true;
  for (int i=0; i < dataToShowOnGraph.length; i++) {
    int currentItemValue=0;
    currentItemValue=dataToShowOnGraph[i].getViews();
    views[i]=new GraphView.GraphViewData(i,currentItemValue);
    String currentItemStatsDate=dataToShowOnGraph[i].getPeriod();
    horLabels[i]=StatsUtils.parseDate(currentItemStatsDate,"yyyy-MM-dd","MMM d");
    mStatsDate[i]=currentItemStatsDate;
    if (currentItemValue > 0) {
      isEmptyGraph=false;
    }
  }
  mCurrentSeriesOnScreen=new GraphViewSeries(views);
  mCurrentSeriesOnScreen.getStyle().color=getResources().getColor(R.color.stats_bar_graph_views);
  mCurrentSeriesOnScreen.getStyle().padding=DisplayUtils.dpToPx(this,1);
  if (isEmptyGraph) {
    setupEmptyGraph();
  }
 else {
    if (mGraphContainer.getChildCount() >= 1 && mGraphContainer.getChildAt(0) instanceof GraphView) {
      mGraphView=(StatsBarGraph)mGraphContainer.getChildAt(0);
    }
 else {
      mGraphContainer.removeAllViews();
      mGraphView=new StatsBarGraph(this);
      mGraphContainer.addView(mGraphView);
    }
    if (mGraphView != null) {
      mGraphView.removeAllSeries();
      mGraphView.addSeries(mCurrentSeriesOnScreen);
      mGraphView.getGraphViewStyle().setNumHorizontalLabels(dataToShowOnGraph.length);
      mGraphView.setHorizontalLabels(horLabels);
      if (barToHighlight != -1) {
        mGraphView.highlightBar(barToHighlight);
      }
 else {
        mGraphView.highlightBar(dataToShowOnGraph.length - 1);
      }
    }
  }
  if (mRestResponseParsed.getOriginalResponse() != null) {
    mWholeResponse.setText(mRestResponseParsed.getOriginalResponse().toString());
  }
}
