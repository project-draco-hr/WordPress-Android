{
  final StatsViewHolder holder;
  if (convertView == null) {
    convertView=inflater.inflate(R.layout.stats_list_cell,parent,false);
    holder=new StatsViewHolder(convertView);
    convertView.setTag(holder);
  }
 else {
    holder=(StatsViewHolder)convertView.getTag();
  }
  PostViewsModel.Week week=(PostViewsModel.Week)getGroup(groupPosition);
  int total=week.getTotal();
  int numberOfChilds=getChildrenCount(groupPosition);
  boolean shouldShowTheTrophyIcon=false;
  if (maxReachedValue > 0) {
    for (int i=0; i < numberOfChilds; i++) {
      PostViewsModel.Day currentChild=(PostViewsModel.Day)getChild(groupPosition,i);
      if (currentChild.getCount() == maxReachedValue) {
        shouldShowTheTrophyIcon=true;
      }
    }
  }
  String name;
  PostViewsModel.Day firstChild=(PostViewsModel.Day)getChild(groupPosition,0);
  if (numberOfChilds > 1) {
    PostViewsModel.Day lastChild=(PostViewsModel.Day)getChild(groupPosition,getChildrenCount(groupPosition) - 1);
    name=StatsUtils.parseDate(firstChild.getDay(),"yyyy-MM-dd","MMM dd") + " - " + StatsUtils.parseDate(lastChild.getDay(),"yyyy-MM-dd","MMM dd");
  }
 else {
    name=StatsUtils.parseDate(firstChild.getDay(),"yyyy-MM-dd","MMM dd");
  }
  holder.setEntryText(name,getResources().getColor(R.color.stats_link_text_color));
  holder.networkImageView.setVisibility(View.GONE);
  holder.totalsTextView.setText(FormatUtils.formatDecimal(total));
  if (shouldShowTheTrophyIcon) {
    holder.imgMore.setVisibility(View.VISIBLE);
    holder.imgMore.setImageDrawable(getResources().getDrawable(R.drawable.ic_action_like_active));
    holder.imgMore.setBackgroundColor(Color.TRANSPARENT);
  }
 else {
    holder.imgMore.setVisibility(View.GONE);
  }
  holder.chevronImageView.setVisibility(numberOfChilds > 0 ? View.VISIBLE : View.GONE);
  return convertView;
}
