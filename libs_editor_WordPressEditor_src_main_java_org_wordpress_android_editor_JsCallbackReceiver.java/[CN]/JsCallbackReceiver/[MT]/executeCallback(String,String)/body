{
switch (callbackId) {
case CALLBACK_DOM_LOADED:
    mListener.onDomLoaded();
  break;
case CALLBACK_SELECTION_STYLE:
Set<String> newStyleSet=Utils.splitDelimitedString(params,JS_CALLBACK_DELIMITER);
mListener.onSelectionStyleChanged(Utils.getChangeMapFromSets(mPreviousStyleSet,newStyleSet));
mPreviousStyleSet=newStyleSet;
break;
case CALLBACK_SELECTION_CHANGED:
Set<String> selectionKeyValueSet=Utils.splitDelimitedString(params,JS_CALLBACK_DELIMITER);
mListener.onSelectionChanged(Utils.buildMapFromKeyValuePairs(selectionKeyValueSet));
break;
case CALLBACK_INPUT:
break;
case CALLBACK_FOCUS_IN:
AppLog.d(AppLog.T.EDITOR,"Focus in callback received");
break;
case CALLBACK_FOCUS_OUT:
AppLog.d(AppLog.T.EDITOR,"Focus out callback received");
break;
case CALLBACK_NEW_FIELD:
AppLog.d(AppLog.T.EDITOR,"New field created, " + params);
break;
case CALLBACK_IMAGE_REPLACED:
AppLog.d(AppLog.T.EDITOR,"Image replaced, " + params);
break;
case CALLBACK_IMAGE_TAP:
AppLog.d(AppLog.T.EDITOR,"Image tapped, " + params);
break;
case CALLBACK_LINK_TAP:
AppLog.d(AppLog.T.EDITOR,"Link tapped, " + params);
break;
case CALLBACK_LOG:
AppLog.d(AppLog.T.EDITOR,callbackId + ": " + params.substring(4));
break;
default :
AppLog.d(AppLog.T.EDITOR,"Unhandled callback: " + callbackId + ":"+ params);
}
}
