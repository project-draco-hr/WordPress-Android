{
  int remoteBlogId=WordPress.wpDB.getRemoteBlogIdForLocalTableBlogId(localTableBlogID);
  WordPress.getRestClientUtils().get("sites/" + remoteBlogId + "/plans",WordPress.getRestLocaleParams(),null,new RestRequest.Listener(){
    @Override public void onResponse(    JSONObject response){
      if (response == null) {
        AppLog.w(AppLog.T.PLANS,"Unexpected empty response from server");
        listener.onError();
        return;
      }
      AppLog.d(AppLog.T.PLANS,response.toString());
      List<SitePlan> plans=new ArrayList<>();
      try {
        JSONArray planIDs=response.names();
        if (planIDs != null) {
          for (int i=0; i < planIDs.length(); i++) {
            String currentKey=planIDs.getString(i);
            JSONObject currentPlanJSON=response.getJSONObject(currentKey);
            SitePlan currentPlan=new SitePlan(Long.valueOf(currentKey),currentPlanJSON,localTableBlogID);
            plans.add(currentPlan);
          }
        }
        listener.onResponse(plans);
      }
 catch (      JSONException e) {
        AppLog.e(AppLog.T.PLANS,"Can't parse the plans list returned from the server",e);
        listener.onError();
      }
    }
  }
,new RestRequest.ErrorListener(){
    @Override public void onErrorResponse(    VolleyError volleyError){
      AppLog.e(AppLog.T.UTILS,"Error downloading site plans",volleyError);
      listener.onError();
    }
  }
);
}
