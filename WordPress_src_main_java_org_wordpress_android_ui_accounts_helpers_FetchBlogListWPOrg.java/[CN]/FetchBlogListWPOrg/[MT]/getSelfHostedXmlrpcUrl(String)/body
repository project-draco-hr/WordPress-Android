{
  ArrayList<String> urlsToTry=smartURLCleanerForXMLRPCCalls(url);
  AppLog.i(T.NUX,"The app will call system.listMethods on the following URLs: " + urlsToTry);
  for (  String currentURL : urlsToTry) {
    boolean isValid=checkXMLRPCEndpointValidity(currentURL);
    if (!isValid) {
      if (mErroneousSslCertificate || mHttpAuthRequired || mErrorMsgId == org.wordpress.android.R.string.xmlrpc_missing_method_error || mErrorMsgId == org.wordpress.android.R.string.invalid_site_url_message) {
        return null;
      }
    }
 else {
      return currentURL;
    }
  }
  AppLog.w(T.NUX,"The XML-RPC endpoint was not found by using our 'smart' cleaning approach. Time to start the Endpoint discovery process");
  urlsToTry=smartURLCleanerForRSD(url);
  AppLog.i(T.NUX,"The app will call the RSD discovery process on the following URLs: " + urlsToTry);
  String xmlrpcUrl=null;
  for (  String currentURL : urlsToTry) {
    try {
      AppLog.i(T.NUX,"Downloading the HTML content at the following URL: " + currentURL);
      String responseHTML=ApiHelper.getResponse(currentURL);
      if (TextUtils.isEmpty(responseHTML)) {
        AppLog.w(T.NUX,"Content downloaded but it's empty or null. Skipping this URL");
        continue;
      }
      String rsdUrl=getRSDMetaTagHrefRegEx(responseHTML);
      if (rsdUrl == null) {
        rsdUrl=getRSDMetaTagHref(responseHTML);
      }
      rsdUrl=UrlUtils.addUrlSchemeIfNeeded(rsdUrl,false);
      if (rsdUrl == null) {
        AppLog.i(T.NUX,"Can't find the RSD endpoint in the HTML document. Try to check the pingback tag, and the apiLink tag.");
        xmlrpcUrl=UrlUtils.addUrlSchemeIfNeeded(getXMLRPCPingback(responseHTML),false);
        if (xmlrpcUrl == null) {
          xmlrpcUrl=UrlUtils.addUrlSchemeIfNeeded(getXMLRPCApiLink(responseHTML),false);
        }
      }
 else {
        AppLog.i(T.NUX,"RSD endpoint found at the following address: " + rsdUrl);
        AppLog.i(T.NUX,"Getting the XML-RPC url by downloading the RSD doc");
        String rsdEndpointDocument=ApiHelper.getResponse(rsdUrl);
        xmlrpcUrl=UrlUtils.addUrlSchemeIfNeeded(getXMLRPCApiLink(rsdEndpointDocument),false);
      }
      if (xmlrpcUrl != null) {
        AppLog.i(T.NUX,"Found the XML-RPC endpoint in the HTML document!!!");
        break;
      }
    }
 catch (    SSLHandshakeException e) {
      if (!WPUrlUtils.isWordPressCom(url)) {
        mErroneousSslCertificate=true;
      }
      AppLog.w(T.NUX,"SSLHandshakeException failed. Erroneous SSL certificate detected.");
      return null;
    }
  }
  if (URLUtil.isValidUrl(xmlrpcUrl)) {
    boolean isValid=checkXMLRPCEndpointValidity(xmlrpcUrl);
    if (!isValid) {
      return null;
    }
 else {
      return xmlrpcUrl;
    }
  }
  return xmlrpcUrl;
}
