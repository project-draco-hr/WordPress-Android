{
  Blog blog;
  try {
    blog=new Blog(id);
  }
 catch (  Exception e1) {
    return;
  }
  client=new XMLRPCClient(blog.getUrl(),blog.getHttpuser(),blog.getHttppassword());
  Map<String,Object> hPost=new HashMap<String,Object>();
  hPost.put("status","");
  hPost.put("post_id","");
  hPost.put("number",30);
  Object[] params={blog.getRemoteBlogId(),blog.getUsername(),blog.getPassword(),hPost};
  Object[] result;
  try {
    result=(Object[])client.call("wp.getComments",params);
  }
 catch (  ClassCastException cce) {
    AppLog.e(T.API,cce);
    result=null;
  }
catch (  XMLRPCException e) {
    AppLog.e(T.API,e);
    result=null;
  }
  if (result != null) {
    if (result.length > 0) {
      String author, postID, commentID, comment, status, authorEmail, authorURL, postTitle;
      Map<Object,Object> contentHash;
      List<Map<String,String>> dbVector=new Vector<Map<String,String>>();
      Date date;
      for (int ctr=0; ctr < result.length; ctr++) {
        Map<String,String> dbValues=new HashMap<String,String>();
        contentHash=(Map<Object,Object>)result[ctr];
        comment=contentHash.get("content").toString();
        author=contentHash.get("author").toString();
        status=contentHash.get("status").toString();
        postID=contentHash.get("post_id").toString();
        commentID=contentHash.get("comment_id").toString();
        date=(Date)contentHash.get("date_created_gmt");
        authorURL=contentHash.get("author_url").toString();
        authorEmail=contentHash.get("author_email").toString();
        postTitle=contentHash.get("post_title").toString();
        String formattedDate=date.toString();
        try {
          int flags=0;
          flags|=DateUtils.FORMAT_SHOW_DATE;
          flags|=DateUtils.FORMAT_ABBREV_MONTH;
          flags|=DateUtils.FORMAT_SHOW_YEAR;
          flags|=DateUtils.FORMAT_SHOW_TIME;
          formattedDate=DateUtils.formatDateTime(ctx,date.getTime(),flags);
        }
 catch (        Exception e) {
        }
        dbValues.put("blogID",String.valueOf(id));
        dbValues.put("postID",postID);
        dbValues.put("commentID",commentID);
        dbValues.put("author",author);
        dbValues.put("comment",comment);
        dbValues.put("commentDate",formattedDate);
        dbValues.put("commentDateFormatted",formattedDate);
        dbValues.put("status",status);
        dbValues.put("url",authorURL);
        dbValues.put("email",authorEmail);
        dbValues.put("postTitle",postTitle);
        dbVector.add(ctr,dbValues);
      }
      WordPress.wpDB.saveComments(dbVector);
    }
  }
}
