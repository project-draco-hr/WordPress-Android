{
  Blog blog=WordPress.getCurrentBlog();
  if (blog == null)   return null;
  XMLRPCClientInterface client=XMLRPCFactory.instantiate(blog.getUri(),blog.getHttpuser(),blog.getHttppassword());
  String author, postID, comment, status, authorEmail, authorURL, postTitle;
  int commentID;
  Map<Integer,Map<?,?>> allComments=new HashMap<Integer,Map<?,?>>();
  Map<?,?> contentHash=new HashMap<Object,Object>();
  List<Map<?,?>> dbVector=new Vector<Map<?,?>>();
  Date d=new Date();
  Object[] result;
  try {
    result=(Object[])client.call("wp.getComments",commentParams);
  }
 catch (  XMLRPCException e) {
    throw new XMLRPCException(e);
  }
  if (result.length == 0)   return null;
  for (int ctr=0; ctr < result.length; ctr++) {
    Map<Object,Object> dbValues=new HashMap<Object,Object>();
    contentHash=(Map<?,?>)result[ctr];
    allComments.put(Integer.parseInt(contentHash.get("comment_id").toString()),contentHash);
    comment=contentHash.get("content").toString();
    author=contentHash.get("author").toString();
    status=contentHash.get("status").toString();
    postID=contentHash.get("post_id").toString();
    commentID=Integer.parseInt(contentHash.get("comment_id").toString());
    Object date=contentHash.get("date_created_gmt");
    if (Date.class.isInstance(date)) {
      d=(Date)date;
    }
 else {
      try {
        d=stringToDate((String)contentHash.get("date_created_gmt"));
      }
 catch (      ParseException e) {
        AppLog.e(T.API,"Can't parse date: " + contentHash.get("date_created_gmt"));
      }
    }
    authorURL=contentHash.get("author_url").toString();
    authorEmail=contentHash.get("author_email").toString();
    postTitle=contentHash.get("post_title").toString();
    String formattedDate=getFormattedCommentDate(ctx,d);
    dbValues.put("blogID",String.valueOf(blog.getLocalTableBlogId()));
    dbValues.put("postID",postID);
    dbValues.put("commentID",commentID);
    dbValues.put("author",author);
    dbValues.put("comment",comment);
    dbValues.put("commentDate",formattedDate);
    dbValues.put("commentDateFormatted",formattedDate);
    dbValues.put("status",status);
    dbValues.put("url",authorURL);
    dbValues.put("email",authorEmail);
    dbValues.put("postTitle",postTitle);
    dbVector.add(ctr,dbValues);
  }
  WordPress.wpDB.saveComments(dbVector);
  return allComments;
}
