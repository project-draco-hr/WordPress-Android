{
  List<?> arguments=params[0];
  WordPress.currentBlog=(Blog)arguments.get(0);
  Blog blog=WordPress.currentBlog;
  if (blog == null) {
    AppLog.e(T.API,"Current blog is null");
    return -1;
  }
  String blogId=String.valueOf(blog.getLocalTableBlogId());
  client=new XMLRPCClient(blog.getUrl(),blog.getHttpuser(),blog.getHttppassword());
  Map<String,Object> filter=new HashMap<String,Object>();
  filter.put("number",50);
  filter.put("offset",mOffset);
  if (mFilter == Filter.IMAGES)   filter.put("mime_type","image/*");
 else   if (mFilter == Filter.UNATTACHED)   filter.put("parent_id",0);
  Object[] apiParams={blog.getRemoteBlogId(),blog.getUsername(),blog.getPassword(),filter};
  Object[] results=null;
  try {
    results=(Object[])client.call("wp.getMediaLibrary",apiParams);
  }
 catch (  XMLRPCException e) {
    AppLog.e(T.API,e.getMessage());
    if (e.getMessage().contains("401")) {
      return NO_UPLOAD_FILES_CAP;
    }
  }
  if (results != null && blogId != null) {
    Map<?,?> resultMap;
    if (mOffset == 0) {
      WordPress.wpDB.setMediaFilesMarkedForDeleted(blogId);
    }
    for (    Object result : results) {
      resultMap=(Map<?,?>)result;
      MediaFile mediaFile=new MediaFile(blogId,resultMap);
      WordPress.wpDB.saveMediaFile(mediaFile);
    }
    WordPress.wpDB.deleteFilesMarkedForDeleted(blogId);
    return results.length;
  }
  return UNKNOWN_ERROR;
}
