{
  boolean commentsOnly=params[0];
  XMLRPCClient client=new XMLRPCClient(mBlog.getUrl(),mBlog.getHttpuser(),mBlog.getHttppassword());
  if (!commentsOnly) {
    Map<String,String> hPost=new HashMap<String,String>();
    hPost.put("software_version","software_version");
    hPost.put("post_thumbnail","post_thumbnail");
    hPost.put("jetpack_client_id","jetpack_client_id");
    hPost.put("blog_public","blog_public");
    hPost.put("home_url","home_url");
    hPost.put("admin_url","admin_url");
    hPost.put("login_url","login_url");
    Object[] vParams={mBlog.getBlogId(),mBlog.getUsername(),mBlog.getPassword(),hPost};
    Object versionResult;
    try {
      versionResult=client.call("wp.getOptions",vParams);
    }
 catch (    XMLRPCException e) {
      return false;
    }
    if (versionResult != null) {
      Map<?,?> blogOptions=(HashMap<?,?>)versionResult;
      updateBlogOptions(blogOptions);
    }
    List<Object> args=new Vector<Object>();
    args.add(mBlog);
    args.add(mContext);
    new getPostFormatsTask().execute(args);
  }
  Object[] userParams={mBlog.getBlogId(),mBlog.getUsername(),mBlog.getPassword()};
  try {
    Map<String,Object> userInfos=(HashMap<String,Object>)client.call("wp.getProfile",userParams);
    updateBlogAdmin(userInfos);
  }
 catch (  XMLRPCException e) {
    return false;
  }
  Map<String,Object> hPost=new HashMap<String,Object>();
  hPost.put("number",30);
  Object[] commentParams={mBlog.getBlogId(),mBlog.getUsername(),mBlog.getPassword(),hPost};
  try {
    ApiHelper.refreshComments(mContext,commentParams);
  }
 catch (  XMLRPCException e) {
    return false;
  }
  return true;
}
