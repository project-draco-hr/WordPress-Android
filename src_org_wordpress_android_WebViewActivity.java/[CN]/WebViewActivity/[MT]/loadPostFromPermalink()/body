{
  WebView wv=(WebView)findViewById(R.id.webView);
  wv.getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE);
  wv.getSettings().setBuiltInZoomControls(true);
  wv.getSettings().setJavaScriptEnabled(true);
  wv.setWebChromeClient(new WebChromeClient(){
    public void onProgressChanged(    WebView view,    int progress){
      WebViewActivity.this.setTitle("Loading...");
      WebViewActivity.this.setProgress(progress * 100);
      if (progress == 100) {
        if (isPage) {
          WebViewActivity.this.setTitle(EscapeUtils.unescapeHtml(WordPress.currentBlog.getBlogName()) + " - " + getResources().getText(R.string.preview_page));
        }
 else {
          WebViewActivity.this.setTitle(EscapeUtils.unescapeHtml(WordPress.currentBlog.getBlogName()) + " - " + getResources().getText(R.string.preview_post));
        }
      }
    }
  }
);
  wv.setWebViewClient(new WordPressWebViewClient());
  if (WordPress.currentPost != null) {
    Post post=WordPress.currentPost;
    String previewUrl=post.getPermaLink();
    boolean isPrivate=false;
    try {
      Gson gson=new Gson();
      Type type=new TypeToken<Map<String,Object>>(){
      }
.getType();
      Map<String,Object> blogOptions=gson.fromJson(WordPress.currentBlog.getBlogOptions(),type);
      StringMap<?> blogPublicOption=(StringMap<?>)blogOptions.get("blog_public");
      String blogPublicOptionValue=blogPublicOption.get("value").toString();
      if (blogPublicOptionValue.equals("-1")) {
        isPrivate=true;
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
    if (isPrivate || post.isLocalDraft() || post.isLocalChange()|| !post.getPost_status().equals("publish")) {
      if (-1 == previewUrl.indexOf('?')) {
        previewUrl=previewUrl.concat("?preview=true");
      }
 else {
        previewUrl=previewUrl.concat("&preview=true");
      }
      if (WordPress.currentBlog.getUrl().lastIndexOf("/") != -1)       loginURL=WordPress.currentBlog.getUrl().substring(0,WordPress.currentBlog.getUrl().lastIndexOf("/")) + "/wp-login.php";
 else       loginURL=WordPress.currentBlog.getUrl().replace("xmlrpc.php","wp-login.php");
      String postData=String.format("log=%s&pwd=%s&redirect_to=%s",WordPress.currentBlog.getUsername(),WordPress.currentBlog.getPassword(),URLEncoder.encode(previewUrl));
      wv.postUrl(loginURL,EncodingUtils.getBytes(postData,"utf-8"));
    }
 else {
      wv.loadUrl(previewUrl);
    }
  }
}
