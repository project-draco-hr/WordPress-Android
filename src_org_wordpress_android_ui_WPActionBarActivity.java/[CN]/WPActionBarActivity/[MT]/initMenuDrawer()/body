{
  mListView=new ListView(this);
  mListView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);
  mListView.setDivider(null);
  mListView.setDividerHeight(0);
  mListView.setCacheColorHint(android.R.color.transparent);
  mAdapter=new MenuAdapter(this);
  String[] blogNames=getBlogNames();
  if (blogNames.length > 1) {
    addBlogSpinner(blogNames);
  }
  LinearLayout settingsFooter=(LinearLayout)getLayoutInflater().inflate(getResources().getLayout(R.layout.menu_footer),null);
  settingsFooter.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      Intent settingsIntent=new Intent(WPActionBarActivity.this,PreferencesActivity.class);
      startActivityForResult(settingsIntent,SETTINGS_REQUEST);
    }
  }
);
  mListView.addFooterView(settingsFooter);
  mListView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      int menuPosition=position - mListView.getHeaderViewsCount();
      if (menuPosition < 0 || menuPosition >= mAdapter.getCount())       return;
      MenuDrawerItem item=mAdapter.getItem(menuPosition);
      if (item.hasItemId()) {
        SharedPreferences settings=PreferenceManager.getDefaultSharedPreferences(WPActionBarActivity.this);
        SharedPreferences.Editor editor=settings.edit();
        editor.putInt(LAST_ACTIVITY_PREFERENCE,item.getItemId());
        editor.commit();
      }
      if (!item.isSelected())       item.selectItem();
      mMenuDrawer.closeMenu();
    }
  }
);
  mListView.setOnScrollListener(new AbsListView.OnScrollListener(){
    @Override public void onScrollStateChanged(    AbsListView view,    int scrollState){
    }
    @Override public void onScroll(    AbsListView view,    int firstVisibleItem,    int visibleItemCount,    int totalItemCount){
      mMenuDrawer.invalidate();
    }
  }
);
  mMenuDrawer.setMenuView(mListView);
  mListView.setAdapter(mAdapter);
  updateMenuDrawer();
}
