{
  mContainer.removeAllViews();
  ReaderImageScanner scanner=new ReaderImageScanner(post.getText(),post.isPrivate);
  final ReaderImageList imageList=new ReaderImageScanner(post.getText(),post.isPrivate).getImageList(ReaderPhotoViewerActivity.MIN_IMAGE_WIDTH);
  if (imageList.size() < MIN_IMAGE_COUNT) {
    fadeOut();
    return;
  }
  int numAdded=0;
  LayoutInflater inflater=LayoutInflater.from(getContext());
  for (  final String imageUrl : imageList) {
    View view=inflater.inflate(R.layout.reader_thumbnail_strip_image,mContainer,false);
    WPNetworkImageView imageView=(WPNetworkImageView)view.findViewById(R.id.thumbnail_strip_image);
    mContainer.addView(view);
    String photonUrl=PhotonUtils.getPhotonImageUrl(imageUrl,mThumbnailSize,mThumbnailSize);
    imageView.setImageUrl(photonUrl,WPNetworkImageView.ImageType.PHOTO);
    numAdded++;
    if (numAdded >= MAX_IMAGE_COUNT) {
      break;
    }
  }
  View labelView=inflater.inflate(R.layout.reader_thumbnail_strip_labels,mContainer,false);
  TextView txtCount=(TextView)labelView.findViewById(R.id.text_gallery_count);
  txtCount.setText(String.format(mCountStr,imageList.size()));
  mContainer.addView(labelView);
  mView.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View view){
      ReaderActivityLauncher.showReaderPhotoViewer(view.getContext(),imageList.get(0),post.getText(),view,post.isPrivate,0,0);
    }
  }
);
  fadeIn();
}
