{
  if (!NetworkUtils.checkConnection(this)) {
    return;
  }
  Fragment fragment=getPagerAdapter().getActiveFragment();
  if (fragment == null) {
    return;
  }
  ReaderActions.ActionListener actionListener=new ReaderActions.ActionListener(){
    @Override public void onActionResult(    boolean succeeded){
      if (!succeeded && !isFinishing()) {
        hideUndoBar();
        ToastUtils.showToast(ReaderPostPagerActivity.this,R.string.reader_toast_err_block_blog,ToastUtils.Duration.LONG);
      }
    }
  }
;
  final BlockedBlogResult blockResult=ReaderBlogActions.blockBlogFromReader(blogId,actionListener);
  AnalyticsTracker.track(AnalyticsTracker.Stat.READER_BLOCKED_BLOG);
  AnimationEndListener animEndListener=new AnimationEndListener(){
    @Override public void onAnimationEnd(){
      blockBlogForPostCompleted(blogId,postId,blockResult);
    }
  }
;
  ReaderAnim.scaleOut(fragment.getView(),View.INVISIBLE,Duration.SHORT,animEndListener);
}
