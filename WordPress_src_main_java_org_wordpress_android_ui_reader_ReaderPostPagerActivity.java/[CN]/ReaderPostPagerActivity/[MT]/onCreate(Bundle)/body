{
  if (isFullScreenSupported()) {
    getWindow().requestFeature(Window.FEATURE_ACTION_BAR_OVERLAY);
  }
  super.onCreate(savedInstanceState);
  setContentView(R.layout.reader_activity_post_pager);
  ActionBar actionBar=getActionBar();
  if (actionBar != null) {
    actionBar.setDisplayShowTitleEnabled(true);
    actionBar.setDisplayHomeAsUpEnabled(true);
  }
  mViewPager=(ViewPager)findViewById(R.id.viewpager);
  final String title;
  final long blogId;
  final long postId;
  if (savedInstanceState != null) {
    title=savedInstanceState.getString(ReaderConstants.ARG_TITLE);
    blogId=savedInstanceState.getLong(ReaderConstants.ARG_BLOG_ID);
    postId=savedInstanceState.getLong(ReaderConstants.ARG_POST_ID);
    mIsSinglePostView=savedInstanceState.getBoolean(ARG_IS_SINGLE_POST);
    if (savedInstanceState.containsKey(ReaderConstants.ARG_POST_LIST_TYPE)) {
      mPostListType=(ReaderPostListType)savedInstanceState.getSerializable(ReaderConstants.ARG_POST_LIST_TYPE);
    }
    if (savedInstanceState.containsKey(ReaderConstants.ARG_TAG)) {
      mCurrentTag=(ReaderTag)savedInstanceState.getSerializable(ReaderConstants.ARG_TAG);
    }
  }
 else {
    title=getIntent().getStringExtra(ReaderConstants.ARG_TITLE);
    blogId=getIntent().getLongExtra(ReaderConstants.ARG_BLOG_ID,0);
    postId=getIntent().getLongExtra(ReaderConstants.ARG_POST_ID,0);
    mIsSinglePostView=getIntent().getBooleanExtra(ARG_IS_SINGLE_POST,false);
    if (getIntent().hasExtra(ReaderConstants.ARG_POST_LIST_TYPE)) {
      mPostListType=(ReaderPostListType)getIntent().getSerializableExtra(ReaderConstants.ARG_POST_LIST_TYPE);
    }
    if (getIntent().hasExtra(ReaderConstants.ARG_TAG)) {
      mCurrentTag=(ReaderTag)getIntent().getSerializableExtra(ReaderConstants.ARG_TAG);
    }
  }
  if (mPostListType == null) {
    mPostListType=ReaderPostListType.TAG_FOLLOWED;
  }
 else   if (mPostListType == ReaderPostListType.BLOG_PREVIEW) {
    mCurrentBlogId=blogId;
  }
  if (!TextUtils.isEmpty(title)) {
    this.setTitle(title);
  }
  loadPosts(blogId,postId,false);
  mViewPager.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener(){
    @Override public void onPageSelected(    int position){
      super.onPageSelected(position);
      onRequestFullScreen(false);
      if (hasPagerAdapter()) {
        Fragment fragment=getPagerAdapter().getFragmentAtPosition(position);
        if (fragment instanceof ReaderPostDetailFragment) {
          AnalyticsTracker.track(AnalyticsTracker.Stat.READER_OPENED_ARTICLE);
        }
 else         if (fragment instanceof ReaderPostPagerEndFragment) {
          if (getPagerAdapter().canRequestMostPosts()) {
            getPagerAdapter().requestMorePosts();
          }
        }
      }
    }
    @Override public void onPageScrollStateChanged(    int state){
      super.onPageScrollStateChanged(state);
      if (state == ViewPager.SCROLL_STATE_DRAGGING) {
        onRequestFullScreen(false);
        ReaderPostDetailFragment fragment=getActiveDetailFragment();
        if (fragment != null) {
          fragment.pauseWebView();
        }
      }
    }
  }
);
  mViewPager.setPageTransformer(false,new PostPageTransformer());
}
