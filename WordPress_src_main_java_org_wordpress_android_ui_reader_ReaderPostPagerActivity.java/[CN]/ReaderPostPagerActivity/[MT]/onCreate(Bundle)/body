{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.reader_activity_post_pager);
  mToolbar=(Toolbar)findViewById(R.id.toolbar);
  setSupportActionBar(mToolbar);
  mToolbar.setNavigationOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      onBackPressed();
    }
  }
);
  getSupportActionBar().setDisplayShowTitleEnabled(true);
  getSupportActionBar().setDisplayHomeAsUpEnabled(true);
  mViewPager=(WPMainViewPager)findViewById(R.id.viewpager);
  mProgress=(ProgressBar)findViewById(R.id.progress_loading);
  final String title;
  if (savedInstanceState != null) {
    title=savedInstanceState.getString(ReaderConstants.ARG_TITLE);
    mBlogId=savedInstanceState.getLong(ReaderConstants.ARG_BLOG_ID);
    mPostId=savedInstanceState.getLong(ReaderConstants.ARG_POST_ID);
    mIsSinglePostView=savedInstanceState.getBoolean(ARG_IS_SINGLE_POST);
    if (savedInstanceState.containsKey(ReaderConstants.ARG_POST_LIST_TYPE)) {
      mPostListType=(ReaderPostListType)savedInstanceState.getSerializable(ReaderConstants.ARG_POST_LIST_TYPE);
    }
    if (savedInstanceState.containsKey(ReaderConstants.ARG_TAG)) {
      mCurrentTag=(ReaderTag)savedInstanceState.getSerializable(ReaderConstants.ARG_TAG);
    }
  }
 else {
    title=getIntent().getStringExtra(ReaderConstants.ARG_TITLE);
    mBlogId=getIntent().getLongExtra(ReaderConstants.ARG_BLOG_ID,0);
    mPostId=getIntent().getLongExtra(ReaderConstants.ARG_POST_ID,0);
    mIsSinglePostView=getIntent().getBooleanExtra(ARG_IS_SINGLE_POST,false);
    if (getIntent().hasExtra(ReaderConstants.ARG_POST_LIST_TYPE)) {
      mPostListType=(ReaderPostListType)getIntent().getSerializableExtra(ReaderConstants.ARG_POST_LIST_TYPE);
    }
    if (getIntent().hasExtra(ReaderConstants.ARG_TAG)) {
      mCurrentTag=(ReaderTag)getIntent().getSerializableExtra(ReaderConstants.ARG_TAG);
    }
  }
  if (mPostListType == null) {
    mPostListType=ReaderPostListType.TAG_FOLLOWED;
  }
  if (!TextUtils.isEmpty(title)) {
    this.setTitle(title);
  }
  mViewPager.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener(){
    @Override public void onPageSelected(    int position){
      super.onPageSelected(position);
      AnalyticsTracker.track(AnalyticsTracker.Stat.READER_OPENED_ARTICLE);
      onShowHideToolbar(true);
    }
    @Override public void onPageScrollStateChanged(    int state){
      super.onPageScrollStateChanged(state);
      if (state == ViewPager.SCROLL_STATE_DRAGGING) {
        ReaderPostDetailFragment fragment=getActiveDetailFragment();
        if (fragment != null) {
          fragment.pauseWebView();
        }
      }
    }
  }
);
  mViewPager.setPageTransformer(false,new ReaderViewPagerTransformer(ReaderViewPagerTransformer.TransformType.SLIDE_OVER));
}
