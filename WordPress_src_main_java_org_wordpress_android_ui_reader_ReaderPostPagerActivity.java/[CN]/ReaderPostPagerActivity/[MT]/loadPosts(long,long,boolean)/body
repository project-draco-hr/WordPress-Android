{
  new Thread(){
    @Override public void run(){
      final ReaderBlogIdPostIdList idList;
      if (mIsSinglePostView) {
        idList=new ReaderBlogIdPostIdList();
        idList.add(new ReaderBlogIdPostId(blogId,postId));
      }
 else {
        final ReaderPostList postList;
        int maxPosts=ReaderConstants.READER_MAX_POSTS_TO_DISPLAY;
switch (getPostListType()) {
case TAG_FOLLOWED:
case TAG_PREVIEW:
          postList=ReaderPostTable.getPostsWithTag(getCurrentTag(),maxPosts,EXCLUDE_TEXT_COLUMN);
        break;
case BLOG_PREVIEW:
      postList=ReaderPostTable.getPostsInBlog(blogId,maxPosts,EXCLUDE_TEXT_COLUMN);
    break;
default :
  return;
}
idList=postList.getBlogIdPostIdList();
}
final int currentPosition=mViewPager.getCurrentItem();
final int newPosition;
if (gotoNext) {
newPosition=idList.indexOf(blogId,postId) + 1;
}
 else {
newPosition=idList.indexOf(blogId,postId);
}
runOnUiThread(new Runnable(){
@Override public void run(){
mPagerAdapter=new PostPagerAdapter(getFragmentManager());
mPagerAdapter.showPosts(idList);
mViewPager.setAdapter(mPagerAdapter);
if (mPagerAdapter.isValidPosition(newPosition)) {
  mViewPager.setCurrentItem(newPosition);
}
 else if (mPagerAdapter.isValidPosition(currentPosition)) {
  mViewPager.setCurrentItem(currentPosition);
}
mPagerAdapter.updateEndFragmentIfActive();
}
}
);
}
}
.start();
}
