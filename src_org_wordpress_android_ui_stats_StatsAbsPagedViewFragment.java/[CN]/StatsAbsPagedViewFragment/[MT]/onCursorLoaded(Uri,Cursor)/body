{
  final Handler handler=new Handler();
  new Thread(){
    @Override public void run(){
      if (!cursor.moveToFirst())       return;
      int colDate=cursor.getColumnIndex("date");
      if (colDate == -1)       return;
      long date=cursor.getLong(colDate);
      long currentDate=StatUtils.getCurrentDateMs();
      String timeframe=uri.getQueryParameter("timeframe");
      if (timeframe == null)       return;
      boolean isToday=timeframe.equals(StatsTimeframe.TODAY.name());
      boolean isYesterday=timeframe.equals(StatsTimeframe.YESTERDAY.name());
      final String label0;
      final String label1;
      if (isToday) {
        if (date < currentDate) {
          label0=StatUtils.msToString(date,"MMM d");
          label1=StatUtils.msToString(date - ONE_DAY,"MMM d");
        }
 else {
          label0=StatsTimeframe.TODAY.getLabel();
          label1=StatsTimeframe.YESTERDAY.getLabel();
        }
      }
 else       if (isYesterday) {
        label0=null;
        currentDate-=ONE_DAY;
        if (date < currentDate) {
          label1=StatUtils.msToString(date,"MMM d");
        }
 else {
          label1=StatsTimeframe.YESTERDAY.getLabel();
        }
      }
 else {
        return;
      }
      if (mRadioGroup == null)       return;
      final RadioButton radio0=(RadioButton)mRadioGroup.getChildAt(0);
      final RadioButton radio1=(RadioButton)mRadioGroup.getChildAt(1);
      handler.post(new Runnable(){
        public void run(){
          if (getActivity() == null)           return;
          if (label0 != null && radio0 != null)           radio0.setText(label0);
          if (label1 != null && radio1 != null)           radio1.setText(label1);
        }
      }
);
    }
  }
.start();
}
