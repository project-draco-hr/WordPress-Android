{
  View view=inflater.inflate(R.layout.fragment_editor,container,false);
  if (getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE && !getResources().getBoolean(R.bool.is_large_tablet_landscape)) {
    mHideActionBarOnSoftKeyboardUp=true;
  }
  mWaitingMediaFiles=new ConcurrentHashMap<>();
  mWaitingGalleries=Collections.newSetFromMap(new ConcurrentHashMap<MediaGallery,Boolean>());
  mUploadingMedia=new HashMap<>();
  mFailedMediaIds=new HashSet<>();
  mWebView=(EditorWebViewAbstract)view.findViewById(R.id.webview);
  mWebView.setOnTouchListener(this);
  mWebView.setOnImeBackListener(this);
  mWebView.setAuthHeaderRequestListener(this);
  mWebView.setOnDragListener(new View.OnDragListener(){
    @Override public boolean onDrag(    View view,    DragEvent dragEvent){
switch (dragEvent.getAction()) {
case DragEvent.ACTION_DRAG_STARTED:
        break;
case DragEvent.ACTION_DRAG_ENTERED:
      break;
case DragEvent.ACTION_DRAG_EXITED:
    break;
case DragEvent.ACTION_DROP:
  mEditorFragmentListener.onMediaDropped(dragEvent.getClipData().getItemAt(0).getUri());
break;
case DragEvent.ACTION_DRAG_ENDED:
default :
break;
}
return true;
}
}
);
if (mCustomHttpHeaders != null && mCustomHttpHeaders.size() > 0) {
for (Map.Entry<String,String> entry : mCustomHttpHeaders.entrySet()) {
mWebView.setCustomHeader(entry.getKey(),entry.getValue());
}
}
mWebView.addOnLayoutChangeListener(new View.OnLayoutChangeListener(){
@Override public void onLayoutChange(View v,int left,int top,int right,int bottom,int oldLeft,int oldTop,int oldRight,int oldBottom){
mWebView.post(new Runnable(){
@Override public void run(){
mWebView.execJavaScriptFromString("try {ZSSEditor.refreshVisibleViewportSize();} catch (e) " + "{console.log(e)}");
}
}
);
}
}
);
mEditorFragmentListener.onEditorFragmentInitialized();
initJsEditor();
if (savedInstanceState != null) {
setTitle(savedInstanceState.getCharSequence(KEY_TITLE));
setContent(savedInstanceState.getCharSequence(KEY_CONTENT));
}
mSourceView=view.findViewById(R.id.sourceview);
mSourceViewTitle=(SourceViewEditText)view.findViewById(R.id.sourceview_title);
mSourceViewContent=(SourceViewEditText)view.findViewById(R.id.sourceview_content);
mSourceViewTitle.setOnFocusChangeListener(new View.OnFocusChangeListener(){
@Override public void onFocusChange(View v,boolean hasFocus){
updateFormatBarEnabledState(!hasFocus);
}
}
);
mSourceViewTitle.setOnTouchListener(this);
mSourceViewContent.setOnTouchListener(this);
mSourceViewTitle.setOnImeBackListener(this);
mSourceViewContent.setOnImeBackListener(this);
mSourceViewContent.addTextChangedListener(new HtmlStyleTextWatcher());
mSourceViewTitle.setHint(mTitlePlaceholder);
mSourceViewContent.setHint("<p>" + mContentPlaceholder + "</p>");
setupFormatBarButtonMap(view);
return view;
}
