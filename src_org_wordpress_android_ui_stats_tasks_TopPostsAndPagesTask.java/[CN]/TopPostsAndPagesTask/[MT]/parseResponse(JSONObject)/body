{
  if (response == null || !response.has("top-posts"))   return;
  try {
    JSONArray results=response.getJSONArray("top-posts");
    int count=results.length();
    String date=response.getString("date");
    long dateMs=StatUtils.toMs(date);
    ArrayList<ContentProviderOperation> operations=new ArrayList<ContentProviderOperation>();
    ContentProviderOperation delete_op=ContentProviderOperation.newDelete(StatsContentProvider.STATS_TOP_POSTS_AND_PAGES_URI).withSelection("blogId=? AND (date=? OR date<=?)",new String[]{mBlogId,dateMs + "",(dateMs - StatsService.TWO_DAYS) + ""}).build();
    operations.add(delete_op);
    for (int i=0; i < count; i++) {
      JSONObject result=results.getJSONObject(i);
      StatsTopPostsAndPages stat=new StatsTopPostsAndPages(mBlogId,result);
      ContentValues values=StatsTopPostsAndPagesTable.getContentValues(stat);
      ContentProviderOperation op=ContentProviderOperation.newInsert(StatsContentProvider.STATS_TOP_POSTS_AND_PAGES_URI).withValues(values).build();
      operations.add(op);
    }
    ContentResolver resolver=WordPress.getContext().getContentResolver();
    resolver.applyBatch(BuildConfig.STATS_PROVIDER_AUTHORITY,operations);
    resolver.notifyChange(StatsContentProvider.STATS_TOP_POSTS_AND_PAGES_URI,null);
  }
 catch (  JSONException e) {
    AppLog.e(AppLog.T.STATS,e);
  }
catch (  RemoteException e) {
    AppLog.e(AppLog.T.STATS,e);
  }
catch (  OperationApplicationException e) {
    AppLog.e(AppLog.T.STATS,e);
  }
}
