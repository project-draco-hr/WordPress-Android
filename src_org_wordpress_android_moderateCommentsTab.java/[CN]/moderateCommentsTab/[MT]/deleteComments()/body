{
  for (int i=0; i < checkedComments.size(); i++) {
    if (checkedComments.get(i).toString().equals("true")) {
      client=new XMLRPCClient(blog.getUrl(),blog.getHttpuser(),blog.getHttppassword());
      CommentEntry listRow=(CommentEntry)getListView().getItemAtPosition(i);
      String curCommentID=listRow.commentID;
      Object[] params={blog.getBlogId(),blog.getUsername(),blog.getPassword(),curCommentID};
      try {
        client.call("wp.deleteComment",params);
      }
 catch (      final XMLRPCException e) {
        moderateErrorMsg=e.getLocalizedMessage();
      }
    }
  }
  dismissDialog(ID_DIALOG_DELETING);
  Thread action=new Thread(){
    public void run(){
      if (moderateErrorMsg == "") {
        Toast.makeText(moderateCommentsTab.this,getResources().getText(R.string.comment_moderated),Toast.LENGTH_SHORT).show();
      }
 else {
        AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(moderateCommentsTab.this);
        dialogBuilder.setTitle(getResources().getText(R.string.connection_error));
        dialogBuilder.setMessage(moderateErrorMsg);
        dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int whichButton){
          }
        }
);
        dialogBuilder.setCancelable(true);
        if (!isFinishing()) {
          dialogBuilder.create().show();
        }
      }
    }
  }
;
  this.runOnUiThread(action);
  Thread action2=new Thread(){
    public void run(){
      if (moderateErrorMsg == "") {
        pd=new ProgressDialog(moderateCommentsTab.this);
        refreshComments(false,true,true);
      }
    }
  }
;
  this.runOnUiThread(action2);
  checkedCommentTotal=0;
  inModeration=false;
}
