{
  float colwidth=graphwidth / values.length;
  paint.setStrokeWidth(style.thickness);
  paint.setColor(style.color);
  for (int i=0; i < values.length; i++) {
    float valY=(float)(values[i].getY() - minY);
    float ratY=(float)(valY / diffY);
    float y=graphheight * ratY;
    if (style.getValueDependentColor() != null) {
      paint.setColor(style.getValueDependentColor().get(values[i]));
    }
    float pad=style.padding;
    float left=(i * colwidth) + horstart;
    float top=(border - y) + graphheight;
    float right=left + colwidth;
    float bottom=graphheight + border - 1;
    canvas.drawRect(left + pad,top,right - pad,bottom,paint);
  }
  setCustomLabelFormatter(new CustomLabelFormatter(){
    @Override public String formatLabel(    double value,    boolean isValueX){
      if (isValueX)       return null;
      if (value < 1000) {
        return null;
      }
 else       if (value < 1000000) {
        return (value / 1000) + "K";
      }
 else       if (value < 1000000000) {
        return (value / 1000000) + "M";
      }
 else {
        return null;
      }
    }
  }
);
}
