{
  if (comment == null) {
    return false;
  }
  boolean isCurrentlyLiked=ReaderCommentTable.isCommentLikedByCurrentUser(comment);
  if (isCurrentlyLiked == isAskingToLike) {
    AppLog.w(T.READER,"comment like unchanged");
    return false;
  }
  int newNumLikes=(isAskingToLike ? comment.numLikes + 1 : comment.numLikes - 1);
  ReaderCommentTable.setLikesForComment(comment,newNumLikes,isAskingToLike);
  ReaderLikeTable.setCurrentUserLikesComment(comment,isAskingToLike);
  final String actionName=isAskingToLike ? "like" : "unlike";
  String path="/sites/" + comment.blogId + "/comments/"+ comment.commentId+ "/likes/";
  if (isAskingToLike) {
    path+="new";
  }
 else {
    path+="mine/delete";
  }
  RestRequest.Listener listener=new RestRequest.Listener(){
    @Override public void onResponse(    JSONObject jsonObject){
      boolean success=(jsonObject != null && JSONUtil.getBool(jsonObject,"success"));
      if (success) {
        AppLog.d(T.READER,String.format("comment %s succeeded",actionName));
      }
 else {
        AppLog.w(T.READER,String.format("comment %s failed",actionName));
        ReaderCommentTable.setLikesForComment(comment,comment.numLikes,comment.isLikedByCurrentUser);
        ReaderLikeTable.setCurrentUserLikesComment(comment,comment.isLikedByCurrentUser);
      }
    }
  }
;
  RestRequest.ErrorListener errorListener=new RestRequest.ErrorListener(){
    @Override public void onErrorResponse(    VolleyError volleyError){
      String error=VolleyUtils.errStringFromVolleyError(volleyError);
      if (TextUtils.isEmpty(error)) {
        AppLog.w(T.READER,String.format("comment %s failed",actionName));
      }
 else {
        AppLog.w(T.READER,String.format("comment %s failed (%s)",actionName,error));
      }
      AppLog.e(T.READER,volleyError);
      ReaderCommentTable.setLikesForComment(comment,comment.numLikes,comment.isLikedByCurrentUser);
      ReaderLikeTable.setCurrentUserLikesComment(comment,comment.isLikedByCurrentUser);
    }
  }
;
  WordPress.getRestClientUtilsV1_1().post(path,listener,errorListener);
  return true;
}
