{
  if (comment == null || jsonObject == null) {
    if (resultListener != null) {
      resultListener.onUpdateResult(ReaderActions.UpdateResult.FAILED);
    }
    return;
  }
  int numLikes=jsonObject.optInt("found");
  boolean isLikedByCurrentUser=JSONUtil.getBool(jsonObject,"i_like");
  boolean isChanged=(comment.numLikes != numLikes || comment.isLikedByCurrentUser != isLikedByCurrentUser);
  if (isChanged) {
    comment.isLikedByCurrentUser=isLikedByCurrentUser;
    comment.numLikes=numLikes;
    ReaderCommentTable.addOrUpdateComment(comment);
    ReaderLikeTable.setCurrentUserLikesComment(comment,isLikedByCurrentUser);
  }
  ReaderUserList likingUsers=ReaderUserList.fromJsonLikes(jsonObject);
  ReaderUserTable.addOrUpdateUsers(likingUsers);
  ReaderLikeTable.setLikesForComment(comment,likingUsers.getUserIds());
  if (resultListener != null) {
    if (isChanged) {
      resultListener.onUpdateResult(ReaderActions.UpdateResult.CHANGED);
    }
 else {
      resultListener.onUpdateResult(ReaderActions.UpdateResult.UNCHANGED);
    }
  }
}
