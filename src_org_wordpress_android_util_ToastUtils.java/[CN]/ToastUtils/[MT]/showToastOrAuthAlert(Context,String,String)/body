{
  if (context == null)   return;
  boolean isLoginLimitReached=false;
  if (!TextUtils.isEmpty(xmlrpcMessage)) {
    String lowerCaseXmlrpcMessage=xmlrpcMessage.toLowerCase();
    if (lowerCaseXmlrpcMessage.contains("code 503") && (lowerCaseXmlrpcMessage.contains("limit reached") || lowerCaseXmlrpcMessage.contains("login limit")))     isLoginLimitReached=true;
  }
  if ((context instanceof FragmentActivity) && !TextUtils.isEmpty(xmlrpcMessage) && xmlrpcMessage.contains("code 403")) {
    FragmentActivity activity=(FragmentActivity)context;
    if (activity.isFinishing())     return;
    FragmentTransaction ft=activity.getSupportFragmentManager().beginTransaction();
    AuthErrorDialogFragment authAlert=AuthErrorDialogFragment.newInstance(WordPress.getCurrentBlog().isDotcomFlag());
    ft.add(authAlert,"alert");
    ft.commitAllowingStateLoss();
  }
 else {
    String errorMessage=null;
    if (isLoginLimitReached) {
      errorMessage=context.getString(R.string.limit_reached);
    }
 else {
      errorMessage=TextUtils.isEmpty(friendlyMessage) ? context.getString(R.string.error_generic) : friendlyMessage;
    }
    showToast(context,errorMessage,Duration.LONG);
  }
}
