{
  if (context == null)   return;
  String message=null;
  boolean isInvalidTokenError=false;
  JSONObject errorObj=VolleyUtils.volleyErrorToJSON(error);
  if (errorObj != null) {
    try {
      if (errorObj.has("error_description")) {
        message=(String)errorObj.get("error_description");
        String error_code=(String)errorObj.get("error");
        if (error_code != null && error_code.equals("invalid_request") && message.toLowerCase().contains("incorrect username or password")) {
          isInvalidTokenError=true;
        }
      }
 else {
        message=(String)errorObj.get("message");
        String error_code=(String)errorObj.get("error");
        if (error_code != null && error_code.equals("invalid_token")) {
          isInvalidTokenError=true;
        }
      }
    }
 catch (    JSONException e) {
      AppLog.e(T.API,e);
    }
  }
 else {
    message=error.getMessage();
  }
  if (isInvalidTokenError && (context instanceof FragmentActivity)) {
    showAuthErrorDialog((FragmentActivity)context);
  }
 else {
    String fallbackErrorMessage=TextUtils.isEmpty(friendlyMessage) ? context.getString(R.string.error_generic) : friendlyMessage;
    if (message != null && message.contains("Limit reached")) {
      message=context.getString(R.string.limit_reached);
    }
    String errorMessage=TextUtils.isEmpty(message) ? fallbackErrorMessage : message;
    showToast(context,errorMessage,Duration.LONG);
  }
}
