{
  if (!NetworkUtils.isNetworkAvailable(this)) {
    return;
  }
  final boolean isTagTableEmpty=ReaderTagTable.isEmpty();
  final boolean isPostTableEmpty=ReaderPostTable.isEmpty();
  ReaderActions.UpdateResultListener listener=new ReaderActions.UpdateResultListener(){
    @Override public void onUpdateResult(    UpdateResult result){
      if (result != UpdateResult.FAILED) {
        mHasPerformedInitialUpdate=true;
      }
      if (result == UpdateResult.CHANGED) {
        ReaderPostListFragment listFragment=getListFragment();
        if (listFragment == null) {
          showListFragmentForTag(ReaderTag.TAG_NAME_DEFAULT,ReaderPostListType.TAG_FOLLOWED);
        }
 else         if (listFragment.getPostListType() == ReaderPostListType.TAG_FOLLOWED) {
          listFragment.refreshTags();
          if (isTagTableEmpty && isPostTableEmpty) {
            listFragment.updatePostsWithTag(listFragment.getCurrentTag(),RequestDataAction.LOAD_NEWER,ReaderPostListFragment.RefreshType.AUTOMATIC);
          }
        }
      }
      AppLog.i(T.READER,"reader activity > updating current user");
      ReaderUserActions.updateCurrentUser(null);
      AppLog.i(T.READER,"reader activity > updating followed blogs");
      ReaderBlogActions.updateFollowedBlogs(null);
      AppLog.i(T.READER,"reader activity > updating cookies");
      ReaderAuthActions.updateCookies(ReaderActivity.this);
    }
  }
;
  ReaderTagActions.updateTags(listener);
}
