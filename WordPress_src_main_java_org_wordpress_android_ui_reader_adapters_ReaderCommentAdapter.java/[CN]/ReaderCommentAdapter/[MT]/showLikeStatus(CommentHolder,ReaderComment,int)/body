{
  if (mPost.isLikesEnabled) {
    holder.imgLike.setVisibility(View.VISIBLE);
    holder.imgLike.setSelected(comment.isLikedByCurrentUser);
    holder.txtLike.setVisibility(View.VISIBLE);
    holder.txtLike.setSelected(comment.isLikedByCurrentUser);
    holder.txtLike.setText(comment.isLikedByCurrentUser ? mLiked : mLike);
switch (comment.numLikes) {
case 0:
      holder.txtLikeCount.setVisibility(View.GONE);
    break;
case 1:
  holder.txtLikeCount.setVisibility(View.VISIBLE);
holder.txtLikeCount.setText(mLikesSingle);
break;
default :
holder.txtLikeCount.setVisibility(View.VISIBLE);
holder.txtLikeCount.setText(String.format(mLikesMulti,comment.numLikes));
}
View.OnClickListener likeListener=new View.OnClickListener(){
@Override public void onClick(View v){
toggleLike(holder,comment,position);
}
}
;
holder.imgLike.setOnClickListener(likeListener);
holder.txtLike.setOnClickListener(likeListener);
holder.txtLikeCount.setOnClickListener(new View.OnClickListener(){
@Override public void onClick(View v){
ReaderActivityLauncher.showReaderLikingUsers(v.getContext(),comment);
}
}
);
}
 else {
holder.imgLike.setVisibility(View.GONE);
holder.txtLike.setVisibility(View.GONE);
}
}
