{
  if (mPost.isLikesEnabled) {
    holder.layoutLikes.setVisibility(View.VISIBLE);
    holder.imgLike.setSelected(comment.isLikedByCurrentUser);
    if (comment.numLikes == 0) {
      holder.txtLike.setText(mLike);
      holder.txtLike.setTextColor(mLinkColor);
      holder.txtLikeCount.setVisibility(View.GONE);
    }
 else     if (comment.numLikes == 1 && comment.isLikedByCurrentUser) {
      holder.txtLike.setText(mLikedByYou);
      holder.txtLike.setTextColor(mLinkColor);
      holder.txtLikeCount.setVisibility(View.GONE);
    }
 else {
      holder.txtLike.setText(mLikedBy);
      holder.txtLike.setTextColor(mNoLinkColor);
      holder.txtLikeCount.setText(comment.numLikes == 1 ? mLikesSingle : String.format(mLikesMulti,comment.numLikes));
      holder.txtLikeCount.setSelected(comment.isLikedByCurrentUser);
      holder.txtLikeCount.setVisibility(View.VISIBLE);
    }
    holder.layoutLikes.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        toggleLike(v.getContext(),holder,comment,position);
      }
    }
);
    holder.txtLikeCount.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        ReaderActivityLauncher.showReaderLikingUsers(v.getContext(),comment);
      }
    }
);
  }
 else {
    holder.layoutLikes.setVisibility(View.GONE);
    holder.layoutLikes.setOnClickListener(null);
  }
}
