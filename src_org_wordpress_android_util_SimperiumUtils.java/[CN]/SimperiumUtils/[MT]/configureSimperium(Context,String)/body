{
  Simperium simperium=Simperium.newClient(BuildConfig.SIMPERIUM_APP_NAME,BuildConfig.SIMPERIUM_APP_SECRET,context);
  try {
    final Bucket<Note> notesBucket=simperium.bucket(new Note.Schema());
    final Bucket<BucketObject> metaBucket=simperium.bucket("meta");
    setSimperium(simperium);
    setNotesBucket(notesBucket);
    setMetaBucket(metaBucket);
    simperium.setUserStatusChangeListener(new User.StatusChangeListener(){
      @Override public void onUserStatusChange(      User.Status status){
switch (status) {
case AUTHORIZED:
          notesBucket.start();
        metaBucket.start();
      Intent simperiumSignedInIntent=new Intent();
    simperiumSignedInIntent.setAction(BROADCAST_ACTION_SIMPERIUM_SIGNED_IN);
  context.sendBroadcast(simperiumSignedInIntent);
break;
case NOT_AUTHORIZED:
notesBucket.stop();
metaBucket.stop();
Intent simperiumNotAuthorizedIntent=new Intent();
simperiumNotAuthorizedIntent.setAction(BROADCAST_ACTION_SIMPERIUM_NOT_AUTHORIZED);
context.sendBroadcast(simperiumNotAuthorizedIntent);
break;
default :
AppLog.d(AppLog.T.SIMPERIUM,"User not authorized yet");
break;
}
}
}
);
}
 catch (BucketNameInvalid e) {
AppLog.e(AppLog.T.SIMPERIUM,e.getMessage());
}
authorizeUser(simperium,token);
return simperium;
}
