{
  final boolean animateRemoval;
switch (action) {
case ADD:
    animateRemoval=(getTagType() == ReaderTagType.RECOMMENDED);
  break;
case DELETE:
animateRemoval=(getTagType() == ReaderTagType.FOLLOWED);
break;
default :
animateRemoval=false;
break;
}
int index=getTagAdapter().indexOfTag(tag);
if (animateRemoval && index > -1) {
Animation.AnimationListener aniListener=new Animation.AnimationListener(){
@Override public void onAnimationStart(Animation animation){
}
@Override public void onAnimationRepeat(Animation animation){
}
@Override public void onAnimationEnd(Animation animation){
refresh();
}
}
;
ReaderAnim.AnimateListItemStyle animStyle=(action == TagAction.ADD ? ReaderAnim.AnimateListItemStyle.ADDITION : ReaderAnim.AnimateListItemStyle.DELETION);
ReaderAnim.animateListItem(mListView,index,animStyle,aniListener);
}
 else {
refresh();
}
if (getActivity() instanceof TagActionListener) {
((TagActionListener)getActivity()).onTagAction(tag,action);
}
}
