{
  final ReaderPost originalPost=ReaderPostTable.getPost(post.blogId,post.postId);
  String path;
switch (action) {
case TOGGLE_LIKE:
    boolean isLiking=!post.isLikedByCurrentUser;
  post.isLikedByCurrentUser=isLiking;
if (isLiking) {
  post.numLikes++;
}
 else if (!isLiking && post.numLikes > 0) {
  post.numLikes--;
}
ReaderPostTable.addOrUpdatePost(post);
ReaderLikeTable.setCurrentUserLikesPost(post,isLiking);
path="sites/" + post.blogId + "/posts/"+ post.postId+ "/likes/";
if (isLiking) {
path+="new";
}
 else {
path+="mine/delete";
}
break;
case TOGGLE_FOLLOW:
boolean isAskingToFollow=!post.isFollowedByCurrentUser;
post.isFollowedByCurrentUser=isAskingToFollow;
ReaderPostTable.addOrUpdatePost(post);
ReaderPostTable.setBlogPostsFollowStatus(post.blogId,isAskingToFollow);
path="sites/" + post.blogId + "/follows/";
if (isAskingToFollow) {
path+="new";
}
 else {
path+="mine/delete";
}
if (post.hasBlogUrl()) ReaderBlogTable.setIsFollowedBlogUrl(post.getBlogUrl(),isAskingToFollow);
break;
default :
if (actionListener != null) actionListener.onActionResult(false);
return false;
}
com.wordpress.rest.RestRequest.Listener listener=new RestRequest.Listener(){
@Override public void onResponse(JSONObject jsonObject){
ReaderLog.d("post action " + action.name() + " succeeded");
if (actionListener != null) actionListener.onActionResult(true);
}
}
;
RestRequest.ErrorListener errorListener=new RestRequest.ErrorListener(){
@Override public void onErrorResponse(VolleyError volleyError){
String error=VolleyUtils.errStringFromVolleyError(volleyError);
if (TextUtils.isEmpty(error)) {
ReaderLog.w(String.format("post action %s failed",action.name()));
}
 else {
ReaderLog.w(String.format("post action %s failed (%s)",action.name(),error));
}
ReaderLog.e(volleyError);
if (originalPost != null) {
ReaderPostTable.addOrUpdatePost(originalPost);
ReaderPostTable.setBlogPostsFollowStatus(originalPost.blogId,originalPost.isFollowedByCurrentUser);
switch (action) {
case TOGGLE_LIKE:
ReaderLikeTable.setCurrentUserLikesPost(post,originalPost.isLikedByCurrentUser);
break;
case TOGGLE_FOLLOW:
if (originalPost.hasBlogUrl()) ReaderBlogTable.setIsFollowedBlogUrl(post.getBlogUrl(),originalPost.isFollowedByCurrentUser);
break;
}
}
if (actionListener != null) actionListener.onActionResult(false);
}
}
;
WordPress.restClient.post(path,listener,errorListener);
return true;
}
