{
  mListAdapter=new DetailListAdapter(getContext(),R.layout.detail_list_preference,mDetails);
  mStartingIndex=mSelectedIndex=findIndexOfValue(getValue());
  builder.setSingleChoiceItems(mListAdapter,mSelectedIndex,new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int which){
      if (mSelectedIndex != which) {
        mSelectedIndex=which;
        mListAdapter.notifyDataSetChanged();
        setValue(getEntryValues()[mSelectedIndex].toString());
        notifyChanged();
      }
    }
  }
);
  builder.setNegativeButton(R.string.cancel,null);
  builder.setPositiveButton(R.string.ok,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      DetailListPreference.this.onClick(dialog,DialogInterface.BUTTON_POSITIVE);
    }
  }
);
  View titleView=View.inflate(getContext(),R.layout.detail_list_preference_title,null);
  if (titleView != null && !TextUtils.isEmpty(mTitle) && !TextUtils.isEmpty(mHelpUrl)) {
    TextView titleText=(TextView)titleView.findViewById(R.id.title);
    View infoView=titleView.findViewById(R.id.info_button);
    if (infoView != null) {
      if (TextUtils.isEmpty(mHelpUrl)) {
        infoView.setVisibility(View.GONE);
      }
 else {
        infoView.setVisibility(View.VISIBLE);
        infoView.setOnClickListener(new View.OnClickListener(){
          @Override public void onClick(          View v){
            Uri uri=Uri.parse(mHelpUrl);
            AppLockManager.getInstance().setExtendedTimeout();
            getContext().startActivity(new Intent(Intent.ACTION_VIEW,uri));
          }
        }
);
      }
    }
    if (titleText != null) {
      titleText.setText(mTitle);
    }
    builder.setCustomTitle(titleView);
  }
 else {
    builder.setTitle(getTitle());
  }
}
