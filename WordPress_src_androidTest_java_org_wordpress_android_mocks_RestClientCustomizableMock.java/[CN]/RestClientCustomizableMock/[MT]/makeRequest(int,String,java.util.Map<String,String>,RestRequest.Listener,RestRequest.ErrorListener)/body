{
  AppLog.v(T.TESTS,this.getClass() + ": makeRequest(" + url+ ")");
  RestRequest dummyReturnValue=new RestRequest(method,url,params,listener,errorListener);
  String filename=mPrefix + "-" + url.replace("https://","").replace("/","-").replace(".","-").replace("?","-")+ ".json";
  if ("password-invalid".equals(mPrefix) && errorListener != null) {
    errorListener.onErrorResponse(forgeVolleyErrorFromFilename(filename));
    return dummyReturnValue;
  }
  if ("username-exists".equals(mPrefix) && errorListener != null) {
    errorListener.onErrorResponse(forgeVolleyErrorFromFilename(filename));
    return dummyReturnValue;
  }
  if ("timeout".equals(mPrefix) && errorListener != null) {
    errorListener.onErrorResponse(forgeVolleyTimeoutError());
    return dummyReturnValue;
  }
  if ("site-reserved".equals(mPrefix) && errorListener != null) {
    errorListener.onErrorResponse(forgeVolleyErrorFromFilename(filename));
    return dummyReturnValue;
  }
  String data=fileToString(filename);
  if (data == null) {
    AppLog.e(T.TESTS,"Can't read file: " + filename);
    if (errorListener != null) {
      errorListener.onErrorResponse(new VolleyError("Can't read file: " + filename));
    }
    return dummyReturnValue;
  }
  try {
    JSONObject jsonObj=new JSONObject(data);
    listener.onResponse(jsonObj);
  }
 catch (  JSONException je) {
    AppLog.e(T.TESTS,je.toString());
  }
  return dummyReturnValue;
}
