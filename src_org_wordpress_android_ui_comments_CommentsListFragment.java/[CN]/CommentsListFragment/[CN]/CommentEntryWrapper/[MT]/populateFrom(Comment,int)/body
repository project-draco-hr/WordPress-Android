{
  txtName.setText(!TextUtils.isEmpty(comment.name) ? comment.name : getString(R.string.anonymous));
  txtPostTitle.setText(getResources().getText(R.string.on) + " " + comment.postTitle);
  txtComment.setText(StringUtils.unescapeHTML(comment.comment));
  String fEmailURL=(TextUtils.isEmpty(comment.authorURL) ? comment.emailURL : comment.authorURL);
  txtEmailURL.setVisibility(TextUtils.isEmpty(fEmailURL) ? View.GONE : View.VISIBLE);
  txtEmailURL.setText(fEmailURL);
  row.setId(Integer.valueOf(comment.commentID));
  final String status;
  final String textColor;
switch (comment.getStatusEnum()) {
case SPAM:
    status=getResources().getText(R.string.spam).toString();
  textColor="#FF0000";
break;
case UNAPPROVED:
status=getResources().getText(R.string.unapproved).toString();
textColor="#D54E21";
break;
default :
status=getResources().getText(R.string.approved).toString();
textColor="#006505";
break;
}
txtStatus.setText(status);
txtStatus.setTextColor(Color.parseColor(textColor));
bulkCheck.setChecked(selectedCommentPositions.contains(position));
bulkCheck.setTag(position);
bulkCheck.setOnClickListener(new OnClickListener(){
public void onClick(View arg0){
if (bulkCheck.isChecked()) {
selectedCommentPositions.add(position);
}
 else {
selectedCommentPositions.remove(position);
}
showOrHideModerationBar();
}
}
);
imgAvatar.setDefaultImageResId(R.drawable.placeholder);
if (comment.hasProfileImageUrl()) {
imgAvatar.setImageUrl(GravatarUtils.fixGravatarUrl(comment.getProfileImageUrl()),WordPress.imageLoader);
}
 else {
imgAvatar.setImageResource(R.drawable.placeholder);
}
}
