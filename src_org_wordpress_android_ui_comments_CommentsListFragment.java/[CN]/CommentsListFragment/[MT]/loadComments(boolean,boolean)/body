{
  refreshOnly=refresh;
  String author, postID, comment, dateCreatedFormatted, status, authorEmail, authorURL, postTitle;
  int commentID;
  List<Map<String,Object>> loadedComments=WordPress.wpDB.loadComments(WordPress.currentBlog.getLocalTableBlogId());
  if (refreshOnly) {
    if (model != null) {
      model.clear();
    }
  }
 else {
    model=new ArrayList<Comment>();
  }
  if (loadedComments != null) {
    numRecords=loadedComments.size();
    for (int i=0; i < loadedComments.size(); i++) {
      Map<String,Object> contentHash=loadedComments.get(i);
      allComments.put((Integer)contentHash.get("commentID"),contentHash);
      author=StringUtils.unescapeHTML(contentHash.get("author").toString());
      commentID=(Integer)contentHash.get("commentID");
      postID=contentHash.get("postID").toString();
      comment=StringUtils.unescapeHTML(contentHash.get("comment").toString());
      dateCreatedFormatted=contentHash.get("commentDateFormatted").toString();
      status=contentHash.get("status").toString();
      authorEmail=StringUtils.unescapeHTML(contentHash.get("email").toString());
      authorURL=StringUtils.unescapeHTML(contentHash.get("url").toString());
      postTitle=StringUtils.unescapeHTML(contentHash.get("postTitle").toString());
      if (model == null) {
        model=new ArrayList<Comment>();
      }
      model.add(new Comment(postID,commentID,i,author,dateCreatedFormatted,comment,status,postTitle,authorURL,authorEmail,GravatarUtils.gravatarUrlFromEmail(authorEmail,140)));
    }
    if (!refreshOnly) {
      boolean showSwitcher=loadedComments.size() % COMMENTS_PER_PAGE == 0;
      setUpListView(showSwitcher);
    }
 else {
      getListView().invalidateViews();
    }
    if (this.shouldSelectAfterLoad) {
      if (model != null) {
        if (model.size() > 0) {
          selectedPosition=0;
          Comment aComment=model.get((int)0);
          mOnCommentSelectedListener.onCommentSelected(aComment);
          getListView().setItemChecked(0,true);
        }
      }
      shouldSelectAfterLoad=false;
    }
    if (loadMore && scrollPosition > 0) {
      ListView listView=this.getListView();
      try {
        listView.setSelectionFromTop(scrollPosition,scrollPositionTop);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
    mListScrollPositionManager.restoreScrollOffset();
    return true;
  }
 else {
    setUpListView(false);
    return false;
  }
}
