{
  final int numChecked=getCheckedCommentCount();
  mModerateErrorMsg="";
  for (  int i : selectedCommentPositions) {
    XMLRPCClient client=new XMLRPCClient(WordPress.currentBlog.getUrl(),WordPress.currentBlog.getHttpuser(),WordPress.currentBlog.getHttppassword());
    Comment listRow=(Comment)getListView().getItemAtPosition(i);
    int curCommentID=listRow.commentID;
    Object[] params={WordPress.currentBlog.getRemoteBlogId(),WordPress.currentBlog.getUsername(),WordPress.currentBlog.getPassword(),curCommentID};
    try {
      client.call("wp.deleteComment",params);
    }
 catch (    final XMLRPCException e) {
      mModerateErrorMsg=getResources().getText(R.string.error_moderate_comment).toString();
    }
  }
  dismissDialog(ID_DIALOG_DELETING);
  if (hasActivity()) {
    Thread action=new Thread(){
      public void run(){
        if (TextUtils.isEmpty(mModerateErrorMsg)) {
          final String msg;
          if (numChecked > 1) {
            msg=getResources().getText(R.string.comments_moderated).toString();
          }
 else {
            msg=getResources().getText(R.string.comment_moderated).toString();
          }
          Toast.makeText(getActivity(),msg,Toast.LENGTH_SHORT).show();
          hideModerationBar();
          selectedCommentPositions.clear();
          mOnCommentChangeListener.onCommentDeleted();
        }
 else         if (!getActivity().isFinishing()) {
          FragmentTransaction ft=getFragmentManager().beginTransaction();
          WPAlertDialogFragment alert=WPAlertDialogFragment.newInstance(mModerateErrorMsg);
          ft.add(alert,"alert");
          ft.commitAllowingStateLoss();
        }
      }
    }
;
    getActivity().runOnUiThread(action);
  }
}
