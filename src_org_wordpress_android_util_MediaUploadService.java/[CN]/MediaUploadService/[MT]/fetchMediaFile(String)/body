{
  List<Object> apiArgs=new ArrayList<Object>();
  apiArgs.add(WordPress.getCurrentBlog());
  GetMediaItemTask task=new GetMediaItemTask(Integer.valueOf(id),new ApiHelper.GetMediaItemTask.Callback(){
    @Override public void onSuccess(    MediaFile mediaFile){
      String blogId=mediaFile.getBlogId();
      String mediaId=mediaFile.getMediaId();
      WordPress.wpDB.updateMediaUploadState(blogId,mediaId,"uploaded");
      mUploadInProgress=false;
      sendUpdateBroadcast(id,null);
      mHandler.post(mFetchQueueTask);
    }
    @Override public void onFailure(    ApiHelper.ErrorType errorType,    String errorMessage,    Throwable throwable){
      mUploadInProgress=false;
      sendUpdateBroadcast(id,getString(R.string.error_refresh_media));
      mHandler.post(mFetchQueueTask);
      if (errorType != ErrorType.NETWORK_XMLRPC) {
        JSONObject properties=new JSONObject();
        try {
          properties.put("error_message",errorType.name() + "-" + errorMessage);
        }
 catch (        JSONException e) {
          AppLog.e(T.MEDIA,"Can't serialize message to JSON: " + errorMessage);
        }
        WPMobileStatsUtil.trackException(throwable,WPMobileStatsUtil.StatsPropertyExceptionFetchMedia,properties);
      }
    }
  }
);
  task.execute(apiArgs);
}
