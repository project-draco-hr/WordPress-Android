{
  CookieSyncManager.createInstance(context.getApplicationContext());
  final CookieManager cookieManager=CookieManager.getInstance();
  cookieManager.removeAllCookie();
  if (!WordPress.hasValidWPComCredentials(context))   return;
  SharedPreferences settings=PreferenceManager.getDefaultSharedPreferences(context);
  final String username=settings.getString(WordPress.WPCOM_USERNAME_PREFERENCE,"");
  final String password=WordPressDB.decryptPassword(settings.getString(WordPress.WPCOM_PASSWORD_PREFERENCE,""));
  new Thread(){
    @Override public void run(){
      try {
        URI uri=URI.create(URI_LOGIN);
        HttpPost postMethod=new HttpPost(uri);
        postMethod.addHeader("charset","UTF-8");
        postMethod.addHeader("User-Agent",Constants.USER_AGENT);
        UsernamePasswordCredentials creds=new UsernamePasswordCredentials(username,password);
        DefaultHttpClient client=getHttpClient(creds);
        List<NameValuePair> nameValuePairs=new ArrayList<NameValuePair>(3);
        nameValuePairs.add(new BasicNameValuePair("log",username));
        nameValuePairs.add(new BasicNameValuePair("pwd",password));
        nameValuePairs.add(new BasicNameValuePair("rememberme","forever"));
        nameValuePairs.add(new BasicNameValuePair("wp-submit","Log In"));
        nameValuePairs.add(new BasicNameValuePair("redirect_to","/"));
        postMethod.setEntity(new UrlEncodedFormEntity(nameValuePairs,HTTP.UTF_8));
        HttpResponse response=client.execute(postMethod);
        int statusCode=response.getStatusLine().getStatusCode();
        if (statusCode != HttpStatus.SC_OK) {
          ReaderLog.w(String.format("failed to retrieve cookies, status %d",statusCode));
          return;
        }
        List<Cookie> cookies=client.getCookieStore().getCookies();
        if (!cookies.isEmpty()) {
          for (          Cookie cookie : cookies) {
            String cookieString=cookie.getName() + "=" + cookie.getValue()+ "; domain="+ cookie.getDomain();
            cookieManager.setCookie("wordpress.com",cookieString);
          }
          CookieSyncManager.getInstance().sync();
        }
      }
 catch (      UnsupportedEncodingException e) {
        ReaderLog.e(e);
      }
catch (      IOException e) {
        ReaderLog.e(e);
      }
    }
  }
.start();
}
