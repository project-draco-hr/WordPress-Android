{
  AlertDialog.Builder builder=new AlertDialog.Builder(getActivity());
  LayoutInflater inflater=getActivity().getLayoutInflater();
  View view=inflater.inflate(R.layout.dialog_link,null);
  final EditText urlEditText=(EditText)view.findViewById(R.id.linkURL);
  final EditText linkEditText=(EditText)view.findViewById(R.id.linkText);
  builder.setView(view).setPositiveButton(R.string.ok,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int id){
      Intent intent=new Intent();
      intent.putExtra(LINK_DIALOG_ARG_URL,urlEditText.getText().toString());
      intent.putExtra(LINK_DIALOG_ARG_TEXT,linkEditText.getText().toString());
      getTargetFragment().onActivityResult(getTargetRequestCode(),getTargetRequestCode(),intent);
    }
  }
).setNegativeButton(R.string.cancel,new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int id){
      LinkDialogFragment.this.getDialog().cancel();
    }
  }
);
  if (getTargetRequestCode() == LINK_DIALOG_REQUEST_CODE_UPDATE) {
    builder.setNeutralButton(R.string.delete,new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int which){
        getTargetFragment().onActivityResult(getTargetRequestCode(),LINK_DIALOG_REQUEST_CODE_DELETE,null);
      }
    }
);
  }
  Bundle bundle=getArguments();
  if (bundle != null) {
    linkEditText.setText(bundle.getString(LINK_DIALOG_ARG_TEXT));
    String url=bundle.getString(LINK_DIALOG_ARG_URL);
    if (url != null) {
      urlEditText.setText(url);
    }
    urlEditText.selectAll();
  }
  AlertDialog dialog=builder.create();
  dialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE);
  return dialog;
}
