{
  super.onCreate(icicle);
  setContentView(R.layout.newpage);
  Bundle extras=getIntent().getExtras();
  if (extras != null) {
    id=extras.getString("id");
    accountName=extras.getString("accountName");
  }
  this.setTitle(accountName + " - " + getResources().getText(R.string.new_page));
  selectedImageIDs.clear();
  selectedImageCtr=0;
  final customButton postButton=(customButton)findViewById(R.id.post);
  postButton.setOnClickListener(new customButton.OnClickListener(){
    public void onClick(    View v){
      boolean result=savePost();
      if (result) {
        Toast.makeText(newPage.this,getResources().getText(R.string.saved_to_local_drafts),Toast.LENGTH_SHORT).show();
        Bundle bundle=new Bundle();
        bundle.putString("returnStatus","OK");
        Intent mIntent=new Intent();
        mIntent.putExtras(bundle);
        setResult(RESULT_OK,mIntent);
        finish();
      }
    }
  }
);
  final customButton addPictureButton=(customButton)findViewById(R.id.addPictureButton);
  addPictureButton.setOnClickListener(new customButton.OnClickListener(){
    public void onClick(    View v){
      Intent photoPickerIntent=new Intent(Intent.ACTION_PICK);
      photoPickerIntent.setType("image/*");
      startActivityForResult(photoPickerIntent,1);
    }
  }
);
  final customButton boldButton=(customButton)findViewById(R.id.bold);
  boldButton.setOnClickListener(new customButton.OnClickListener(){
    public void onClick(    View v){
      TextView contentText=(TextView)findViewById(R.id.content);
      int selectionStart=contentText.getSelectionStart();
      int selectionEnd=contentText.getSelectionEnd();
      if (selectionStart > selectionEnd) {
        int temp=selectionEnd;
        selectionEnd=selectionStart;
        selectionStart=temp;
      }
      if (selectionStart == -1 || selectionStart == contentText.getText().toString().length() || (selectionStart == selectionEnd)) {
        AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(newPage.this);
        dialogBuilder.setTitle(getResources().getText(R.string.no_text_selected));
        dialogBuilder.setMessage(getResources().getText(R.string.select_text_to_bold) + " " + getResources().getText(R.string.howto_select_text));
        dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int whichButton){
          }
        }
);
        dialogBuilder.setCancelable(true);
        dialogBuilder.create().show();
      }
 else {
        String textToBold=contentText.getText().toString().substring(selectionStart,selectionEnd);
        textToBold="<strong>" + textToBold + "</strong>";
        String firstHalf=contentText.getText().toString().substring(0,selectionStart);
        String lastHalf=contentText.getText().toString().substring(selectionEnd,contentText.getText().toString().length());
        contentText.setText(firstHalf + textToBold + lastHalf);
        Editable etext=(Editable)contentText.getText();
        Selection.setSelection(etext,selectionStart + textToBold.length());
      }
    }
  }
);
  final customButton linkButton=(customButton)findViewById(R.id.link);
  linkButton.setOnClickListener(new customButton.OnClickListener(){
    public void onClick(    View v){
      TextView contentText=(TextView)findViewById(R.id.content);
      int selectionStart=contentText.getSelectionStart();
      int selectionEnd=contentText.getSelectionEnd();
      if (selectionStart > selectionEnd) {
        int temp=selectionEnd;
        selectionEnd=selectionStart;
        selectionStart=temp;
      }
      if (selectionStart == -1 || selectionStart == contentText.getText().toString().length() || (selectionStart == selectionEnd)) {
        AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(newPage.this);
        dialogBuilder.setTitle(getResources().getText(R.string.no_text_selected));
        dialogBuilder.setMessage(getResources().getText(R.string.select_text_to_link) + " " + getResources().getText(R.string.howto_select_text));
        dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int whichButton){
          }
        }
);
        dialogBuilder.setCancelable(true);
        dialogBuilder.create().show();
      }
 else {
        Intent i=new Intent(newPage.this,link.class);
        startActivityForResult(i,2);
      }
    }
  }
);
  final customButton emButton=(customButton)findViewById(R.id.em);
  emButton.setOnClickListener(new customButton.OnClickListener(){
    public void onClick(    View v){
      TextView contentText=(TextView)findViewById(R.id.content);
      int selectionStart=contentText.getSelectionStart();
      int selectionEnd=contentText.getSelectionEnd();
      if (selectionStart > selectionEnd) {
        int temp=selectionEnd;
        selectionEnd=selectionStart;
        selectionStart=temp;
      }
      if (selectionStart == -1 || selectionStart == contentText.getText().toString().length() || (selectionStart == selectionEnd)) {
        AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(newPage.this);
        dialogBuilder.setTitle(getResources().getText(R.string.no_text_selected));
        dialogBuilder.setMessage(getResources().getText(R.string.select_text_to_emphasize) + " " + getResources().getText(R.string.howto_select_text));
        dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int whichButton){
          }
        }
);
        dialogBuilder.setCancelable(true);
        dialogBuilder.create().show();
      }
 else {
        String textToBold=contentText.getText().toString().substring(selectionStart,selectionEnd);
        textToBold="<em>" + textToBold + "</em>";
        String firstHalf=contentText.getText().toString().substring(0,selectionStart);
        String lastHalf=contentText.getText().toString().substring(selectionEnd,contentText.getText().toString().length());
        contentText.setText(firstHalf + textToBold + lastHalf);
        Editable etext=(Editable)contentText.getText();
        Selection.setSelection(etext,selectionStart + textToBold.length());
      }
    }
  }
);
  final customButton bquoteButton=(customButton)findViewById(R.id.bquote);
  bquoteButton.setOnClickListener(new customButton.OnClickListener(){
    public void onClick(    View v){
      TextView contentText=(TextView)findViewById(R.id.content);
      int selectionStart=contentText.getSelectionStart();
      int selectionEnd=contentText.getSelectionEnd();
      if (selectionStart > selectionEnd) {
        int temp=selectionEnd;
        selectionEnd=selectionStart;
        selectionStart=temp;
      }
      if (selectionStart == -1 || selectionStart == contentText.getText().toString().length() || (selectionStart == selectionEnd)) {
        AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(newPage.this);
        dialogBuilder.setTitle(getResources().getText(R.string.no_text_selected));
        dialogBuilder.setMessage(getResources().getText(R.string.select_text_to_blockquote) + " " + getResources().getText(R.string.howto_select_text));
        dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int whichButton){
          }
        }
);
        dialogBuilder.setCancelable(true);
        dialogBuilder.create().show();
      }
 else {
        String textToBold=contentText.getText().toString().substring(selectionStart,selectionEnd);
        textToBold="<blockquote>" + textToBold + "</blockquote>";
        String firstHalf=contentText.getText().toString().substring(0,selectionStart);
        String lastHalf=contentText.getText().toString().substring(selectionEnd,contentText.getText().toString().length());
        contentText.setText(firstHalf + textToBold + lastHalf);
        Editable etext=(Editable)contentText.getText();
        Selection.setSelection(etext,selectionStart + textToBold.length());
      }
    }
  }
);
  final customButton clearPictureButton=(customButton)findViewById(R.id.clearPicture);
  clearPictureButton.setOnClickListener(new customButton.OnClickListener(){
    public void onClick(    View v){
      imageUrl.clear();
      thumbnailUrl.clear();
      selectedImageIDs.clear();
      selectedImageCtr=0;
      GridView gridview=(GridView)findViewById(R.id.gridView);
      gridview.setAdapter(null);
    }
  }
);
}
