{
  if (isFinishing() || getIntent() == null)   return;
  if (getIntent().hasExtra(NotificationsUtils.ARG_PUSH_AUTH_TOKEN)) {
    Bundle extras=getIntent().getExtras();
    String token=extras.getString(NotificationsUtils.ARG_PUSH_AUTH_TOKEN,"");
    String title=extras.getString(NotificationsUtils.ARG_PUSH_AUTH_TITLE,"");
    String message=extras.getString(NotificationsUtils.ARG_PUSH_AUTH_MESSAGE,"");
    long expires=extras.getLong(NotificationsUtils.ARG_PUSH_AUTH_EXPIRES,0);
    long now=System.currentTimeMillis() / 1000;
    if (expires > 0 && now > expires) {
      ToastUtils.showToast(this,R.string.push_auth_expired,ToastUtils.Duration.LONG);
      AnalyticsTracker.track(AnalyticsTracker.Stat.PUSH_AUTHENTICATION_EXPIRED);
    }
 else {
      NotificationsUtils.showPushAuthAlert(this,token,title,message);
    }
  }
  mViewPager.setCurrentItem(WPMainTabAdapter.TAB_NOTIFS);
  boolean shouldShowKeyboard=getIntent().getBooleanExtra(NotificationsListFragment.NOTE_INSTANT_REPLY_EXTRA,false);
  if (GCMMessageService.getNotificationsCount() == 1) {
    String noteId=getIntent().getStringExtra(NotificationsListFragment.NOTE_ID_EXTRA);
    if (!TextUtils.isEmpty(noteId)) {
      GCMMessageService.bumpPushNotificationsTappedAnalytics(noteId);
      boolean doLikeNote=getIntent().getBooleanExtra(NotificationsListFragment.NOTE_INSTANT_LIKE_EXTRA,false);
      if (doLikeNote) {
        NotificationsListFragment.openNoteForLike(this,noteId);
      }
 else {
        NotificationsListFragment.openNoteForReply(this,noteId,shouldShowKeyboard);
      }
    }
  }
 else {
    GCMMessageService.bumpPushNotificationsTappedAllAnalytics();
  }
  GCMMessageService.removeAllNotifications(this);
}
