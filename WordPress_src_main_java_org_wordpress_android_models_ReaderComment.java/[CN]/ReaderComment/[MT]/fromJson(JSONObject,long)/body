{
  if (json == null) {
    throw new IllegalArgumentException("null json comment");
  }
  ReaderComment comment=new ReaderComment();
  comment.blogId=blogId;
  comment.commentId=json.optLong("ID");
  comment.status=JSONUtils.getString(json,"status");
  comment.text=HtmlUtils.stripScript(JSONUtils.getString(json,"content"));
  comment.published=JSONUtils.getString(json,"date");
  comment.timestamp=DateTimeUtils.iso8601ToTimestamp(comment.published);
  JSONObject jsonPost=json.optJSONObject("post");
  if (jsonPost != null) {
    comment.postId=jsonPost.optLong("ID");
  }
  JSONObject jsonAuthor=json.optJSONObject("author");
  if (jsonAuthor != null) {
    comment.authorName=JSONUtils.getStringDecoded(jsonAuthor,"name");
    comment.authorAvatar=JSONUtils.getString(jsonAuthor,"avatar_URL");
    comment.authorUrl=JSONUtils.getString(jsonAuthor,"URL");
    comment.authorId=jsonAuthor.optLong("ID");
    comment.authorBlogId=jsonAuthor.optLong("site_ID");
  }
  JSONObject jsonParent=json.optJSONObject("parent");
  if (jsonParent != null) {
    comment.parentId=jsonParent.optLong("ID");
  }
  JSONObject jsonLikes=JSONUtils.getJSONChild(json,"meta/data/likes");
  if (jsonLikes != null) {
    comment.numLikes=jsonLikes.optInt("found");
    comment.isLikedByCurrentUser=JSONUtils.getBool(jsonLikes,"i_like");
  }
  return comment;
}
