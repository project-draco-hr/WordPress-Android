{
  if (context == null || imageUri == null || maxWidth <= 0)   return null;
  String filePath=null;
  if (imageUri.toString().contains("content:")) {
    String[] projection=new String[]{MediaStore.Images.Media.DATA};
    try {
      Cursor cur=context.getContentResolver().query(imageUri,projection,null,null,null);
      if (cur != null) {
        if (cur.moveToFirst()) {
          int dataColumn=cur.getColumnIndex(MediaStore.Images.Media.DATA);
          filePath=cur.getString(dataColumn);
        }
        cur.close();
      }
    }
 catch (    IllegalStateException stateException) {
      Log.d(ImageUtils.class.getName(),"IllegalStateException querying content:" + imageUri);
    }
  }
  if (TextUtils.isEmpty(filePath)) {
    filePath=imageUri.toString().replace("content://media","");
    filePath=filePath.replace("file://","");
  }
  BitmapFactory.Options optBounds=new BitmapFactory.Options();
  optBounds.inJustDecodeBounds=true;
  try {
    BitmapFactory.decodeFile(filePath,optBounds);
  }
 catch (  OutOfMemoryError e) {
    AppLog.e(AppLog.T.UTILS,"OutOfMemoryError Error in setting image: " + e);
    return null;
  }
  int scale=1;
  if (maxWidth > 0 && optBounds.outWidth > maxWidth) {
    double d=Math.pow(2,(int)Math.round(Math.log(maxWidth / (double)optBounds.outWidth) / Math.log(0.5)));
    scale=(int)d;
  }
  BitmapFactory.Options optActual=new BitmapFactory.Options();
  optActual.inSampleSize=scale;
  final Bitmap bmpResized;
  try {
    bmpResized=BitmapFactory.decodeFile(filePath,optActual);
  }
 catch (  OutOfMemoryError e) {
    AppLog.e(AppLog.T.UTILS,"OutOfMemoryError Error in setting image: " + e);
    return null;
  }
  if (bmpResized == null) {
    return null;
  }
  ByteArrayOutputStream stream=new ByteArrayOutputStream();
  float percentage=(float)maxWidth / bmpResized.getWidth();
  float proportionateHeight=bmpResized.getHeight() * percentage;
  int finalHeight=(int)Math.rint(proportionateHeight);
  float scaleWidth=((float)maxWidth) / bmpResized.getWidth();
  float scaleHeight=((float)finalHeight) / bmpResized.getHeight();
  float scaleBy=Math.min(scaleWidth,scaleHeight);
  Matrix matrix=new Matrix();
  matrix.postScale(scaleBy,scaleBy);
  if (rotation != 0) {
    matrix.setRotate(rotation);
  }
  Bitmap.CompressFormat fmt;
  if (fileExtension != null && fileExtension.equalsIgnoreCase("png")) {
    fmt=Bitmap.CompressFormat.PNG;
  }
 else {
    fmt=Bitmap.CompressFormat.JPEG;
  }
  final Bitmap bmpRotated;
  try {
    bmpRotated=Bitmap.createBitmap(bmpResized,0,0,bmpResized.getWidth(),bmpResized.getHeight(),matrix,true);
  }
 catch (  OutOfMemoryError e) {
    AppLog.e(AppLog.T.UTILS,"OutOfMemoryError Error in setting image: " + e);
    return null;
  }
catch (  NullPointerException e) {
    AppLog.e(AppLog.T.UTILS,"Bitmap.createBitmap has thrown a NPE internally. This should never happen: " + e);
    return null;
  }
  if (bmpRotated == null) {
    return null;
  }
  bmpRotated.compress(fmt,100,stream);
  bmpResized.recycle();
  bmpRotated.recycle();
  return stream.toByteArray();
}
