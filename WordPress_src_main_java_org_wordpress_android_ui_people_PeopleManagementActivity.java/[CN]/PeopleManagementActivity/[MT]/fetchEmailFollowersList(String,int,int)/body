{
  if (mEmailFollowersEndOfListReached || mEmailFollowersFetchRequestInProgress || !NetworkUtils.checkConnection(this)) {
    return false;
  }
  mEmailFollowersFetchRequestInProgress=true;
  PeopleUtils.fetchEmailFollowers(dotComBlogId,localTableBlogId,page,new PeopleUtils.FetchFollowersCallback(){
    @Override public void onSuccess(    List<Person> peopleList,    int pageFetched,    boolean isEndOfList){
      boolean isFreshList=(page == 1);
      mCanRefreshEmailFollowers=false;
      mEmailFollowersLastFetchedPage=pageFetched;
      mEmailFollowersEndOfListReached=isEndOfList;
      PeopleTable.saveEmailFollowers(peopleList,localTableBlogId,isFreshList);
      PeopleListFragment peopleListFragment=getListFragment();
      if (peopleListFragment != null) {
        peopleListFragment.fetchingRequestFinished(PeopleListFilter.EMAIL_FOLLOWERS,isFreshList,true);
      }
      refreshOnScreenFragmentDetails();
      mEmailFollowersFetchRequestInProgress=false;
    }
    @Override public void onError(){
      PeopleListFragment peopleListFragment=getListFragment();
      if (peopleListFragment != null) {
        boolean isFirstPage=page == 1;
        peopleListFragment.fetchingRequestFinished(PeopleListFilter.EMAIL_FOLLOWERS,isFirstPage,false);
      }
      mEmailFollowersFetchRequestInProgress=false;
      ToastUtils.showToast(PeopleManagementActivity.this,R.string.error_fetch_email_followers_list,ToastUtils.Duration.SHORT);
    }
  }
);
  return true;
}
