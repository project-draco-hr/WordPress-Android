{
  if (!NetworkUtils.checkConnection(this)) {
    return;
  }
  Person person=getCurrentPerson();
  if (person == null) {
    return;
  }
  String blogId=WordPress.getCurrentRemoteBlogId();
  if (blogId == null) {
    return;
  }
  final Person.PersonType personType=person.getPersonType();
  final String displayName=person.getDisplayName();
  PeopleUtils.RemoveUserCallback callback=new PeopleUtils.RemoveUserCallback(){
    @Override public void onSuccess(    long personID,    int localTableBlogId){
      if (personType == Person.PersonType.USER) {
        AnalyticsUtils.trackWithCurrentBlogDetails(AnalyticsTracker.Stat.PERSON_REMOVED);
      }
      Person person=PeopleTable.getUser(personID,localTableBlogId);
      if (person != null) {
        PeopleTable.deleteUser(personID,localTableBlogId);
      }
      String message=getString(R.string.person_removed,displayName);
      ToastUtils.showToast(PeopleManagementActivity.this,message,ToastUtils.Duration.LONG);
      navigateBackToPeopleListFragment();
      refreshPeopleListFragment();
    }
    @Override public void onError(){
      ToastUtils.showToast(PeopleManagementActivity.this,R.string.error_remove_user,ToastUtils.Duration.LONG);
    }
  }
;
  if (personType == Person.PersonType.FOLLOWER || personType == Person.PersonType.EMAIL_FOLLOWER) {
    PeopleUtils.removeFollower(blogId,person.getPersonID(),person.getLocalTableBlogId(),personType,callback);
  }
 else {
    PeopleUtils.removeUser(blogId,person.getPersonID(),person.getLocalTableBlogId(),callback);
  }
}
