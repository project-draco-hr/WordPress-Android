{
  if (intent == null) {
    AppLog.e(T.STATS,"StatsService was killed and restarted with a null intent.");
    stopRefresh();
    return START_NOT_STICKY;
  }
  final String blogId=intent.getStringExtra(ARG_BLOG_ID);
  if (TextUtils.isEmpty(blogId)) {
    AppLog.e(T.STATS,"StatsService was started with a blank blog_id ");
    return START_NOT_STICKY;
  }
  final StatsTimeframe period;
  if (intent.hasExtra(ARG_PERIOD)) {
    period=(StatsTimeframe)intent.getSerializableExtra(ARG_PERIOD);
  }
 else {
    period=StatsTimeframe.DAY;
  }
  final String requestedDate;
  if (intent.getStringExtra(ARG_DATE) == null) {
    AppLog.w(T.STATS,"StatsService is started with a NULL date on this blogID - " + blogId + ". Using current date!!!");
    int parsedBlogID=Integer.parseInt(blogId);
    int localTableBlogId=WordPress.wpDB.getLocalTableBlogIdForRemoteBlogId(parsedBlogID);
    requestedDate=StatsUtils.getCurrentDateTZ(localTableBlogId);
  }
 else {
    requestedDate=intent.getStringExtra(ARG_DATE);
  }
  StatsEndpointsEnum[] sectionsToUpdate=(StatsEndpointsEnum[])intent.getSerializableExtra(ARG_SECTION);
  this.mServiceStartId=startId;
  for (  final StatsEndpointsEnum sectionToUpdate : sectionsToUpdate) {
    parseResponseExecutor.submit(new Thread(){
      @Override public void run(){
        startTasks(blogId,period,requestedDate,sectionToUpdate);
      }
    }
);
  }
  return START_NOT_STICKY;
}
