{
  if (intent == null) {
    AppLog.e(T.STATS,"StatsService was killed and restarted with a null intent.");
    stopRefresh();
    return START_NOT_STICKY;
  }
  final String blogId=intent.getStringExtra(ARG_BLOG_ID);
  if (TextUtils.isEmpty(blogId)) {
    AppLog.e(T.STATS,"StatsService was started with a blank blog_id ");
    return START_NOT_STICKY;
  }
  StatsTimeframe period=StatsTimeframe.DAY;
  if (intent.hasExtra(ARG_PERIOD)) {
    period=(StatsTimeframe)intent.getSerializableExtra(ARG_PERIOD);
  }
  String requestedDate=intent.getStringExtra(ARG_DATE);
  if (requestedDate == null) {
    AppLog.w(T.STATS,"StatsService is started with a NULL date on this blogID - " + blogId + ". Using current date!!!");
    int parsedBlogID=Integer.parseInt(blogId);
    int localTableBlogId=WordPress.wpDB.getLocalTableBlogIdForRemoteBlogId(parsedBlogID);
    requestedDate=StatsUtils.getCurrentDateTZ(localTableBlogId);
  }
  boolean updateAlltimeStats=intent.getBooleanExtra(ARG_UPDATE_ALLTIME_STATS,true);
  boolean updateGraphStats=intent.getBooleanExtra(ARG_UPDATE_GRAPH_STATS,true);
  if (mServiceBlogId == null) {
    startTasks(blogId,period,requestedDate,updateGraphStats,updateAlltimeStats,startId);
  }
 else   if (blogId.equals(mServiceBlogId) && mServiceRequestedTimeframe == period && requestedDate.equals(mServiceRequestedDate)) {
    AppLog.i(T.STATS,"StatsService is already running on this blogID - " + mServiceBlogId + " for the same period and the same date.");
  }
 else {
    stopRefresh();
    startTasks(blogId,period,requestedDate,updateGraphStats,updateAlltimeStats,startId);
  }
  this.mServiceStartId=startId;
  return START_NOT_STICKY;
}
