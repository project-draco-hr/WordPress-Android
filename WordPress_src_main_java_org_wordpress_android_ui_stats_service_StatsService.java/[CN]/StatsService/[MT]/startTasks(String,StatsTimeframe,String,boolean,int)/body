{
  this.mServiceBlogId=blogId;
  this.mServiceRequestedTimeframe=timeframe;
  this.mServiceRequestedDate=date;
  this.mServiceStartId=startId;
  new Thread(){
    @Override public void run(){
      final RestClientUtils restClientUtils=WordPress.getRestClientUtilsV1_1();
      String period=timeframe.getLabelForRestCall();
      AppLog.i(T.STATS,"Update started for blogID - " + blogId + " with the following period: "+ period+ " on the following date: "+ mServiceRequestedDate);
      broadcastUpdate(true);
      if (updateGraph) {
        VisitsCallListener vListener=new VisitsCallListener(mServiceBlogId,mServiceRequestedTimeframe);
        final String visitsPath=String.format("/sites/%s/stats/visits?unit=%s&quantity=10&date=%s",mServiceBlogId,period,mServiceRequestedDate);
        statsNetworkRequests.add(restClientUtils.get(visitsPath,vListener,vListener));
        broadcastSectionUpdating(StatsSectionEnum.VISITS);
      }
      TopPostsAndPagesCallListener topPostsAndPagesListener=new TopPostsAndPagesCallListener(mServiceBlogId,mServiceRequestedTimeframe);
      final String topPostsAndPagesPath=String.format("/sites/%s/stats/top-posts?period=%s&date=%s",mServiceBlogId,period,mServiceRequestedDate);
      statsNetworkRequests.add(restClientUtils.get(topPostsAndPagesPath,topPostsAndPagesListener,topPostsAndPagesListener));
      broadcastSectionUpdating(StatsSectionEnum.TOP_POSTS);
      ReferrersCallListener referrersListener=new ReferrersCallListener(mServiceBlogId,mServiceRequestedTimeframe);
      final String referrersPath=String.format("/sites/%s/stats/referrers?period=%s&date=%s",mServiceBlogId,period,mServiceRequestedDate);
      statsNetworkRequests.add(restClientUtils.get(referrersPath,referrersListener,referrersListener));
      broadcastSectionUpdating(StatsSectionEnum.REFERRERS);
      ClicksCallListener clicksListener=new ClicksCallListener(mServiceBlogId,mServiceRequestedTimeframe);
      final String clicksPath=String.format("/sites/%s/stats/clicks?period=%s&date=%s",mServiceBlogId,period,mServiceRequestedDate);
      statsNetworkRequests.add(restClientUtils.get(clicksPath,clicksListener,clicksListener));
      broadcastSectionUpdating(StatsSectionEnum.CLICKS);
      GeoviewsCallListener countriesListener=new GeoviewsCallListener(mServiceBlogId,mServiceRequestedTimeframe);
      final String countriesPath=String.format("/sites/%s/stats/country-views?period=%s&date=%s",mServiceBlogId,period,mServiceRequestedDate);
      statsNetworkRequests.add(restClientUtils.get(countriesPath,countriesListener,countriesListener));
      broadcastSectionUpdating(StatsSectionEnum.GEO_VIEWS);
      numberOfNetworkCalls=statsNetworkRequests.size();
    }
  }
.start();
}
