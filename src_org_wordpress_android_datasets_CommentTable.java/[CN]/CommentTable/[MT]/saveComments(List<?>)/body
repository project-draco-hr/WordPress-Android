{
  SQLiteDatabase db=getWritableDb();
  db.beginTransaction();
  try {
    try {
      for (int i=0; i < commentValues.size(); i++) {
        ContentValues values=new ContentValues();
        Map<?,?> thisHash=(Map<?,?>)commentValues.get(i);
        values.put("blogID",thisHash.get("blogID").toString());
        values.put("postID",thisHash.get("postID").toString());
        values.put("iCommentID",thisHash.get("commentID").toString());
        values.put("author",thisHash.get("author").toString());
        values.put("comment",thisHash.get("comment").toString());
        values.put("commentDate",thisHash.get("commentDate").toString());
        values.put("commentDateFormatted",thisHash.get("commentDateFormatted").toString());
        values.put("status",thisHash.get("status").toString());
        values.put("url",thisHash.get("url").toString());
        values.put("email",thisHash.get("email").toString());
        values.put("postTitle",thisHash.get("postTitle").toString());
        db.insertWithOnConflict(COMMENTS_TABLE,null,values,SQLiteDatabase.CONFLICT_REPLACE);
      }
      db.setTransactionSuccessful();
      return true;
    }
 catch (    SQLiteException e) {
      AppLog.e(AppLog.T.COMMENTS,e);
      return false;
    }
  }
  finally {
    db.endTransaction();
  }
}
