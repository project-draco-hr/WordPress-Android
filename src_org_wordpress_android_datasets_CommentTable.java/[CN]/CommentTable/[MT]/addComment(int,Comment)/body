{
  if (comment == null)   return;
  deleteComment(localBlogId,comment.commentID);
  ContentValues values=new ContentValues();
  values.put("blog_id",localBlogId);
  values.put("post_id",comment.postID);
  values.put("comment_id",comment.commentID);
  values.put("author",StringUtils.notNullStr(comment.authorName));
  values.put("url",StringUtils.notNullStr(comment.authorURL));
  values.put("comment",StringUtils.notNullStr(comment.comment));
  values.put("status",StringUtils.notNullStr(comment.getStatus()));
  values.put("email",StringUtils.notNullStr(comment.authorEmail));
  values.put("postTitle",StringUtils.notNullStr(comment.postTitle));
  values.put("commentDateFormatted",StringUtils.notNullStr(comment.dateCreatedFormatted));
  values.put("commentDate",StringUtils.notNullStr(comment.dateCreatedFormatted));
  getWritableDb().insertWithOnConflict(COMMENTS_TABLE,null,values,SQLiteDatabase.CONFLICT_REPLACE);
}
