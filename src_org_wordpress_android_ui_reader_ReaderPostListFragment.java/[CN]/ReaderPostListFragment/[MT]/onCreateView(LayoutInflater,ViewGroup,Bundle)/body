{
  final Context context=container.getContext();
  final View view=inflater.inflate(R.layout.reader_fragment_post_list,container,false);
  boolean hasTransparentActionBar=isFullScreenSupported();
  mShotHeight=getResources().getDimensionPixelSize(R.dimen.reader_blog_header_image_height);
  mDisplayWidth=DisplayUtils.getDisplayPixelWidth(context);
  mListView=(ListView)view.findViewById(android.R.id.list);
  mListView.setOnTouchListener(this);
  mImageMshot=(WPNetworkImageView)view.findViewById(R.id.image_mshot);
  mNewPostsBar=(TextView)view.findViewById(R.id.text_new_posts);
  mNewPostsBar.setVisibility(View.GONE);
  mNewPostsBar.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
      reloadPosts(true);
      hideNewPostsBar();
    }
  }
);
  if (hasTransparentActionBar) {
    final int actionbarHeight=DisplayUtils.getActionBarHeight(context);
    RelativeLayout.LayoutParams params=(RelativeLayout.LayoutParams)mNewPostsBar.getLayoutParams();
    params.topMargin=actionbarHeight;
  }
switch (getPostListType()) {
case BLOG:
    if (hasTransparentActionBar) {
    }
  mImageMshot.setVisibility(View.VISIBLE);
mImageMshot.setScaleType(ImageView.ScaleType.MATRIX);
ReaderBlogInfoHeader header=new ReaderBlogInfoHeader(context);
mListView.addHeaderView(header);
ReaderBlogInfoHeader.OnBlogInfoListener infoListener=new ReaderBlogInfoHeader.OnBlogInfoListener(){
@Override public void onBlogInfoShown(ReaderBlogInfo blogInfo){
if (hasActivity() && TextUtils.isEmpty(mImageMshot.getUrl())) {
int width=DisplayUtils.getDisplayPixelWidth(getActivity());
mImageMshot.setImageUrl(blogInfo.getMshotsUrl(width),WPNetworkImageView.ImageType.PHOTO);
}
}
}
;
header.setBlogId(mCurrentBlogId,infoListener);
break;
case TAG:
mImageMshot.setVisibility(View.GONE);
if (hasTransparentActionBar) {
ReaderFullScreenUtils.addListViewHeader(context,mListView);
}
break;
}
mEmptyView=view.findViewById(R.id.empty_view);
mListView.setOnScrollListener(this);
mListView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
@Override public void onItemClick(AdapterView<?> adapterView,View view,int position,long id){
position-=mListView.getHeaderViewsCount();
if (position >= 0 && mPostSelectedListener != null) {
ReaderPost post=(ReaderPost)getPostAdapter().getItem(position);
if (post != null) {
mPostSelectedListener.onPostSelected(post.blogId,post.postId);
}
}
}
}
);
mProgress=(ProgressBar)view.findViewById(R.id.progress_footer);
mProgress.setVisibility(View.GONE);
if (getPostListType() == ReaderPostListType.TAG) {
mPullToRefreshHelper=new PullToRefreshHelper(getActivity(),(PullToRefreshLayout)view.findViewById(R.id.ptr_layout),new RefreshListener(){
@Override public void onRefreshStarted(View view){
if (getActivity() == null || !NetworkUtils.checkConnection(getActivity())) {
mPullToRefreshHelper.setRefreshing(false);
return;
}
updatePostsWithCurrentTag(ReaderActions.RequestDataAction.LOAD_NEWER,RefreshType.MANUAL);
}
}
);
}
return view;
}
