{
  final View view=inflater.inflate(R.layout.reader_fragment_post_list,container,false);
  mListView=(ListView)view.findViewById(android.R.id.list);
  if (isFullScreenSupported()) {
    ReaderFullScreenUtils.addListViewHeader(container.getContext(),mListView);
  }
  if (getPostListType() == ReaderPostListType.BLOG) {
    mBlogInfoHeader=new ReaderBlogInfoHeader(container.getContext());
    mListView.addHeaderView(mBlogInfoHeader);
    mBlogInfoHeader.setBlogId(mCurrentBlogId);
  }
  mNewPostsBar=(TextView)view.findViewById(R.id.text_new_posts);
  mNewPostsBar.setVisibility(View.GONE);
  mNewPostsBar.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
      reloadPosts(true);
      hideNewPostsBar();
    }
  }
);
  mEmptyView=view.findViewById(R.id.empty_view);
  mListView.setOnScrollListener(this);
  mListView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> adapterView,    View view,    int position,    long id){
      if (mPostSelectedListener != null) {
        position-=mListView.getHeaderViewsCount();
        ReaderPost post=(ReaderPost)getPostAdapter().getItem(position);
        if (post != null)         mPostSelectedListener.onPostSelected(post.blogId,post.postId);
      }
    }
  }
);
  mProgress=(ProgressBar)view.findViewById(R.id.progress_footer);
  mProgress.setVisibility(View.GONE);
  if (getPostListType() == ReaderPostListType.TAG) {
    mPullToRefreshHelper=new PullToRefreshHelper(getActivity(),(PullToRefreshLayout)view.findViewById(R.id.ptr_layout),new RefreshListener(){
      @Override public void onRefreshStarted(      View view){
        if (getActivity() == null || !NetworkUtils.checkConnection(getActivity())) {
          mPullToRefreshHelper.setRefreshing(false);
          return;
        }
        updatePostsWithCurrentTag(ReaderActions.RequestDataAction.LOAD_NEWER,RefreshType.MANUAL);
      }
    }
);
  }
  return view;
}
