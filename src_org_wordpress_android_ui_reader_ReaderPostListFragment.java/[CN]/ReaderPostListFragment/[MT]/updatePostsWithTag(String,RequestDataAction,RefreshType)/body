{
  if (TextUtils.isEmpty(tagName)) {
    return;
  }
  if (!NetworkUtils.isNetworkAvailable(getActivity())) {
    AppLog.i(T.READER,"reader post list > network unavailable, canceled tag update");
    return;
  }
  setIsUpdating(true,updateAction);
  setEmptyTitleAndDescriptionForCurrentTag();
  if (refreshType == RefreshType.MANUAL && isCurrentTag(tagName)) {
    if (tagName.equals(ReaderTag.TAG_NAME_LIKED) || tagName.equals(ReaderTag.TAG_NAME_FOLLOWING))     refreshPosts();
  }
  ReaderActions.UpdateResultAndCountListener resultListener=new ReaderActions.UpdateResultAndCountListener(){
    @Override public void onUpdateResult(    ReaderActions.UpdateResult result,    int numNewPosts){
      if (!hasActivity()) {
        AppLog.w(T.READER,"reader post list > new posts when fragment has no activity");
        return;
      }
      setIsUpdating(false,updateAction);
      if (!isCurrentTag(tagName)) {
        AppLog.i(T.READER,"reader post list > new posts in inactive tag");
        return;
      }
      if (result == ReaderActions.UpdateResult.CHANGED && numNewPosts > 0) {
        if (!isPostAdapterEmpty() && updateAction == RequestDataAction.LOAD_NEWER) {
          showNewPostsBar();
        }
 else {
          refreshPosts();
        }
      }
 else {
        setEmptyTitleAndDescriptionForCurrentTag();
      }
    }
  }
;
  boolean allowBackfill=(updateAction == RequestDataAction.LOAD_NEWER);
  if (allowBackfill) {
    ReaderActions.PostBackfillListener backfillListener=new ReaderActions.PostBackfillListener(){
      @Override public void onPostsBackfilled(      int numNewPosts){
        if (!hasActivity()) {
          AppLog.w(T.READER,"reader post list > new posts backfilled when fragment has no activity");
          return;
        }
        if (!isCurrentTag(tagName)) {
          AppLog.i(T.READER,"reader post list > new posts backfilled in inactive tag");
        }
 else         if (isPostAdapterEmpty()) {
          showNewPostsBar();
        }
      }
    }
;
    ReaderPostActions.updatePostsInTagWithBackfill(tagName,resultListener,backfillListener);
  }
 else {
    ReaderPostActions.updatePostsInTag(tagName,updateAction,resultListener);
  }
}
