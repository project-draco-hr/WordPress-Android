{
  LinearLayout view=new LinearLayout(getContext());
  view.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));
  view.setOrientation(LinearLayout.VERTICAL);
  String[] settingsArray=getContext().getResources().getStringArray(R.array.notifications_site_settings);
  String[] settingsValues=getContext().getResources().getStringArray(R.array.notifications_site_settings_values);
  if (settingsArray != null && settingsArray.length == settingsValues.length) {
    for (int i=0; i < settingsArray.length; i++) {
      String settingName=settingsArray[i];
      String settingValue=settingsValues[i];
      View commentsSetting=View.inflate(getContext(),R.layout.notifications_settings_switch,null);
      TextView title=(TextView)commentsSetting.findViewById(R.id.notifications_switch_title);
      title.setText(settingName);
      Switch toggleSwitch=(Switch)commentsSetting.findViewById(R.id.notifications_switch);
      toggleSwitch.setChecked(JSONUtils.queryJSON(mSettingsJson,settingValue,true));
      toggleSwitch.setTag(settingValue);
      toggleSwitch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){
        @Override public void onCheckedChanged(        CompoundButton compoundButton,        boolean isChecked){
          try {
            String settingName=StringUtils.notNullStr(compoundButton.getTag().toString());
            if (mUpdatedJson.has(settingName)) {
              mUpdatedJson.remove(settingName);
            }
 else {
              mUpdatedJson.put(compoundButton.getTag().toString(),isChecked);
            }
          }
 catch (          JSONException e) {
            AppLog.e(AppLog.T.NOTIFS,"Could not add notification setting change to JSONObject");
          }
        }
      }
);
      view.addView(commentsSetting);
    }
  }
  return view;
}
