{
  if (imageTag.contains("featured-image")) {
    return;
  }
  int origWidth;
  int origHeight;
  ReaderAttachment attach=(mAttachments != null ? mAttachments.get(imageUrl) : null);
  if (attach != null && attach.isImage()) {
    origWidth=attach.width;
    origHeight=attach.height;
  }
 else {
    ImageSize size=getImageSizeFromImageUrl(imageUrl);
    origWidth=(size != null ? size.width : 0);
    origHeight=(size != null ? size.height : 0);
  }
  int newWidth;
  int newHeight;
  if (origWidth > 0 && origHeight > 0) {
    float ratio=((float)origHeight / (float)origWidth);
    newWidth=mResourceVars.fullSizeImageWidth;
    newHeight=(int)(newWidth * ratio);
  }
 else   if (origWidth > 0) {
    newWidth=mResourceVars.fullSizeImageWidth;
    newHeight=0;
  }
 else {
    AppLog.d(AppLog.T.READER,"reader renderer > no size for " + imageUrl);
    return;
  }
  String newImageUrl=ReaderUtils.getResizedImageUrl(imageUrl,newWidth,newHeight,mPost.isPrivate);
  String newImageTag=String.format("<img class='size-full' src='%s' width='%d' height='%d' />",newImageUrl,newWidth,newHeight);
  int start=mRenderBuilder.indexOf(imageTag);
  if (start == -1) {
    AppLog.w(AppLog.T.READER,"reader renderer > image not found in builder");
    return;
  }
  mRenderBuilder.replace(start,start + imageTag.length(),newImageTag);
}
