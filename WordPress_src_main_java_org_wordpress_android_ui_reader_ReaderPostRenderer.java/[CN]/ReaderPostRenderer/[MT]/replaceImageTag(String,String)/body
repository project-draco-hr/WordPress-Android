{
  ImageSize origSize=getImageSize(imageTag,imageUrl);
  if (origSize == null) {
    return;
  }
  if (origSize.width > 0 && origSize.width < (mResourceVars.fullSizeImageWidthPx / 4)) {
    return;
  }
  int newWidth;
  int newHeight;
  if (origSize.width > 0 && origSize.height > 0) {
    if (origSize.height > origSize.width) {
      newHeight=mResourceVars.fullSizeImageWidthPx;
      float ratio=((float)origSize.width / (float)origSize.height);
      newWidth=(int)(newHeight * ratio);
    }
 else {
      float ratio=((float)origSize.height / (float)origSize.width);
      newWidth=mResourceVars.fullSizeImageWidthPx;
      newHeight=(int)(newWidth * ratio);
    }
  }
 else   if (origSize.width > 0) {
    newWidth=mResourceVars.fullSizeImageWidthPx;
    newHeight=0;
  }
 else {
    return;
  }
  String newImageUrl=ReaderUtils.getResizedImageUrl(imageUrl,newWidth,newHeight,mPost.isPrivate);
  String newImageTag;
  if (newHeight > 0) {
    newImageTag=String.format("<img class='size-full' src='%s' width='%d' height='%d' />",newImageUrl,pxToDp(newWidth),pxToDp(newHeight));
  }
 else {
    newImageTag=String.format("<img class='size-full' src='%s' width='%d' />",newImageUrl,pxToDp(newWidth));
  }
  int start=mRenderBuilder.indexOf(imageTag);
  if (start == -1) {
    AppLog.w(AppLog.T.READER,"reader renderer > image not found in builder");
    return;
  }
  mRenderBuilder.replace(start,start + imageTag.length(),newImageTag);
}
