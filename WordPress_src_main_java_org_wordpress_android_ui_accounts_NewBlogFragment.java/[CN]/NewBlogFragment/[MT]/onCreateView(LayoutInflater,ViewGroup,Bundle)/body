{
  ViewGroup rootView=(ViewGroup)inflater.inflate(R.layout.create_blog_fragment,container,false);
  mSignupButton=(WPTextView)rootView.findViewById(R.id.signup_button);
  mSignupButton.setOnClickListener(mSignupClickListener);
  mSignupButton.setEnabled(false);
  mCancelButton=(WPTextView)rootView.findViewById(R.id.cancel_button);
  mCancelButton.setOnClickListener(mCancelClickListener);
  mProgressTextSignIn=(WPTextView)rootView.findViewById(R.id.nux_sign_in_progress_text);
  mProgressBarSignIn=(RelativeLayout)rootView.findViewById(R.id.nux_sign_in_progress_bar);
  mSiteUrlTextField=(EditText)rootView.findViewById(R.id.site_url);
  mSiteUrlTextField.setOnKeyListener(mSiteUrlKeyListener);
  mSiteUrlTextField.setOnEditorActionListener(mEditorAction);
  mSiteUrlTextField.addTextChangedListener(new TextWatcher(){
    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
      checkIfFieldsFilled();
    }
    @Override public void afterTextChanged(    Editable s){
      String lowerCase=s.toString().toLowerCase();
      if (!lowerCase.equals(s.toString())) {
        s.replace(0,s.length(),lowerCase);
      }
    }
  }
);
  mSiteTitleTextField=(EditText)rootView.findViewById(R.id.site_title);
  mSiteTitleTextField.addTextChangedListener(this);
  mSiteTitleTextField.addTextChangedListener(mSiteTitleWatcher);
  mSiteTitleTextField.setOnFocusChangeListener(new View.OnFocusChangeListener(){
    @Override public void onFocusChange(    View v,    boolean hasFocus){
      if (hasFocus) {
        mAutoCompleteUrl=EditTextUtils.getText(mSiteTitleTextField).equals(EditTextUtils.getText(mSiteUrlTextField)) || EditTextUtils.isEmpty(mSiteUrlTextField);
      }
    }
  }
);
  return rootView;
}
