{
  if (!cursor.moveToFirst())   return;
  mUploadInProgress=true;
  final String blogIdStr=cursor.getString((cursor.getColumnIndex(WordPressDB.COLUMN_NAME_BLOG_ID)));
  final String mediaId=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_MEDIA_ID));
  String fileName=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_NAME));
  String filePath=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_PATH));
  String mimeType=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_MIME_TYPE));
  MediaFile mediaFile=new MediaFile();
  mediaFile.setBlogId(blogIdStr);
  mediaFile.setFileName(fileName);
  mediaFile.setFilePath(filePath);
  mediaFile.setMimeType(mimeType);
  mCurrentUploadMediaId=mediaId;
  mCurrentUploadMediaTask=new ApiHelper.UploadMediaTask(mContext,mediaFile,new ApiHelper.UploadMediaTask.Callback(){
    @Override public void onSuccess(    String remoteId,    String remoteUrl,    String secondaryId){
      WordPress.wpDB.updateMediaLocalToRemoteId(blogIdStr,mediaId,remoteId);
      EventBus.getDefault().post(new MediaEvents.MediaUploadSucceeded(blogIdStr,mediaId,remoteId,remoteUrl,secondaryId));
      fetchMediaFile(remoteId);
    }
    @Override public void onFailure(    ApiHelper.ErrorType errorType,    String errorMessage,    Throwable throwable){
      WordPress.wpDB.updateMediaUploadState(blogIdStr,mediaId,MediaUploadState.FAILED);
      mUploadInProgress=false;
      mCurrentUploadMediaId="";
      MediaEvents.MediaUploadFailed event;
      if (errorMessage == null) {
        event=new MediaEvents.MediaUploadFailed(mediaId,getString(R.string.upload_failed),true);
      }
 else {
        event=new MediaEvents.MediaUploadFailed(mediaId,errorMessage);
      }
      EventBus.getDefault().post(event);
      mHandler.post(mFetchQueueTask);
      if (errorType != ErrorType.NETWORK_XMLRPC) {
        CrashlyticsUtils.logException(throwable,ExceptionType.SPECIFIC,T.MEDIA,errorMessage);
      }
    }
    @Override public void onProgressUpdate(    float progress){
      EventBus.getDefault().post(new MediaEvents.MediaUploadProgress(mediaId,progress));
    }
  }
);
  WordPress.wpDB.updateMediaUploadState(blogIdStr,mediaId,MediaUploadState.UPLOADING);
  List<Object> apiArgs=new ArrayList<Object>();
  apiArgs.add(WordPress.getCurrentBlog());
  mCurrentUploadMediaTask.execute(apiArgs);
  mHandler.post(mFetchQueueTask);
}
