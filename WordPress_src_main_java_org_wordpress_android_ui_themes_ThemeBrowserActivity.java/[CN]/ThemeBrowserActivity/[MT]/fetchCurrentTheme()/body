{
  final String siteId=getBlogId();
  WordPress.getRestClientUtilsV1_1().getCurrentTheme(siteId,new Listener(){
    @Override public void onResponse(    JSONObject response){
      try {
        mCurrentTheme=Theme.fromJSONV1_1(response);
        if (mCurrentTheme != null) {
          mCurrentTheme.setIsCurrent(true);
          mCurrentTheme.save();
          WordPress.wpDB.setCurrentTheme(siteId,mCurrentTheme.getId());
          if (mThemeBrowserFragment != null) {
            mThemeBrowserFragment.setRefreshing(false);
            if (mThemeBrowserFragment.getCurrentThemeTextView() != null) {
              mThemeBrowserFragment.getCurrentThemeTextView().setText(mCurrentTheme.getName());
              mThemeBrowserFragment.setCurrentThemeId(mCurrentTheme.getId());
            }
          }
        }
      }
 catch (      JSONException e) {
        AppLog.e(T.THEMES,e);
      }
    }
  }
,new ErrorListener(){
    @Override public void onErrorResponse(    VolleyError response){
      String themeId=WordPress.wpDB.getCurrentThemeId(siteId);
      mCurrentTheme=WordPress.wpDB.getTheme(siteId,themeId);
      if (mCurrentTheme != null && mThemeBrowserFragment != null) {
        if (mThemeBrowserFragment.getCurrentThemeTextView() != null) {
          mThemeBrowserFragment.getCurrentThemeTextView().setText(mCurrentTheme.getName());
          mThemeBrowserFragment.setCurrentThemeId(mCurrentTheme.getId());
        }
      }
    }
  }
);
}
