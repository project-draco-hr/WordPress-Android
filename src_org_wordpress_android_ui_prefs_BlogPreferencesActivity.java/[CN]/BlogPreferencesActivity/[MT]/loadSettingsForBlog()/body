{
  ((TextView)findViewById(R.id.l_section1)).setText(getResources().getString(R.string.account_details).toUpperCase(Locale.getDefault()));
  ((TextView)findViewById(R.id.l_section2)).setText(getResources().getString(R.string.media).toUpperCase(Locale.getDefault()));
  ((TextView)findViewById(R.id.l_section3)).setText(getResources().getString(R.string.location).toUpperCase(Locale.getDefault()));
  ((TextView)findViewById(R.id.l_maxImageWidth)).setText(getResources().getString(R.string.max_thumbnail_px_width).toUpperCase(Locale.getDefault()));
  ((TextView)findViewById(R.id.l_httpuser)).setText(getResources().getString(R.string.http_credentials).toUpperCase(Locale.getDefault()));
  ArrayAdapter<Object> spinnerArrayAdapter=new ArrayAdapter<Object>(this,R.layout.spinner_textview,new String[]{"Original Size","100","200","300","400","500","600","700","800","900","1000","1100","1200","1300","1400","1500","1600","1700","1800","1900","2000"});
  spinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
  mImageWidthSpinner.setAdapter(spinnerArrayAdapter);
  mImageWidthSpinner.setOnItemSelectedListener(new OnItemSelectedListener(){
    @Override public void onItemSelected(    AdapterView<?> parent,    View view,    int position,    long id){
      CheckBox fullSizeImageCheckBox=(CheckBox)findViewById(R.id.fullSizeImage);
      if (id == 0)       fullSizeImageCheckBox.setVisibility(View.GONE);
 else       fullSizeImageCheckBox.setVisibility(View.VISIBLE);
    }
    @Override public void onNothingSelected(    AdapterView<?> arg0){
    }
  }
);
  mUsernameET.setText(blog.getUsername());
  originalUsername=blog.getUsername();
  mPasswordET.setText(blog.getPassword());
  mHttpUsernameET.setText(blog.getHttpuser());
  mHttpPasswordET.setText(blog.getHttppassword());
  TextView httpUserLabel=(TextView)findViewById(R.id.l_httpuser);
  if (blog.isDotcomFlag()) {
    mHttpUsernameET.setVisibility(View.GONE);
    mHttpPasswordET.setVisibility(View.GONE);
    httpUserLabel.setVisibility(View.GONE);
  }
 else {
    mHttpUsernameET.setVisibility(View.VISIBLE);
    mHttpPasswordET.setVisibility(View.VISIBLE);
    httpUserLabel.setVisibility(View.VISIBLE);
  }
  mFullSizeCB.setChecked(blog.isFullSizeImage());
  mScaledCB.setChecked(blog.isScaledImage());
  this.mScaledImageWidthET.setText("" + blog.getScaledImageWidth());
  showScaledSetting(blog.isScaledImage());
  CheckBox scaledImage=(CheckBox)findViewById(R.id.scaledImage);
  scaledImage.setChecked(false);
  scaledImage.setVisibility(View.GONE);
  CheckBox fullSizeImageCheckBox=(CheckBox)findViewById(R.id.fullSizeImage);
  fullSizeImageCheckBox.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      CheckBox fullSize=(CheckBox)findViewById(R.id.fullSizeImage);
      if (fullSize.isChecked()) {
        CheckBox scaledImage=(CheckBox)findViewById(R.id.scaledImage);
        if (scaledImage.isChecked()) {
          scaledImage.setChecked(false);
          showScaledSetting(false);
        }
      }
    }
  }
);
  boolean hasLocationProvider=false;
  LocationManager locationManager=(LocationManager)getSystemService(LOCATION_SERVICE);
  List<String> providers=locationManager.getProviders(true);
  for (  String providerName : providers) {
    if (providerName.equals(LocationManager.GPS_PROVIDER) || providerName.equals(LocationManager.NETWORK_PROVIDER)) {
      hasLocationProvider=true;
    }
  }
  if (hasLocationProvider) {
    mLocationCB.setChecked(blog.isLocation());
  }
 else {
    mLocationCB.setChecked(false);
    RelativeLayout locationLayout=(RelativeLayout)findViewById(R.id.sectionLocation);
    locationLayout.setVisibility(View.GONE);
  }
  mImageWidthSpinner.setSelection(blog.getMaxImageWidthId());
  if (blog.getMaxImageWidthId() == 0)   fullSizeImageCheckBox.setVisibility(View.GONE);
 else   fullSizeImageCheckBox.setVisibility(View.VISIBLE);
}
