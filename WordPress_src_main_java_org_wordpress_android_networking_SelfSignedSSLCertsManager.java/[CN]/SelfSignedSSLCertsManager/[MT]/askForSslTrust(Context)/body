{
  AlertDialog.Builder alert=new AlertDialog.Builder(ctx);
  alert.setTitle(ctx.getString(R.string.ssl_certificate_error));
  alert.setMessage(ctx.getString(R.string.ssl_certificate_ask_trust));
  alert.setPositiveButton(R.string.ssl_certificate_trust,new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int which){
      SelfSignedSSLCertsManager selfSignedSSLCertsManager;
      try {
        selfSignedSSLCertsManager=SelfSignedSSLCertsManager.getInstance(ctx);
        selfSignedSSLCertsManager.addCertificates(selfSignedSSLCertsManager.getLastFailureChain());
      }
 catch (      GeneralSecurityException e) {
        AppLog.e(T.API,e);
      }
catch (      IOException e) {
        AppLog.e(T.API,e);
      }
    }
  }
);
  alert.setNeutralButton(R.string.ssl_certificate_details,new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int which){
      Intent intent=new Intent(ctx,SSLCertsViewActivity.class);
      try {
        SelfSignedSSLCertsManager selfSignedSSLCertsManager=SelfSignedSSLCertsManager.getInstance(ctx);
        String lastFailureChainDescription=selfSignedSSLCertsManager.getLastFailureChainDescription().replaceAll("\n","<br/>");
        intent.putExtra(SSLCertsViewActivity.CERT_DETAILS_KEYS,lastFailureChainDescription);
        ctx.startActivity(intent);
      }
 catch (      GeneralSecurityException e) {
        AppLog.e(T.API,e);
      }
catch (      IOException e) {
        AppLog.e(T.API,e);
      }
    }
  }
);
  alert.setNegativeButton(R.string.ssl_certificate_do_not_trust,new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int which){
    }
  }
);
  alert.show();
}
