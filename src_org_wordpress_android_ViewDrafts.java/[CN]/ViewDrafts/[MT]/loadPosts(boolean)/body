{
  WordPressDB lDraftsDB=new WordPressDB(this);
  Vector<?> loadedPosts;
  if (isPage) {
    loadedPosts=lDraftsDB.loadDrafts(ViewDrafts.this,id,true);
  }
 else {
    loadedPosts=lDraftsDB.loadDrafts(ViewDrafts.this,id,false);
  }
  if (loadedPosts != null) {
    draftIDs=new String[loadedPosts.size()];
    draftTitles=new String[loadedPosts.size()];
    publish=new String[loadedPosts.size()];
    uploaded=new Integer[loadedPosts.size()];
    totalDrafts=loadedPosts.size();
    for (int i=0; i < loadedPosts.size(); i++) {
      HashMap<?,?> contentHash=(HashMap<?,?>)loadedPosts.get(i);
      draftIDs[i]=contentHash.get("id").toString();
      draftTitles[i]=EscapeUtils.unescapeHtml(contentHash.get("title").toString());
      if (contentHash.get("status") != null) {
        publish[i]=contentHash.get("status").toString();
      }
 else {
        publish[i]="";
      }
      uploaded[i]=(Integer)contentHash.get("uploaded");
    }
  }
 else {
    totalDrafts=0;
  }
  if (loadedPosts != null) {
    List<String> draftIDList=Arrays.asList(draftIDs);
    List<String> newDraftIDList=new ArrayList<String>();
    newDraftIDList.add("draftsHeader");
    newDraftIDList.addAll(draftIDList);
    draftIDs=(String[])newDraftIDList.toArray(new String[newDraftIDList.size()]);
    if (loadedPosts != null) {
      List<String> titleList=Arrays.asList(draftTitles);
      List<CharSequence> newTitleList=new ArrayList<CharSequence>();
      newTitleList.add(getResources().getText(R.string.local_drafts));
      newTitleList.addAll(titleList);
      draftTitles=(String[])newTitleList.toArray(new String[newTitleList.size()]);
      List<String> publishList=Arrays.asList(publish);
      List<String> newPublishList=new ArrayList<String>();
      newPublishList.add("draftsHeader");
      newPublishList.addAll(publishList);
      publish=(String[])newPublishList.toArray(new String[newPublishList.size()]);
      postIDs=StringHelper.mergeStringArrays(draftIDs,postIDs);
      titles=StringHelper.mergeStringArrays(draftTitles,titles);
      dateCreatedFormatted=StringHelper.mergeStringArrays(publish,dateCreatedFormatted);
    }
    ListView listView=(ListView)findViewById(android.R.id.list);
    if (!isPage) {
      listView.removeFooterView(switcher);
      if (loadedPosts != null) {
        if (loadedPosts.size() >= 20) {
          listView.addFooterView(switcher);
        }
      }
    }
    if (loadMore) {
      pla.notifyDataSetChanged();
    }
 else {
      pla=new PostListAdapter(ViewDrafts.this);
      listView.setAdapter(pla);
      listView.setOnItemClickListener(new OnItemClickListener(){
        public void onItemClick(        AdapterView<?> arg0,        View arg1,        int arg2,        long arg3){
          if (arg1 != null) {
            arg1.performLongClick();
          }
        }
      }
);
      listView.setOnCreateContextMenuListener(new OnCreateContextMenuListener(){
        public void onCreateContextMenu(        ContextMenu menu,        View v,        ContextMenuInfo menuInfo){
          AdapterView.AdapterContextMenuInfo info;
          try {
            info=(AdapterView.AdapterContextMenuInfo)menuInfo;
          }
 catch (          ClassCastException e) {
            return;
          }
          Object[] args={R.id.row_post_id};
          try {
            Method m=android.view.View.class.getMethod("getTag");
            m.invoke(selectedID,args);
          }
 catch (          NoSuchMethodException e) {
            selectedID=info.targetView.getId();
          }
catch (          IllegalArgumentException e) {
            selectedID=info.targetView.getId();
          }
catch (          IllegalAccessException e) {
            selectedID=info.targetView.getId();
          }
catch (          InvocationTargetException e) {
            selectedID=info.targetView.getId();
          }
          rowID=info.position;
          if (totalDrafts > 0 && rowID <= totalDrafts && rowID != 0) {
            menu.clear();
            menu.setHeaderTitle(getResources().getText(R.string.draft_actions));
            menu.add(1,0,0,getResources().getText(R.string.edit_draft));
            menu.add(1,1,0,getResources().getText(R.string.upload));
            menu.add(1,2,0,getResources().getText(R.string.delete_draft));
          }
 else           if (rowID == 1 || ((rowID != (totalDrafts + 1)) && rowID != 0)) {
            menu.clear();
            if (isPage) {
              menu.setHeaderTitle(getResources().getText(R.string.page_actions));
              menu.add(2,0,0,getResources().getText(R.string.preview_page));
              menu.add(2,1,0,getResources().getText(R.string.view_comments));
              menu.add(2,2,0,getResources().getText(R.string.edit_page));
              menu.add(2,3,0,getResources().getText(R.string.delete_page));
              menu.add(2,4,0,getResources().getText(R.string.share_url));
            }
 else {
              menu.setHeaderTitle(getResources().getText(R.string.post_actions));
              menu.add(0,0,0,getResources().getText(R.string.preview_post));
              menu.add(0,1,0,getResources().getText(R.string.view_comments));
              menu.add(0,2,0,getResources().getText(R.string.edit_post));
              menu.add(0,3,0,getResources().getText(R.string.delete_post));
              menu.add(0,4,0,getResources().getText(R.string.share_url));
            }
          }
        }
      }
);
    }
  }
 else {
    TextView noDrafts=(TextView)findViewById(R.id.noDrafts);
    noDrafts.setVisibility(View.VISIBLE);
  }
}
