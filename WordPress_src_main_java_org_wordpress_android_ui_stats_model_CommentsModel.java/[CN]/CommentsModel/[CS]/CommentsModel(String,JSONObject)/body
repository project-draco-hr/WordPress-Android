{
  this.blogID=blogID;
  this.date=response.getString("date");
  this.monthlyComments=response.getInt("monthly_comments");
  this.totalComments=response.getInt("total_comments");
  this.mostActiveDay=response.getString("most_active_day");
  this.mostActiveTime=response.getString("most_active_time");
  JSONArray postsJSONArray=response.optJSONArray("posts");
  if (postsJSONArray != null) {
    mPosts=new ArrayList<TopPostModel>(postsJSONArray.length());
    for (int i=0; i < postsJSONArray.length(); i++) {
      JSONObject currentPostJSON=postsJSONArray.getJSONObject(i);
      String postId=String.valueOf(currentPostJSON.getInt("id"));
      String title=currentPostJSON.getString("name");
      int views=currentPostJSON.getInt("comments");
      String url=currentPostJSON.getString("link");
      TopPostModel currentPost=new TopPostModel(blogID,postId,title,views,url);
      mPosts.add(currentPost);
    }
  }
  JSONArray authorsJSONArray=response.optJSONArray("authors");
  if (authorsJSONArray != null) {
    mAuthors=new ArrayList<AuthorModel>(authorsJSONArray.length());
    for (int i=0; i < authorsJSONArray.length(); i++) {
      JSONObject currentAuthorJSON=authorsJSONArray.getJSONObject(i);
      String name=currentAuthorJSON.getString("name");
      int comments=currentAuthorJSON.getInt("comments");
      String url=currentAuthorJSON.getString("link");
      String gravatar=currentAuthorJSON.getString("gravatar");
      AuthorModel currentAuthor=new AuthorModel(blogID,date,url,name,gravatar,comments,null);
      mAuthors.add(currentAuthor);
    }
  }
}
