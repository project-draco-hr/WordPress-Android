{
  super.onCreate(savedInstanceState);
  if (savedInstanceState == null) {
    AnalyticsTracker.track(AnalyticsTracker.Stat.OPENED_SETTINGS);
  }
  addPreferencesFromResource(R.xml.settings);
  OnPreferenceChangeListener preferenceChangeListener=new OnPreferenceChangeListener(){
    @Override public boolean onPreferenceChange(    Preference preference,    Object newValue){
      if (newValue != null) {
        preference.setSummary(newValue.toString());
      }
      ActivityUtils.hideKeyboard(getActivity());
      return true;
    }
  }
;
  mTaglineTextPreference=(WPEditTextPreference)findPreference(getString(R.string.pref_key_post_sig));
  if (mTaglineTextPreference != null) {
    mTaglineTextPreference.setOnPreferenceChangeListener(preferenceChangeListener);
  }
  findPreference(getString(R.string.pref_key_language)).setOnPreferenceClickListener(this);
  findPreference(getString(R.string.pref_key_app_about)).setOnPreferenceClickListener(this);
  findPreference(getString(R.string.pref_key_notifications)).setOnPreferenceClickListener(this);
  findPreference(getString(R.string.pref_key_oss_licenses)).setOnPreferenceClickListener(this);
  findPreference(getString(R.string.pref_key_reset_shared_pref)).setOnPreferenceClickListener(this);
  mSettings=PreferenceManager.getDefaultSharedPreferences(getActivity());
  initNotifications();
  updatePostSignature();
}
