{
  final View v=inflater.inflate(R.layout.view_post_fragment,container,false);
  v.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
    @Override public void onGlobalLayout(){
      loadPost(WordPress.currentPost);
      v.getViewTreeObserver().removeGlobalOnLayoutListener(this);
    }
  }
);
  mTitleTextView=(TextView)v.findViewById(R.id.postTitle);
  mContentTextView=(TextView)v.findViewById(R.id.viewPostTextView);
  mShareUrlButton=(ImageButton)v.findViewById(R.id.sharePostLink);
  mViewPostButton=(ImageButton)v.findViewById(R.id.viewPost);
  mLayoutCommentBox=(ViewGroup)v.findViewById(R.id.layout_comment_box);
  mEditComment=(SuggestionAutoCompleteText)mLayoutCommentBox.findViewById(R.id.edit_comment);
  mEditComment.setHint(R.string.reader_hint_comment_on_post);
  if (WordPress.currentPost != null && WordPress.getCurrentRemoteBlogId() != -1) {
    mEditComment.getAutoSaveTextHelper().setUniqueId(String.format("%s%d%s",WordPress.getLoggedInUsername(getActivity(),WordPress.getCurrentBlog()),WordPress.getCurrentRemoteBlogId(),WordPress.currentPost.getRemotePostId()));
  }
  ImageButton editPostButton=(ImageButton)v.findViewById(R.id.editPost);
  editPostButton.setOnClickListener(new ImageButton.OnClickListener(){
    public void onClick(    View v){
      if (WordPress.currentPost != null && !mParentActivity.isRefreshing()) {
        mOnDetailPostActionListener.onDetailPostAction(PostsActivity.POST_EDIT,WordPress.currentPost);
        long postId=WordPress.currentPost.getLocalTablePostId();
        boolean isPage=WordPress.currentPost.isPage();
        ActivityLauncher.editBlogPostorPage(getActivity(),postId,isPage);
      }
    }
  }
);
  mShareUrlButton.setOnClickListener(new ImageButton.OnClickListener(){
    public void onClick(    View v){
      if (!mParentActivity.isRefreshing()) {
        mOnDetailPostActionListener.onDetailPostAction(PostsActivity.POST_SHARE,WordPress.currentPost);
      }
    }
  }
);
  ImageButton deletePostButton=(ImageButton)v.findViewById(R.id.deletePost);
  deletePostButton.setOnClickListener(new ImageButton.OnClickListener(){
    public void onClick(    View v){
      if (!mParentActivity.isRefreshing()) {
        mOnDetailPostActionListener.onDetailPostAction(PostsActivity.POST_DELETE,WordPress.currentPost);
      }
    }
  }
);
  mViewPostButton.setOnClickListener(new ImageButton.OnClickListener(){
    public void onClick(    View v){
      mOnDetailPostActionListener.onDetailPostAction(PostsActivity.POST_VIEW,WordPress.currentPost);
      if (!mParentActivity.isRefreshing()) {
        loadPostPreview();
      }
    }
  }
);
  mAddCommentButton=(ImageButton)v.findViewById(R.id.addComment);
  mAddCommentButton.setOnClickListener(new ImageButton.OnClickListener(){
    public void onClick(    View v){
      if (!mParentActivity.isRefreshing()) {
        toggleCommentBox();
      }
    }
  }
);
  setupSuggestionServiceAndAdapter();
  return v;
}
