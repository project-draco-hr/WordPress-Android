{
  super.onActivityResult(requestCode,resultCode,data);
  if (data != null || requestCode == 1) {
    Bundle extras;
switch (requestCode) {
case 0:
      Uri imageUri=data.getData();
    String imgPath=imageUri.toString();
  addMedia(imgPath,imageUri);
break;
case 1:
if (resultCode == Activity.RESULT_OK) {
File f=new File(SD_CARD_TEMP_DIR);
try {
  Uri capturedImage=Uri.parse(android.provider.MediaStore.Images.Media.insertImage(getContentResolver(),f.getAbsolutePath(),null,null));
  Log.i("camera","Selected image: " + capturedImage.toString());
  f.delete();
  addMedia(capturedImage.toString(),capturedImage);
}
 catch (FileNotFoundException e) {
  AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(EditContent.this);
  dialogBuilder.setTitle(getResources().getText(R.string.file_error));
  dialogBuilder.setMessage(getResources().getText(R.string.file_error_encountered));
  dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int whichButton){
    }
  }
);
  dialogBuilder.setCancelable(true);
  if (!isFinishing()) {
    dialogBuilder.create().show();
  }
}
}
 else {
AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(EditContent.this);
dialogBuilder.setTitle(getResources().getText(R.string.file_error));
dialogBuilder.setMessage(getResources().getText(R.string.file_error_encountered));
dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
  public void onClick(  DialogInterface dialog,  int whichButton){
  }
}
);
dialogBuilder.setCancelable(true);
if (!isFinishing()) {
  dialogBuilder.create().show();
}
}
break;
case 2:
Uri videoUri=data.getData();
String videoPath=videoUri.toString();
addMedia(videoPath,videoUri);
break;
case 3:
if (resultCode == Activity.RESULT_OK) {
Uri capturedVideo=data.getData();
addMedia(capturedVideo.toString(),capturedVideo);
}
 else {
AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(EditContent.this);
dialogBuilder.setTitle(getResources().getText(R.string.file_error));
dialogBuilder.setMessage(getResources().getText(R.string.file_error_encountered));
dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int whichButton){
}
}
);
dialogBuilder.setCancelable(true);
if (!isFinishing()) {
dialogBuilder.create().show();
}
}
break;
case 4:
extras=data.getExtras();
String linkText=extras.getString("linkText");
if (linkText.equals("http://") != true) {
if (linkText.equals("CANCEL") != true) {
WPEditText contentText=(WPEditText)findViewById(R.id.postContent);
if (selectionStart > selectionEnd) {
int temp=selectionEnd;
selectionEnd=selectionStart;
selectionStart=temp;
}
Spannable str=contentText.getText();
str.setSpan(new URLSpan(linkText),selectionStart,selectionEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
}
}
break;
}
}
}
