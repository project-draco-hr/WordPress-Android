{
switch (mListType) {
case LIKE_POST:
    final Handler handler=new Handler();
  new Thread(){
    @Override public void run(){
      int numLikes=ReaderPostTable.getNumLikesForPost(mPost);
      boolean isLikedByCurrentUser=ReaderPostTable.isPostLikedByCurrentUser(mPost);
      final String title;
      if (isLikedByCurrentUser) {
switch (numLikes) {
case 1:
          title=getString(R.string.reader_likes_only_you);
        break;
case 2:
      title=getString(R.string.reader_likes_you_and_one);
    break;
default :
  title=getString(R.string.reader_likes_you_and_multi,numLikes - 1);
break;
}
}
 else {
title=(numLikes == 1 ? getString(R.string.reader_likes_one) : getString(R.string.reader_likes_multi,numLikes));
}
handler.post(new Runnable(){
@Override public void run(){
mTxtTitle.setText(title);
mTxtTitle.setVisibility(View.VISIBLE);
}
}
);
}
}
.start();
break;
default :
mTxtTitle.setText(R.string.reader_title_userlist_default);
mTxtTitle.setVisibility(View.VISIBLE);
break;
}
}
