{
  String sSelCommentID=String.valueOf(selCommentID);
  WordPressDB db=new WordPressDB(Comments.this);
  client=new XMLRPCClient(WordPress.currentBlog.getUrl(),WordPress.currentBlog.getHttpuser(),WordPress.currentBlog.getHttppassword(),this);
  HashMap<String,String> contentHash, postHash=new HashMap<String,String>();
  contentHash=(HashMap<String,String>)commentList.allComments.get(sSelCommentID);
  postHash.put("status",newStatus);
  postHash.put("content",contentHash.get("comment"));
  postHash.put("author",contentHash.get("author"));
  postHash.put("author_url",contentHash.get("url"));
  postHash.put("author_email",contentHash.get("email"));
  Object[] params={WordPress.currentBlog.getBlogId(),WordPress.currentBlog.getUsername(),WordPress.currentBlog.getPassword(),sSelCommentID,postHash};
  Object result=null;
  try {
    result=(Object)client.call("wp.editComment",params);
    boolean bResult=Boolean.parseBoolean(result.toString());
    if (bResult) {
      WordPress.currentComment.status=newStatus;
      commentList.model.set(WordPress.currentComment.position,WordPress.currentComment);
      db.updateCommentStatus(id,WordPress.currentComment.commentID,newStatus);
    }
    dismissDialog(ID_DIALOG_MODERATING);
    Thread action=new Thread(){
      public void run(){
        Toast.makeText(Comments.this,getResources().getText(R.string.comment_moderated),Toast.LENGTH_SHORT).show();
      }
    }
;
    runOnUiThread(action);
    Thread action2=new Thread(){
      public void run(){
        commentList.thumbs.notifyDataSetChanged();
      }
    }
;
    runOnUiThread(action2);
  }
 catch (  final XMLRPCException e) {
    dismissDialog(ID_DIALOG_MODERATING);
    Thread action3=new Thread(){
      public void run(){
        AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(Comments.this);
        dialogBuilder.setTitle(getResources().getText(R.string.connection_error));
        dialogBuilder.setMessage(e.getLocalizedMessage());
        dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int whichButton){
          }
        }
);
        dialogBuilder.setCancelable(true);
        if (!isFinishing()) {
          dialogBuilder.create().show();
        }
      }
    }
;
    runOnUiThread(action3);
  }
}
