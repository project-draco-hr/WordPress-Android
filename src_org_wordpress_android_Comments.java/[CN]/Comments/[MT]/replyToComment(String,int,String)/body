{
  client=new XMLRPCClient(blog.getUrl(),blog.getHttpuser(),blog.getHttppassword());
  HashMap<String,Object> replyHash=new HashMap<String,Object>();
  replyHash.put("comment_parent",commentID);
  replyHash.put("content",comment);
  replyHash.put("author","");
  replyHash.put("author_url","");
  replyHash.put("author_email","");
  Object[] params={blog.getBlogId(),blog.getUsername(),blog.getPassword(),Integer.valueOf(postID),replyHash};
  try {
    client.call("wp.newComment",params);
    dismissDialog(ID_DIALOG_REPLYING);
    Thread action=new Thread(){
      public void run(){
        Toast.makeText(Comments.this,getResources().getText(R.string.reply_added),Toast.LENGTH_SHORT).show();
      }
    }
;
    runOnUiThread(action);
    Thread action2=new Thread(){
      public void run(){
        pd=new ProgressDialog(Comments.this);
        commentList.refreshComments(false,true,false);
      }
    }
;
    runOnUiThread(action2);
  }
 catch (  final XMLRPCException e) {
    dismissDialog(ID_DIALOG_REPLYING);
    Thread action3=new Thread(){
      public void run(){
        AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(Comments.this);
        dialogBuilder.setTitle(getResources().getText(R.string.connection_error));
        dialogBuilder.setMessage(e.getLocalizedMessage());
        dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int whichButton){
          }
        }
);
        dialogBuilder.setCancelable(true);
        if (!isFinishing()) {
          dialogBuilder.create().show();
        }
      }
    }
;
    runOnUiThread(action3);
  }
}
