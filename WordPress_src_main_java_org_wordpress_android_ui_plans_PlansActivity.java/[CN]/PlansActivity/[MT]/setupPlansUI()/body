{
  if (mAvailablePlans == null || mAvailablePlans.length == 0) {
    Toast.makeText(PlansActivity.this,R.string.plans_loading_error,Toast.LENGTH_LONG).show();
    finish();
    return;
  }
  hideProgress();
  mViewPager.setAdapter(getPageAdapter());
  int normalColor=ContextCompat.getColor(this,R.color.blue_light);
  int selectedColor=ContextCompat.getColor(this,R.color.white);
  mTabLayout.setTabTextColors(normalColor,selectedColor);
  mTabLayout.setupWithViewPager(mViewPager);
  mTabLayout.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
    @Override public void onGlobalLayout(){
      mTabLayout.getViewTreeObserver().removeOnGlobalLayoutListener(this);
      int tabLayoutWidth=0;
      for (int i=0; i < mTabLayout.getTabCount(); i++) {
        LinearLayout tabView=((LinearLayout)((LinearLayout)mTabLayout.getChildAt(0)).getChildAt(i));
        tabLayoutWidth+=(tabView.getMeasuredWidth() + tabView.getPaddingLeft() + tabView.getPaddingRight());
      }
      int displayWidth=DisplayUtils.getDisplayPixelWidth(PlansActivity.this);
      if (tabLayoutWidth < displayWidth) {
        mTabLayout.setTabMode(TabLayout.MODE_FIXED);
        mTabLayout.setTabGravity(TabLayout.GRAVITY_FILL);
      }
    }
  }
);
  if (mViewPager.getVisibility() != View.VISIBLE) {
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
      revealViewPager();
    }
 else {
      mViewPager.setVisibility(View.VISIBLE);
      mTabLayout.setVisibility(View.VISIBLE);
      showManageBar();
    }
  }
}
