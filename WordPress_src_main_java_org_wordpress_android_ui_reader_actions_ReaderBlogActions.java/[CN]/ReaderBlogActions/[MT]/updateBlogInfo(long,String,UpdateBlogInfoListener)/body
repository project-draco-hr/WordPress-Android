{
  final boolean hasBlogId=(blogId != 0);
  final boolean hasBlogUrl=!TextUtils.isEmpty(blogUrl);
  if (!hasBlogId && !hasBlogUrl) {
    AppLog.w(T.READER,"cannot get blog info without either id or url");
    if (infoListener != null) {
      infoListener.onResult(null);
    }
    return;
  }
  RestRequest.Listener listener=new RestRequest.Listener(){
    @Override public void onResponse(    JSONObject jsonObject){
      handleUpdateBlogInfoResponse(jsonObject,infoListener);
    }
  }
;
  RestRequest.ErrorListener errorListener=new RestRequest.ErrorListener(){
    @Override public void onErrorResponse(    VolleyError volleyError){
      int statusCode=VolleyUtils.statusCodeFromVolleyError(volleyError);
      boolean isAuthErr=(statusCode == HttpURLConnection.HTTP_FORBIDDEN);
      if (!isAuthErr && hasBlogId && hasBlogUrl) {
        AppLog.w(T.READER,"failed to get blog info by id, retrying with url");
        updateBlogInfo(0,blogUrl,infoListener);
      }
 else {
        AppLog.e(T.READER,volleyError);
        if (infoListener != null) {
          infoListener.onResult(null);
        }
      }
    }
  }
;
  if (hasBlogId) {
    WordPress.getRestClientUtilsV1_1().get("read/sites/" + blogId,listener,errorListener);
  }
 else {
    WordPress.getRestClientUtilsV1_1().get("read/sites/" + UrlUtils.urlEncode(UrlUtils.getHost(blogUrl)),listener,errorListener);
  }
}
