{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.reader_activity_subs);
  restoreState(savedInstanceState);
  mViewPager=(ViewPager)findViewById(R.id.viewpager);
  mViewPager.setAdapter(getPageAdapter());
  PagerTabStrip pagerTabStrip=(PagerTabStrip)findViewById(R.id.pager_tab_strip);
  pagerTabStrip.setTabIndicatorColorResource(R.color.blue_light);
  mEditAdd=(EditText)findViewById(R.id.edit_add);
  mEditAdd.setOnEditorActionListener(new TextView.OnEditorActionListener(){
    @Override public boolean onEditorAction(    TextView v,    int actionId,    KeyEvent event){
      if (actionId == EditorInfo.IME_ACTION_DONE) {
        addCurrentEntry();
      }
      return false;
    }
  }
);
  mBtnAdd=(ImageButton)findViewById(R.id.btn_add);
  mBtnAdd.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      addCurrentEntry();
    }
  }
);
  if (savedInstanceState == null) {
    restorePreviousPage();
    if (!mAlreadyUpdated) {
      updateTagList();
      updateFollowedBlogs();
      updateRecommendedBlogs();
      mAlreadyUpdated=true;
    }
  }
  mViewPager.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener(){
    @Override public void onPageSelected(    int position){
      String pageTitle=(String)getPageAdapter().getPageTitle(position);
      UserPrefs.setReaderSubsPageTitle(pageTitle);
    }
  }
);
}
