{
  Log.v("callNative",payload);
  String jsonString=payload.substring(0,payload.indexOf("&wpcom-hybrid-auth-token="));
  String wpcom_hybrid_auth_token=payload.substring(payload.indexOf("&wpcom-hybrid-auth-token="),payload.length());
  wpcom_hybrid_auth_token=wpcom_hybrid_auth_token.replace("&wpcom-hybrid-auth-token=","");
  WPCOMReaderBase parentClass=WPCOMReaderBase.this;
  if (!wpcom_hybrid_auth_token.equals(parentClass.getHybridAuthToken())) {
    Log.e("Remote native call failed","Token missmatch");
    return;
  }
  try {
    JSONArray methodsToCall=(JSONArray)new JSONTokener(jsonString).nextValue();
    for (int i=0; i < methodsToCall.length(); i++) {
      JSONObject currentMethodToCall=methodsToCall.getJSONObject(i);
      String methodName=currentMethodToCall.getString("method");
      methodName=methodName + "FromJS";
      JSONArray args=currentMethodToCall.getJSONArray("args");
      Object[] formalParameters=new Object[args.length()];
      Class[] formalParametersType=new Class[args.length()];
      for (int j=0; j < args.length(); j++) {
        formalParameters[j]=args.getString(j);
        formalParametersType[j]=String.class;
      }
      java.lang.reflect.Method method;
      try {
        method=parentClass.getClass().getMethod(methodName,formalParametersType);
        method.invoke(parentClass,formalParameters);
      }
 catch (      SecurityException e) {
        Log.e(parentClass.getClass().getName(),"Exception getting method name",e);
      }
catch (      NoSuchMethodException e) {
        Log.w(parentClass.getClass().getName(),"Method not found in the class: " + methodName);
      }
catch (      IllegalArgumentException e) {
        Log.e(parentClass.getClass().getName(),"Method called with invalid arguments",e);
      }
catch (      IllegalAccessException e) {
        Log.e(parentClass.getClass().getName(),"Method is not accessible",e);
      }
catch (      InvocationTargetException e) {
        Log.e(parentClass.getClass().getName(),"Object can't call this method",e);
      }
    }
  }
 catch (  JSONException e) {
    Log.e("Calling native call from JS failed.",Log.getStackTraceString(e));
  }
}
