{
  if (jsonObject == null) {
    if (resultListener != null) {
      resultListener.onUpdateResult(UpdateResult.FAILED);
    }
    return;
  }
  final Handler handler=new Handler();
  new Thread(){
    @Override public void run(){
      final ReaderPostList serverPosts=ReaderPostList.fromJson(jsonObject);
      if (serverPosts.size() == 0) {
        AppLog.d(T.READER,"no new posts in tag " + tag.getTagNameForLog());
        if (resultListener != null) {
          handler.post(new Runnable(){
            public void run(){
              resultListener.onUpdateResult(UpdateResult.UNCHANGED);
            }
          }
);
        }
        return;
      }
      final UpdateResult updateResult=ReaderPostTable.comparePosts(serverPosts);
      if (updateResult.isNewOrChanged()) {
        ReaderPostTable.addOrUpdatePosts(tag,serverPosts);
      }
switch (updateResult) {
case HAS_NEW:
        AppLog.d(T.READER,String.format("retrieved %d posts in tag %s (has new)",serverPosts.size(),tag.getTagNameForLog()));
      break;
case CHANGED:
    AppLog.d(T.READER,String.format("retrieved %d posts in tag %s (has changes)",serverPosts.size(),tag.getTagNameForLog()));
  break;
default :
AppLog.d(T.READER,String.format("retrieved %d posts in tag %s (no new or changed)",serverPosts.size(),tag.getTagNameForLog()));
break;
}
if (updateAction == RequestDataAction.LOAD_NEWER) {
ReaderTagTable.setTagLastUpdated(tag);
}
if (resultListener != null) {
handler.post(new Runnable(){
public void run(){
resultListener.onUpdateResult(updateResult);
}
}
);
}
}
}
.start();
}
