{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.stats_activity_single_post_details);
  ActionBar actionBar=getSupportActionBar();
  if (actionBar != null) {
    actionBar.setDisplayHomeAsUpEnabled(true);
  }
  mSwipeToRefreshHelper=new SwipeToRefreshHelper(this,(CustomSwipeRefreshLayout)findViewById(R.id.ptr_layout),new SwipeToRefreshHelper.RefreshListener(){
    @Override public void onRefreshStarted(){
      if (!NetworkUtils.checkConnection(getBaseContext())) {
        mSwipeToRefreshHelper.setRefreshing(false);
        return;
      }
      refreshStats();
    }
  }
);
  TextView mStatsForLabel=(TextView)findViewById(R.id.stats_summary_title);
  mGraphContainer=(LinearLayout)findViewById(R.id.stats_bar_chart_fragment_container);
  mStatsViewsLabel=(TextView)findViewById(R.id.stats_views_label);
  mStatsViewsTotals=(TextView)findViewById(R.id.stats_views_totals);
  mMonthsAndYearsModule=(LinearLayout)findViewById(R.id.stats_months_years_module);
  mMonthsAndYearsHeader=(RelativeLayout)findViewById(R.id.stats_months_years_header);
  mMonthsAndYearsList=(LinearLayout)findViewById(R.id.stats_months_years_list_linearlayout);
  mMonthsAndYearsEmptyPlaceholder=(LinearLayout)findViewById(R.id.stats_months_years_empty_module_placeholder);
  mAveragesModule=(LinearLayout)findViewById(R.id.stats_averages_module);
  mAveragesHeader=(RelativeLayout)findViewById(R.id.stats_averages_list_header);
  mAveragesList=(LinearLayout)findViewById(R.id.stats_averages_list_linearlayout);
  mAveragesEmptyPlaceholder=(LinearLayout)findViewById(R.id.stats_averages_empty_module_placeholder);
  mRecentWeeksModule=(LinearLayout)findViewById(R.id.stats_recent_weeks_module);
  mRecentWeeksHeader=(RelativeLayout)findViewById(R.id.stats_recent_weeks_list_header);
  mRecentWeeksList=(LinearLayout)findViewById(R.id.stats_recent_weeks_list_linearlayout);
  mRecentWeeksEmptyPlaceholder=(LinearLayout)findViewById(R.id.stats_recent_weeks_empty_module_placeholder);
  mYearsIdToExpandedMap=new SparseBooleanArray();
  mAveragesIdToExpandedMap=new SparseBooleanArray();
  mRecentWeeksIdToExpandedMap=new SparseBooleanArray();
  setTitle(R.string.stats);
  mOuterScrollView=(ScrollViewExt)findViewById(R.id.scroll_view_stats);
  if (savedInstanceState != null) {
    mRemoteItemID=savedInstanceState.getString(ARG_REMOTE_ITEM_ID);
    mRemoteBlogID=savedInstanceState.getString(ARG_REMOTE_BLOG_ID);
    mRemoteItemType=savedInstanceState.getString(ARG_REMOTE_ITEM_TYPE);
    mItemTitle=savedInstanceState.getString(ARG_ITEM_TITLE);
    mItemURL=savedInstanceState.getString(ARG_ITEM_URL);
    mRestResponseParsed=(PostViewsModel)savedInstanceState.getSerializable(ARG_REST_RESPONSE);
    mSelectedBarGraphIndex=savedInstanceState.getInt(ARG_SELECTED_GRAPH_BAR,-1);
    mPrevNumberOfBarsGraph=savedInstanceState.getInt(ARG_PREV_NUMBER_OF_BARS,-1);
    final int yScrollPosition=savedInstanceState.getInt(SAVED_STATS_SCROLL_POSITION);
    if (yScrollPosition != 0) {
      mOuterScrollView.postDelayed(new Runnable(){
        public void run(){
          if (!isFinishing()) {
            mOuterScrollView.scrollTo(0,yScrollPosition);
          }
        }
      }
,StatsConstants.STATS_SCROLL_TO_DELAY);
    }
    if (savedInstanceState.containsKey(ARG_AVERAGES_EXPANDED_ROWS)) {
      mAveragesIdToExpandedMap=savedInstanceState.getParcelable(ARG_AVERAGES_EXPANDED_ROWS);
    }
    if (savedInstanceState.containsKey(ARG_RECENT_EXPANDED_ROWS)) {
      mRecentWeeksIdToExpandedMap=savedInstanceState.getParcelable(ARG_RECENT_EXPANDED_ROWS);
    }
    if (savedInstanceState.containsKey(ARG_YEARS_EXPANDED_ROWS)) {
      mYearsIdToExpandedMap=savedInstanceState.getParcelable(ARG_YEARS_EXPANDED_ROWS);
    }
  }
 else   if (getIntent() != null && getIntent().getExtras() != null) {
    Bundle extras=getIntent().getExtras();
    mRemoteItemID=extras.getString(ARG_REMOTE_ITEM_ID);
    mRemoteBlogID=extras.getString(ARG_REMOTE_BLOG_ID);
    mRemoteItemType=extras.getString(ARG_REMOTE_ITEM_TYPE);
    mItemTitle=extras.getString(ARG_ITEM_TITLE);
    mItemURL=extras.getString(ARG_ITEM_URL);
    mRestResponseParsed=(PostViewsModel)extras.getSerializable(ARG_REST_RESPONSE);
    mSelectedBarGraphIndex=extras.getInt(ARG_SELECTED_GRAPH_BAR,-1);
  }
  if (mRemoteBlogID == null || mRemoteItemID == null) {
    Toast.makeText(this,R.string.stats_generic_error,Toast.LENGTH_LONG).show();
    finish();
    return;
  }
  if (savedInstanceState == null) {
    AnalyticsUtils.trackWithBlogDetails(AnalyticsTracker.Stat.STATS_SINGLE_POST_ACCESSED,mRemoteBlogID);
  }
  if (mItemTitle != null || mItemURL != null) {
    mStatsForLabel.setVisibility(View.VISIBLE);
    mStatsForLabel.setText(mItemTitle != null ? mItemTitle : mItemURL);
    if (mItemURL != null) {
      mStatsForLabel.setTextColor(getResources().getColor(R.color.stats_link_text_color));
      mStatsForLabel.setOnClickListener(new View.OnClickListener(){
        @Override public void onClick(        View v){
          final Context ctx=v.getContext();
          StatsUtils.openPostInReaderOrInAppWebview(ctx,mRemoteBlogID,mRemoteItemID,mRemoteItemType,mItemURL);
        }
      }
);
    }
 else {
      mStatsForLabel.setTextColor(getResources().getColor(R.color.grey_darken_20));
    }
  }
 else {
    mStatsForLabel.setVisibility(View.GONE);
  }
}
