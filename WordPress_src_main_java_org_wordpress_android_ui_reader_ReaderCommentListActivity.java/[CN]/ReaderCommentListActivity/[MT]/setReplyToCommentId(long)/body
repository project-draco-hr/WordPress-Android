{
  mReplyToCommentId=commentId;
  mEditComment.setHint(mReplyToCommentId == 0 ? R.string.reader_hint_comment_on_post : R.string.reader_hint_comment_on_comment);
  if (mReplyToCommentId != 0) {
    mEditComment.requestFocus();
    EditTextUtils.showSoftInput(mEditComment);
    getCommentAdapter().setHighlightCommentId(mReplyToCommentId,false);
    mRecyclerView.postDelayed(new Runnable(){
      @Override public void run(){
        scrollToCommentId(mReplyToCommentId);
      }
    }
,300);
    mEditComment.setOnBackListener(new SuggestionAutoCompleteText.OnEditTextBackListener(){
      @Override public void onEditTextBack(){
        if (EditTextUtils.isEmpty(mEditComment)) {
          setReplyToCommentId(0);
        }
      }
    }
);
  }
 else {
    mEditComment.setOnBackListener(null);
  }
}
