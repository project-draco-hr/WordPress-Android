{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.reader_activity_comment_list);
  Toolbar toolbar=(Toolbar)findViewById(R.id.toolbar);
  setSupportActionBar(toolbar);
  toolbar.setNavigationOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      onBackPressed();
    }
  }
);
  getSupportActionBar().setDisplayShowTitleEnabled(true);
  getSupportActionBar().setDisplayHomeAsUpEnabled(true);
  if (savedInstanceState != null) {
    mBlogId=savedInstanceState.getLong(ReaderConstants.ARG_BLOG_ID);
    mPostId=savedInstanceState.getLong(ReaderConstants.ARG_POST_ID);
    mRestorePosition=savedInstanceState.getInt(ReaderConstants.KEY_RESTORE_POSITION);
    mHasUpdatedComments=savedInstanceState.getBoolean(KEY_HAS_UPDATED_COMMENTS);
  }
 else {
    mBlogId=getIntent().getLongExtra(ReaderConstants.ARG_BLOG_ID,0);
    mPostId=getIntent().getLongExtra(ReaderConstants.ARG_POST_ID,0);
    mCommentId=getIntent().getLongExtra(ReaderConstants.ARG_COMMENT_ID,0);
    if (NetworkUtils.isNetworkAvailable(this) && mCommentId == 0) {
      ReaderCommentTable.purgeExcessCommentsForPost(mBlogId,mPostId);
    }
  }
  mRecyclerView=(ReaderRecyclerView)findViewById(R.id.recycler_view);
  int spacingHorizontal=getResources().getDimensionPixelSize(R.dimen.reader_detail_margin);
  int spacingVertical=DisplayUtils.dpToPx(this,1);
  mRecyclerView.addItemDecoration(new ReaderItemDecoration(spacingHorizontal,spacingVertical));
  mCommentBox=(ViewGroup)findViewById(R.id.layout_comment_box);
  mEditComment=(SuggestionAutoCompleteText)mCommentBox.findViewById(R.id.edit_comment);
  mEditComment.getAutoSaveTextHelper().setUniqueId(String.format("%s%d%d",AccountHelper.getCurrentUsernameForBlog(null),mPostId,mBlogId));
  mImgSubmitComment=(ImageView)mCommentBox.findViewById(R.id.image_post_comment);
  if (!loadPost()) {
    ToastUtils.showToast(this,R.string.reader_toast_err_get_post);
    finish();
    return;
  }
  mRecyclerView.setAdapter(getCommentAdapter());
  if (savedInstanceState != null) {
    setReplyToCommentId(savedInstanceState.getLong(KEY_REPLY_TO_COMMENT_ID));
  }
  refreshComments();
  mSuggestionServiceConnectionManager=new SuggestionServiceConnectionManager(this,(int)mBlogId);
  mSuggestionAdapter=SuggestionUtils.setupSuggestions((int)mBlogId,this,mSuggestionServiceConnectionManager,mPost.isWP());
  if (mSuggestionAdapter != null) {
    mEditComment.setAdapter(mSuggestionAdapter);
  }
}
