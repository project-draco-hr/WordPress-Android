{
  if (mCommentAdapter == null) {
    ReaderInterfaces.DataLoadedListener dataLoadedListener=new ReaderInterfaces.DataLoadedListener(){
      @Override public void onDataLoaded(      boolean isEmpty){
        if (!isFinishing()) {
          if (isEmpty || !mHasUpdatedComments) {
            updateComments(isEmpty,false);
          }
 else           if (mRestorePosition > 0) {
            mRecyclerView.scrollToPosition(mRestorePosition);
          }
          mRestorePosition=0;
          checkEmptyView();
        }
      }
    }
;
    ReaderCommentAdapter.RequestReplyListener replyListener=new ReaderCommentAdapter.RequestReplyListener(){
      @Override public void onRequestReply(      long commentId){
        setReplyToCommentId(commentId);
      }
    }
;
    ReaderActions.DataRequestedListener dataRequestedListener=new ReaderActions.DataRequestedListener(){
      @Override public void onRequestData(){
        if (!mIsUpdatingComments) {
          AppLog.i(T.READER,"reader comments > requesting next page of comments");
          updateComments(true,true);
        }
      }
    }
;
    Context context=WPActivityUtils.getThemedContext(this);
    mCommentAdapter=new ReaderCommentAdapter(context,getPost());
    mCommentAdapter.setReplyListener(replyListener);
    mCommentAdapter.setDataLoadedListener(dataLoadedListener);
    mCommentAdapter.setDataRequestedListener(dataRequestedListener);
  }
  return mCommentAdapter;
}
