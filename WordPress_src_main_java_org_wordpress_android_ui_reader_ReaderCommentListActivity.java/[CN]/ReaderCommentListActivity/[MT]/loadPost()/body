{
  mPost=ReaderPostTable.getPost(mBlogId,mPostId,true);
  if (mPost == null) {
    return false;
  }
  TextView txtCommentsClosed=(TextView)findViewById(R.id.text_comments_closed);
  if (ReaderUtils.isLoggedOutReader()) {
    mCommentBox.setVisibility(View.GONE);
    txtCommentsClosed.setVisibility(View.GONE);
  }
 else   if (mPost.isCommentsOpen) {
    mCommentBox.setVisibility(View.VISIBLE);
    txtCommentsClosed.setVisibility(View.GONE);
    mEditComment.setOnEditorActionListener(new TextView.OnEditorActionListener(){
      @Override public boolean onEditorAction(      TextView v,      int actionId,      KeyEvent event){
        if (actionId == EditorInfo.IME_ACTION_DONE || actionId == EditorInfo.IME_ACTION_SEND) {
          submitComment();
        }
        return false;
      }
    }
);
    mImgSubmitComment.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        submitComment();
      }
    }
);
  }
 else {
    mCommentBox.setVisibility(View.GONE);
    mEditComment.setEnabled(false);
    txtCommentsClosed.setVisibility(View.VISIBLE);
  }
  return true;
}
