{
  super.onCreate(savedInstanceState);
  if (WordPress.wpDB == null) {
    Toast.makeText(this,R.string.fatal_db_error,Toast.LENGTH_LONG).show();
    finish();
    return;
  }
  setContentView(R.layout.stats_activity);
  Toolbar toolbar=(Toolbar)findViewById(R.id.toolbar);
  setSupportActionBar(toolbar);
  ActionBar actionBar=getSupportActionBar();
  if (actionBar != null) {
    actionBar.setDisplayShowTitleEnabled(false);
    actionBar.setDisplayHomeAsUpEnabled(true);
  }
  mSwipeToRefreshHelper=new SwipeToRefreshHelper(this,(CustomSwipeRefreshLayout)findViewById(R.id.ptr_layout),new RefreshListener(){
    @Override public void onRefreshStarted(){
      if (!NetworkUtils.checkConnection(getBaseContext())) {
        mSwipeToRefreshHelper.setRefreshing(false);
        return;
      }
      if (mIsUpdatingStats) {
        AppLog.w(T.STATS,"stats are already updating, refresh cancelled");
        return;
      }
      mRequestedDate=StatsUtils.getCurrentDateTZ(mLocalBlogID);
      if (checkCredentials()) {
        updateTimeframeAndDateAndStartRefreshOfFragments(true);
      }
    }
  }
);
  setTitle(R.string.stats);
  mOuterScrollView=(ScrollViewExt)findViewById(R.id.scroll_view_stats);
  mOuterScrollView.setScrollViewListener(this);
  if (savedInstanceState != null) {
    mResultCode=savedInstanceState.getInt(SAVED_WP_LOGIN_STATE);
    mLocalBlogID=savedInstanceState.getInt(ARG_LOCAL_TABLE_BLOG_ID);
    mCurrentTimeframe=(StatsTimeframe)savedInstanceState.getSerializable(SAVED_STATS_TIMEFRAME);
    mRequestedDate=savedInstanceState.getString(SAVED_STATS_REQUESTED_DATE);
    final int yScrollPosition=savedInstanceState.getInt(SAVED_STATS_SCROLL_POSITION);
    if (yScrollPosition != 0) {
      mOuterScrollView.postDelayed(new Runnable(){
        public void run(){
          if (!isFinishing()) {
            mOuterScrollView.scrollTo(0,yScrollPosition);
          }
        }
      }
,StatsConstants.STATS_SCROLL_TO_DELAY);
    }
  }
 else   if (getIntent() != null) {
    mLocalBlogID=getIntent().getIntExtra(ARG_LOCAL_TABLE_BLOG_ID,-1);
    if (getIntent().hasExtra(SAVED_STATS_TIMEFRAME)) {
      mCurrentTimeframe=(StatsTimeframe)getIntent().getSerializableExtra(SAVED_STATS_TIMEFRAME);
    }
 else     if (getIntent().hasExtra(ARG_DESIRED_TIMEFRAME)) {
      mCurrentTimeframe=(StatsTimeframe)getIntent().getSerializableExtra(ARG_DESIRED_TIMEFRAME);
    }
 else {
      mCurrentTimeframe=AppPrefs.getStatsTimeframe();
    }
    mRequestedDate=StatsUtils.getCurrentDateTZ(mLocalBlogID);
    if (getIntent().hasExtra(ARG_LAUNCHED_FROM)) {
      StatsLaunchedFrom from=(StatsLaunchedFrom)getIntent().getSerializableExtra(ARG_LAUNCHED_FROM);
      if (from == StatsLaunchedFrom.STATS_WIDGET) {
        AnalyticsUtils.trackWithBlogDetails(AnalyticsTracker.Stat.STATS_WIDGET_TAPPED,WordPress.getBlog(mLocalBlogID));
      }
    }
  }
  final Blog currentBlog=WordPress.getBlog(mLocalBlogID);
  if (currentBlog == null) {
    AppLog.e(T.STATS,"The blog with local_blog_id " + mLocalBlogID + " cannot be loaded from the DB.");
    Toast.makeText(this,R.string.stats_no_blog,Toast.LENGTH_LONG).show();
    finish();
    return;
  }
  createFragments(false);
  if (mSpinner == null && toolbar != null) {
    View view=View.inflate(this,R.layout.toolbar_spinner,toolbar);
    mSpinner=(Spinner)view.findViewById(R.id.action_bar_spinner);
    mTimeframeSpinnerAdapter=new TimeframeSpinnerAdapter(this,timeframes);
    mSpinner.setAdapter(mTimeframeSpinnerAdapter);
    mSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener(){
      @Override public void onItemSelected(      AdapterView<?> parent,      View view,      int position,      long id){
        if (isFinishing()) {
          return;
        }
        final StatsTimeframe selectedTimeframe=(StatsTimeframe)mTimeframeSpinnerAdapter.getItem(position);
        if (mCurrentTimeframe == selectedTimeframe) {
          AppLog.d(T.STATS,"The selected TIME FRAME is already active: " + selectedTimeframe.getLabel());
          return;
        }
        AppLog.d(T.STATS,"NEW TIME FRAME : " + selectedTimeframe.getLabel());
        mCurrentTimeframe=selectedTimeframe;
        AppPrefs.setStatsTimeframe(mCurrentTimeframe);
        mRequestedDate=StatsUtils.getCurrentDateTZ(mLocalBlogID);
        createFragments(true);
        mSpinner.postDelayed(new Runnable(){
          @Override public void run(){
            if (!isFinishing()) {
              scrollToTop();
            }
          }
        }
,StatsConstants.STATS_SCROLL_TO_DELAY);
        trackStatsAnalytics();
      }
      @Override public void onNothingSelected(      AdapterView<?> parent){
      }
    }
);
  }
  selectCurrentTimeframeInActionBar();
  TextView otherRecentStatsMovedLabel=(TextView)findViewById(R.id.stats_other_recent_stats_moved);
  otherRecentStatsMovedLabel.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      for (int i=0; i < timeframes.length; i++) {
        if (timeframes[i] == StatsTimeframe.INSIGHTS) {
          mSpinner.setSelection(i);
          break;
        }
      }
      mSpinner.postDelayed(new Runnable(){
        @Override public void run(){
          if (!isFinishing()) {
            scrollToTop();
          }
        }
      }
,StatsConstants.STATS_SCROLL_TO_DELAY);
    }
  }
);
  if (savedInstanceState == null) {
    AnalyticsUtils.trackWithBlogDetails(AnalyticsTracker.Stat.STATS_ACCESSED,currentBlog);
    trackStatsAnalytics();
  }
  mShouldDisplayStatsWidgetPromo=!AppPrefs.isStatsWidgetPromoDisplayed();
}
