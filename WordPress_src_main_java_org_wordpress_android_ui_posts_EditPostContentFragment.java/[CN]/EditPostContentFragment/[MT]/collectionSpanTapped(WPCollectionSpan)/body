{
  final List<String> collectionIds=collectionSpan.getContent();
  if (collectionIds == null || collectionIds.isEmpty()) {
    return false;
  }
  LayoutInflater factory=LayoutInflater.from(getActivity());
  final View alertView=factory.inflate(R.layout.alert_collection_viewer,null);
  if (alertView == null) {
    return false;
  }
  final ListView collectionList=(ListView)alertView.findViewById(R.id.collection_list);
  if (collectionList == null) {
    return false;
  }
  final List<String> removedContent=new ArrayList<>();
  ArrayAdapter<String> adapter=new ArrayAdapter<>(getActivity(),android.R.layout.simple_list_item_1,collectionIds);
  collectionList.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      removedContent.add(collectionIds.get(position));
      view.setVisibility(View.GONE);
    }
  }
);
  collectionList.setAdapter(adapter);
  AlertDialog collectionDialog=new AlertDialog.Builder(getActivity()).setTitle(getString(R.string.image_settings)).setView(alertView).setPositiveButton(getString(R.string.confirm),new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int whichButton){
      for (      String content : removedContent) {
        collectionSpan.removeContent(content);
      }
      dialog.dismiss();
    }
  }
).setNegativeButton(getString(R.string.cancel),new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int whichButton){
      dialog.dismiss();
    }
  }
).create();
  collectionDialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);
  collectionDialog.show();
  mScrollDetected=false;
  return true;
}
