{
  if (mediaFile == null || imageURL == null) {
    return;
  }
  final String mediaId=mediaFile.getMediaId();
  if (mediaId == null) {
    return;
  }
  final int maxThumbWidth=ImageUtils.getMaximumThumbnailWidthForEditor(getActivity());
  imageLoader.get(imageURL,new ImageLoader.ImageListener(){
    @Override public void onErrorResponse(    VolleyError arg0){
    }
    @Override public void onResponse(    ImageLoader.ImageContainer container,    boolean arg1){
      Bitmap downloadedBitmap=container.getBitmap();
      if (downloadedBitmap == null) {
        return;
      }
      if (downloadedBitmap.getWidth() < MIN_THUMBNAIL_WIDTH) {
        return;
      }
      Bitmap resizedBitmap;
      try {
        resizedBitmap=ImageUtils.getScaledBitmapAtLongestSide(downloadedBitmap,maxThumbWidth);
      }
 catch (      OutOfMemoryError er) {
        CrashlyticsUtils.setInt(ExtraKey.IMAGE_WIDTH,downloadedBitmap.getWidth());
        CrashlyticsUtils.setInt(ExtraKey.IMAGE_HEIGHT,downloadedBitmap.getHeight());
        CrashlyticsUtils.setFloat(ExtraKey.IMAGE_RESIZE_SCALE,((float)maxThumbWidth) / downloadedBitmap.getWidth());
        CrashlyticsUtils.logException(er,ExceptionType.SPECIFIC,T.POSTS);
        return;
      }
      if (resizedBitmap == null) {
        return;
      }
      final EditText editText=mContentEditText;
      Editable s=editText.getText();
      if (s == null) {
        return;
      }
      WPImageSpan[] spans=s.getSpans(0,s.length(),WPImageSpan.class);
      if (spans.length != 0) {
        for (        WPImageSpan is : spans) {
          MediaFile mediaFile=is.getMediaFile();
          if (mediaFile == null) {
            continue;
          }
          if (mediaId.equals(mediaFile.getMediaId()) && !is.isNetworkImageLoaded()) {
            int spanStart=s.getSpanStart(is);
            int spanEnd=s.getSpanEnd(is);
            WPEditImageSpan imageSpan=new WPEditImageSpan(getActivity(),resizedBitmap,is.getImageSource());
            imageSpan.setMediaFile(is.getMediaFile());
            imageSpan.setNetworkImageLoaded(true);
            s.removeSpan(is);
            s.setSpan(imageSpan,spanStart,spanEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
            break;
          }
        }
      }
    }
  }
,0,0);
}
