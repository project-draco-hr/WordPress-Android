{
  if (data != null) {
    final List<MediaItem> selectedContent=data.getParcelableArrayListExtra(MediaPickerActivity.SELECTED_CONTENT_RESULTS_KEY);
    if (selectedContent != null && selectedContent.size() > 0) {
      if (selectedContent.size() == 1) {
        if (selectedContent.get(0).getSource().toString().contains("wordpress.com")) {
          addExistingMediaToEditor(selectedContent.get(0).getTag());
        }
 else {
          addMedia(selectedContent.get(0).getSource(),null,getActivity());
        }
      }
 else {
        final Editable editableText=mContentEditText.getText();
        final int selectionStart=mContentEditText.getSelectionStart();
        final int selectionEnd=mContentEditText.getSelectionEnd();
        final String previewSource=selectedContent.get(0).getSource().toString();
        AsyncTask<String,String,WPCollectionSpan> background=new AsyncTask<String,String,WPCollectionSpan>(){
          Bitmap bitmap=null;
          int start, end;
          @Override protected WPCollectionSpan doInBackground(          String... params){
            if (previewSource.contains("wordpress.com")) {
              try {
                URL url=new URL(previewSource);
                bitmap=BitmapFactory.decodeStream(url.openConnection().getInputStream());
              }
 catch (              MalformedURLException exception) {
              }
catch (              IOException ioException) {
              }
            }
 else {
              bitmap=ImageUtils.getWPImageSpanThumbnailFromFilePath(getActivity(),previewSource,getMaximumThumbnailWidth());
            }
            WPCollectionSpan collectionSpan=new WPCollectionSpan(getActivity(),bitmap);
            for (            final MediaItem selectedItem : selectedContent) {
              collectionSpan.addContent(selectedItem.getSource().toString());
            }
            start=selectionStart;
            end=selectionEnd;
            if (start > end) {
              int temp=end;
              end=start;
              start=temp;
            }
            return collectionSpan;
          }
          @Override protected void onPostExecute(          WPCollectionSpan result){
            if (editableText != null && result != null) {
              editableText.insert(start," ");
              editableText.setSpan(result,start,end + 1,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
              editableText.insert(end + 1,"\n");
            }
          }
        }
;
        background.execute();
      }
    }
  }
}
