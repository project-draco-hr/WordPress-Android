{
  if (NetworkUtils.isNetworkAvailable(getActivity())) {
    List<Object> apiArgs=new ArrayList<Object>();
    apiArgs.add(WordPress.getCurrentBlog());
    ApiHelper.SyncMediaLibraryTask.Callback callback=new ApiHelper.SyncMediaLibraryTask.Callback(){
      @Override public void onSuccess(      int count){
        Intent intent=new Intent(mActivity,MediaPickerActivity.class);
        intent.putExtra(MediaPickerActivity.ACTIVITY_TITLE_KEY,getString(R.string.add_to_post));
        intent.putParcelableArrayListExtra(MediaPickerActivity.IMAGE_MEDIA_SOURCES_KEY,imageMediaSelectionSources(true));
        intent.putParcelableArrayListExtra(MediaPickerActivity.VIDEO_MEDIA_SOURCES_KEY,videoMediaSelectionSources(true));
        startActivityForResult(intent,MediaPickerActivity.ACTIVITY_REQUEST_CODE_MEDIA_SELECTION);
        mActivity.overridePendingTransition(R.anim.slide_up,R.anim.fade_out);
      }
      @Override public void onFailure(      final ApiHelper.ErrorType errorType,      String errorMessage,      Throwable throwable){
        ToastUtils.showToast(getActivity(),"Could not load blog media",ToastUtils.Duration.SHORT);
        Intent intent=new Intent(mActivity,MediaPickerActivity.class);
        intent.putExtra(MediaPickerActivity.ACTIVITY_TITLE_KEY,getString(R.string.add_to_post));
        intent.putParcelableArrayListExtra(MediaPickerActivity.IMAGE_MEDIA_SOURCES_KEY,imageMediaSelectionSources(false));
        intent.putParcelableArrayListExtra(MediaPickerActivity.VIDEO_MEDIA_SOURCES_KEY,videoMediaSelectionSources(false));
        startActivityForResult(intent,MediaPickerActivity.ACTIVITY_REQUEST_CODE_MEDIA_SELECTION);
        mActivity.overridePendingTransition(R.anim.slide_up,R.anim.fade_out);
      }
    }
;
    ApiHelper.SyncMediaLibraryTask getMediaTask=new ApiHelper.SyncMediaLibraryTask(0,MediaGridFragment.Filter.ALL,callback);
    getMediaTask.execute(apiArgs);
  }
}
