{
  String returnMessage="";
  boolean enteredSettings=checkSettings();
  if (!enteredSettings) {
    AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(selectCategories.this);
    dialogBuilder.setTitle(getResources().getText(R.string.settings_not_found));
    dialogBuilder.setMessage(getResources().getText(R.string.settings_not_found_load_now));
    dialogBuilder.setPositiveButton(getResources().getText(R.string.yes),new DialogInterface.OnClickListener(){
      public void onClick(      DialogInterface dialog,      int whichButton){
        Intent i=new Intent(selectCategories.this,settings.class);
        startActivityForResult(i,0);
      }
    }
);
    dialogBuilder.setNegativeButton(getResources().getText(R.string.no),new DialogInterface.OnClickListener(){
      public void onClick(      DialogInterface dialog,      int whichButton){
      }
    }
);
    dialogBuilder.setCancelable(true);
    dialogBuilder.create().show();
  }
 else {
    WordPressDB settingsDB=new WordPressDB(this);
    Vector<?> categoriesVector=settingsDB.loadSettings(this,id);
    String sURL="";
    if (categoriesVector.get(0).toString().contains("xmlrpc.php")) {
      sURL=categoriesVector.get(0).toString();
    }
 else {
      sURL=categoriesVector.get(0).toString() + "xmlrpc.php";
    }
    String sUsername=categoriesVector.get(2).toString();
    String sPassword=categoriesVector.get(3).toString();
    Object result[]=null;
    Object[] params={1,sUsername,sPassword};
    client=new XMLRPCClient(sURL);
    boolean success=false;
    try {
      result=(Object[])client.call("wp.getCategories",params);
      success=true;
    }
 catch (    XMLRPCException e) {
      e.printStackTrace();
    }
    if (success) {
      int size=result.length;
      WordPressDB categoriesDB=new WordPressDB(this);
      categoriesDB.clearCategories(this,id);
      for (int i=0; i < size; i++) {
        HashMap<?,?> curHash=(HashMap<?,?>)result[i];
        String categoryName=curHash.get("categoryName").toString();
        String categoryID=curHash.get("categoryId").toString();
        int convertedCategoryID=Integer.parseInt(categoryID);
        categoriesDB.insertCategory(this,id,convertedCategoryID,categoryName);
        textArray.add(categoryName);
      }
      returnMessage="gotCategories";
    }
 else {
      returnMessage="FAIL";
    }
  }
  return returnMessage;
}
