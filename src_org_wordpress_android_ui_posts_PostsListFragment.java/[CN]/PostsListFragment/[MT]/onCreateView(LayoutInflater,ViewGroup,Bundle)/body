{
  View view=inflater.inflate(R.layout.post_listview,container,false);
  mPullToRefreshHelper=new PullToRefreshHelper(getActivity(),(PullToRefreshLayout)view.findViewById(R.id.ptr_layout),new RefreshListener(){
    @Override public void onRefreshStarted(    View view){
      if (getActivity() == null || !NetworkUtils.checkConnection(getActivity())) {
        mPullToRefreshHelper.setRefreshing(false);
        return;
      }
      PostsActivity postsActivity=(PostsActivity)getActivity();
      Blog currentBlog=WordPress.getCurrentBlog();
      final RefreshBlogContentTask refreshBlogContentTask=new ApiHelper.RefreshBlogContentTask(postsActivity,currentBlog,new ApiHelper.VerifyCredentialsCallback(postsActivity,currentBlog.isDotcomFlag()));
      boolean hasLocalChanges=WordPress.wpDB.findLocalChanges(WordPress.getCurrentBlog().getLocalTableBlogId(),mIsPage);
      if (hasLocalChanges) {
        AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(postsActivity);
        dialogBuilder.setTitle(getResources().getText(R.string.local_changes));
        dialogBuilder.setMessage(getResources().getText(R.string.remote_changes));
        dialogBuilder.setPositiveButton(getResources().getText(R.string.yes),new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int whichButton){
            mPullToRefreshHelper.setRefreshing(true);
            refreshBlogContentTask.execute(false);
          }
        }
);
        dialogBuilder.setNegativeButton(getResources().getText(R.string.no),new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int whichButton){
            mPullToRefreshHelper.setRefreshing(false);
          }
        }
);
        dialogBuilder.setCancelable(true);
        dialogBuilder.create().show();
      }
 else {
        mPullToRefreshHelper.setRefreshing(true);
        refreshBlogContentTask.execute(false);
      }
    }
  }
,LinearLayout.class);
  return view;
}
