{
  Post post=new Post(WordPress.currentBlog.getId(),mSelectedID,isPage);
  if (post.getId() < 0) {
    if (!getActivity().isFinishing()) {
      FragmentTransaction ft=getFragmentManager().beginTransaction();
      WPAlertDialogFragment alert=WPAlertDialogFragment.newInstance(getString(R.string.post_not_found));
      alert.show(ft,"alert");
    }
    return false;
  }
  int itemGroupID=item.getGroupId();
  if (itemGroupID == MENU_GROUP_POSTS || itemGroupID == MENU_GROUP_PAGES || itemGroupID == MENU_GROUP_DRAFTS) {
switch (item.getItemId()) {
case MENU_ITEM_EDIT:
      WPMobileStatsUtil.flagProperty(statEventForViewClosing(),WPMobileStatsUtil.StatsPropertyPostMenuClickedEdit);
    Intent i2=new Intent(getActivity().getApplicationContext(),NewEditPostActivity.class);
  i2.putExtra(NewEditPostActivity.EXTRA_POSTID,mSelectedID);
if (itemGroupID == MENU_GROUP_PAGES) {
  i2.putExtra(NewEditPostActivity.EXTRA_IS_PAGE,true);
}
 else if (itemGroupID == MENU_GROUP_DRAFTS) {
  if (isPage)   i2.putExtra(NewEditPostActivity.EXTRA_IS_PAGE,true);
}
startActivityForResult(i2,0);
return true;
case MENU_ITEM_DELETE:
WPMobileStatsUtil.flagProperty(statEventForViewClosing(),WPMobileStatsUtil.StatsPropertyPostMenuClickedDelete);
mOnPostActionListener.onPostAction(PostsActivity.POST_DELETE,post);
return true;
case MENU_ITEM_PREVIEW:
WPMobileStatsUtil.flagProperty(statEventForViewClosing(),WPMobileStatsUtil.StatsPropertyPostMenuClickedPreview);
Intent i=new Intent(getActivity(),PreviewPostActivity.class);
i.putExtra("isPage",itemGroupID == MENU_GROUP_PAGES ? true : false);
i.putExtra("postID",mSelectedID);
i.putExtra("blogID",WordPress.currentBlog.getId());
startActivity(i);
return true;
case MENU_ITEM_SHARE:
WPMobileStatsUtil.flagProperty(statEventForViewClosing(),WPMobileStatsUtil.StatsPropertyPostMenuClickedShare);
mOnPostActionListener.onPostAction(PostsActivity.POST_SHARE,post);
return true;
case MENU_ITEM_ADD_COMMENT:
WPMobileStatsUtil.flagProperty(statEventForViewClosing(),WPMobileStatsUtil.StatsPropertyPostMenuClickedComment);
mOnPostActionListener.onPostAction(PostsActivity.POST_COMMENT,post);
return true;
default :
return false;
}
}
return false;
}
