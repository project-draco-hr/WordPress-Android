{
  AppLog.d(T.POSTS,"uploadImage: " + mediaFile.getFilePath());
  if (mediaFile.getFilePath() == null) {
    return null;
  }
  Uri imageUri=Uri.parse(mediaFile.getFilePath());
  File imageFile=null;
  String mimeType="", path="";
  if (imageUri.toString().contains("content:")) {
    String[] projection=new String[]{Images.Media._ID,Images.Media.DATA,Images.Media.MIME_TYPE};
    Cursor cur=mContext.getContentResolver().query(imageUri,projection,null,null,null);
    if (cur != null && cur.moveToFirst()) {
      int dataColumn=cur.getColumnIndex(Images.Media.DATA);
      int mimeTypeColumn=cur.getColumnIndex(Images.Media.MIME_TYPE);
      String thumbData=cur.getString(dataColumn);
      mimeType=cur.getString(mimeTypeColumn);
      imageFile=new File(thumbData);
      path=thumbData;
      mediaFile.setFilePath(imageFile.getPath());
    }
  }
 else {
    path=imageUri.toString().replace("file://","");
    imageFile=new File(path);
    mediaFile.setFilePath(path);
  }
  if (imageFile == null) {
    mErrorMessage=mContext.getString(R.string.file_not_found);
    return null;
  }
  if (TextUtils.isEmpty(mimeType)) {
    mimeType=MediaUtils.getMediaFileMimeType(imageFile);
  }
  String fileName=MediaUtils.getMediaFileName(imageFile,mimeType);
  String fileExtension=MimeTypeMap.getFileExtensionFromUrl(fileName).toLowerCase();
  int orientation=ImageUtils.getImageOrientation(mContext,path);
  String resizedPictureURL=null;
  boolean shouldUploadResizedVersion=false;
  if (!mimeType.equals("image/gif") && !mBlog.getMaxImageWidth().equals("Original Size")) {
    int pictureSettingWidth=mediaFile.getWidth();
    BitmapFactory.Options options=new BitmapFactory.Options();
    options.inJustDecodeBounds=true;
    BitmapFactory.decodeFile(path,options);
    int imageHeight=options.outHeight;
    int imageWidth=options.outWidth;
    int[] dimensions={imageWidth,imageHeight};
    if (dimensions[0] != 0 && dimensions[0] != pictureSettingWidth) {
      shouldUploadResizedVersion=true;
    }
  }
  boolean shouldAddImageWidthCSS=false;
  if (shouldUploadResizedVersion) {
    MediaFile resizedMediaFile=new MediaFile(mediaFile);
    byte[] bytes=ImageUtils.createThumbnailFromUri(mContext,imageUri,resizedMediaFile.getWidth(),fileExtension,orientation);
    if (bytes == null) {
      shouldUploadResizedVersion=false;
      shouldAddImageWidthCSS=true;
    }
 else {
      String tempFilePath;
      File resizedImageFile;
      try {
        resizedImageFile=File.createTempFile("wp-image-",fileExtension);
        FileOutputStream out=new FileOutputStream(resizedImageFile);
        out.write(bytes);
        out.close();
        tempFilePath=resizedImageFile.getPath();
      }
 catch (      IOException e) {
        AppLog.w(T.POSTS,"failed to create image temp file");
        mErrorMessage=mContext.getString(R.string.error_media_upload);
        return null;
      }
      if (!TextUtils.isEmpty(tempFilePath)) {
        resizedMediaFile.setFilePath(tempFilePath);
        Map<String,Object> parameters=new HashMap<String,Object>();
        parameters.put("name",fileName);
        parameters.put("type",mimeType);
        parameters.put("bits",resizedMediaFile);
        parameters.put("overwrite",true);
        resizedPictureURL=uploadImageFile(parameters,resizedMediaFile,mBlog);
        if (resizedPictureURL == null) {
          AppLog.w(T.POSTS,"failed to upload resized picture");
          return null;
        }
 else         if (resizedImageFile.exists()) {
          resizedImageFile.delete();
        }
      }
 else {
        AppLog.w(T.POSTS,"failed to create resized picture");
        mErrorMessage=mContext.getString(R.string.out_of_memory);
        return null;
      }
    }
  }
  String fullSizeUrl=null;
  if (!shouldUploadResizedVersion || mBlog.isFullSizeImage()) {
    Map<String,Object> parameters=new HashMap<String,Object>();
    parameters.put("name",fileName);
    parameters.put("type",mimeType);
    parameters.put("bits",mediaFile);
    parameters.put("overwrite",true);
    fullSizeUrl=uploadImageFile(parameters,mediaFile,mBlog);
    if (fullSizeUrl == null) {
      mErrorMessage=mContext.getString(R.string.error_media_upload);
      return null;
    }
  }
  return mediaFile.getImageHtmlForUrls(fullSizeUrl,resizedPictureURL,shouldAddImageWidthCSS);
}
