{
  int offset=0;
  JSONObject queryJSON=mNoteJSON;
  do {
    int next_seperator=query.indexOf(QUERY_SEPERATOR,offset);
    boolean has_next_seperator=next_seperator > -1;
    int start_array=query.indexOf(QUERY_ARRAY_INDEX_START,offset);
    if (next_seperator == -1 && start_array == -1) {
      try {
        return (U)queryJSON.get(query.substring(offset));
      }
 catch (      JSONException e) {
        Log.e(TAG,String.format("Failed to query %s",query),e);
        return defaultObject;
      }
    }
    String key;
    if (start_array == -1 || (next_seperator > -1 && start_array > next_seperator)) {
      try {
        queryJSON=queryJSON.getJSONObject(query.substring(offset,next_seperator));
      }
 catch (      JSONException e) {
        Log.e(TAG,String.format("Failed to query key %s",query),e);
        return defaultObject;
      }
      offset=next_seperator + 1;
      continue;
    }
    if (next_seperator == -1 || start_array == -1) {
      key=query.substring(offset,Math.max(next_seperator,start_array));
    }
 else {
      key=query.substring(offset,Math.min(next_seperator,start_array));
    }
    if (start_array > -1 && (start_array < next_seperator || !has_next_seperator)) {
      try {
        JSONArray arrayJSON=queryJSON.getJSONArray(key);
        do {
          int end_array=query.indexOf(QUERY_ARRAY_INDEX_END,start_array);
          if (end_array <= start_array)           break;
          offset=end_array;
          String index=query.substring(start_array + 1,end_array);
          int i;
          if (index.equals(QUERY_ARRAY_FIRST)) {
            i=0;
          }
 else           if (index.equals(QUERY_ARRAY_LAST)) {
            i=-1;
          }
 else {
            i=Integer.parseInt(index);
          }
          if (i < 0)           i=arrayJSON.length() + i;
          start_array=query.indexOf(QUERY_ARRAY_INDEX_START,end_array);
          if (start_array == -1 && !has_next_seperator) {
            return (U)arrayJSON.get(i);
          }
          if (start_array == -1 && has_next_seperator) {
            queryJSON=arrayJSON.getJSONObject(i);
            break;
          }
          arrayJSON=arrayJSON.getJSONArray(i);
        }
 while (start_array < next_seperator);
        offset=next_seperator + 1;
        continue;
      }
 catch (      JSONException e) {
        Log.e(TAG,String.format("Failed to query array %s",query),e);
        return defaultObject;
      }
    }
    Log.d(TAG,String.format("We need to remove the key from %s",query.substring(offset,next_seperator)));
    key=query.substring(offset,next_seperator);
    if (true)     return defaultObject;
  }
 while (offset > 0);
  return defaultObject;
}
