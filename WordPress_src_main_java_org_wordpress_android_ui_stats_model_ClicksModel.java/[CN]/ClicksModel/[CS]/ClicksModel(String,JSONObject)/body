{
  this.blogID=blogID;
  this.period=response.getString("period");
  this.date=response.getString("date");
  JSONObject jDaysObject=response.getJSONObject("days");
  if (jDaysObject == null || jDaysObject.length() == 0) {
    return;
  }
  JSONArray jClickGroupsArray;
  Iterator<String> keys=jDaysObject.keys();
  String key=keys.next();
  JSONObject firstDayObject=jDaysObject.getJSONObject(key);
  this.otherViews=firstDayObject.optInt("other_clicks");
  this.totalViews=firstDayObject.optInt("total_clicks");
  jClickGroupsArray=firstDayObject.optJSONArray("clicks");
  if (jClickGroupsArray != null) {
    clickGroups=new ArrayList<ClickGroupModel>(jClickGroupsArray.length());
    for (int i=0; i < jClickGroupsArray.length(); i++) {
      try {
        JSONObject currentGroupJSON=jClickGroupsArray.getJSONObject(i);
        ClickGroupModel currentGroupModel=new ClickGroupModel(blogID,date,currentGroupJSON);
        clickGroups.add(currentGroupModel);
      }
 catch (      JSONException e) {
        AppLog.e(AppLog.T.STATS,"Unexpected ReferrerGroupModel object referrers" + "at position " + i + " Response: "+ response.toString(),e);
      }
    }
  }
}
