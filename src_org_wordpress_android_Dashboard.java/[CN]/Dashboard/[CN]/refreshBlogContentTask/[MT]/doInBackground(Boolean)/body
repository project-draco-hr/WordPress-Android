{
  boolean commentsOnly=params[0];
  Blog blog=WordPress.getCurrentBlog(Dashboard.this);
  XMLRPCClient client=new XMLRPCClient(blog.getUrl(),blog.getHttpuser(),blog.getHttppassword());
  if (!commentsOnly) {
    HashMap<String,String> hPost=new HashMap<String,String>();
    hPost.put("software_version","software_version");
    hPost.put("post_thumbnail","post_thumbnail");
    hPost.put("jetpack_client_id","jetpack_client_id");
    hPost.put("blog_public","blog_public");
    Object[] vParams={blog.getBlogId(),blog.getUsername(),blog.getPassword(),hPost};
    Object versionResult=new Object();
    try {
      versionResult=(Object)client.call("wp.getOptions",vParams);
    }
 catch (    XMLRPCException e) {
    }
    if (versionResult != null) {
      try {
        HashMap<?,?> blogOptions=(HashMap<?,?>)versionResult;
        Gson gson=new Gson();
        String blogOptionsJson=gson.toJson(blogOptions);
        if (blogOptionsJson != null)         blog.setBlogOptions(blogOptionsJson);
        if (!blog.isDotcomFlag()) {
          HashMap<?,?> sv=(HashMap<?,?>)blogOptions.get("software_version");
          String wpVersion=sv.get("value").toString();
          if (wpVersion.length() > 0) {
            blog.setWpVersion(wpVersion);
          }
        }
        HashMap<?,?> featuredImageHash=(HashMap<?,?>)blogOptions.get("post_thumbnail");
        if (featuredImageHash != null) {
          boolean featuredImageCapable=Boolean.parseBoolean(featuredImageHash.get("value").toString());
          blog.setFeaturedImageCapable(featuredImageCapable);
        }
 else {
          blog.setFeaturedImageCapable(false);
        }
        blog.save(Dashboard.this,"");
      }
 catch (      Exception e) {
      }
    }
    Vector<Object> args=new Vector<Object>();
    args.add(blog);
    args.add(Dashboard.this);
    new ApiHelper.getPostFormatsTask().execute(args);
  }
  HashMap<String,Object> hPost=new HashMap<String,Object>();
  hPost.put("number",30);
  Object[] commentParams={blog.getBlogId(),blog.getUsername(),blog.getPassword(),hPost};
  try {
    ApiHelper.refreshComments(Dashboard.this,commentParams);
  }
 catch (  XMLRPCException e) {
    e.printStackTrace();
  }
  return true;
}
