{
  settingsDB settingsDB=new settingsDB(this);
  Vector notificationAccounts=settingsDB.getNotificationAccounts(this);
  if (notificationAccounts != null) {
    if (notificationAccounts.size() == 0) {
      this.stopSelf();
    }
 else {
      for (int i=0; i < notificationAccounts.size(); i++) {
        accountID=notificationAccounts.get(i).toString();
        accountName=settingsDB.getAccountName(this,accountID);
        Log.i("wpToGoCommentService","Checking Comments for " + accountName);
        Vector settings=settingsDB.loadSettings(this,accountID);
        final int latestCommentID=settingsDB.getLatestCommentID(this,accountID);
        String sURL="";
        if (settings.get(0).toString().contains("xmlrpc.php")) {
          sURL=settings.get(0).toString();
        }
 else {
          sURL=settings.get(0).toString() + "xmlrpc.php";
        }
        String sUsername=settings.get(2).toString();
        String sPassword=settings.get(3).toString();
        client=new XMLRPCClient(sURL);
        HashMap hPost=new HashMap();
        hPost.put("status","");
        hPost.put("post_id","");
        hPost.put("number",1);
        Object[] params={1,sUsername,sPassword,hPost};
        XMLRPCMethodCallback callBack=new XMLRPCMethodCallback(){
          public void callFinished(          Object[] result){
            String s="done";
            settingsDB settingsDB=new settingsDB(commentService.this);
            if (result.length == 0) {
            }
 else {
              s=result.toString();
              HashMap contentHash=new HashMap();
              int ctr=0;
              for (              Object item : result) {
                contentHash=(HashMap)result[ctr];
                ctr++;
              }
              String commentID=contentHash.get("comment_id").toString();
              if (latestCommentID == 0) {
                settingsDB.updateLatestCommentID(commentService.this,accountID,Integer.valueOf(commentID));
                Log.i("wpToGoCommentService","comment was zero");
              }
 else               if (Integer.valueOf(commentID) > latestCommentID) {
                final NotificationManager nm=(NotificationManager)getSystemService(NOTIFICATION_SERVICE);
                Intent notificationIntent=new Intent(commentService.this,moderateComments.class);
                notificationIntent.setData((Uri.parse("custom://wpToGoNotificationIntent" + accountID)));
                notificationIntent.putExtra("id",accountID);
                notificationIntent.putExtra("accountName",accountName);
                notificationIntent.putExtra("fromNotification",true);
                PendingIntent pendingIntent=PendingIntent.getActivity(commentService.this,0,notificationIntent,Intent.FLAG_ACTIVITY_CLEAR_TOP);
                Notification n=new Notification(R.drawable.wp_logo,"New Comment Received",System.currentTimeMillis());
                n.setLatestEventInfo(commentService.this,accountName,"New Comment Received",pendingIntent);
                nm.notify(22 + Integer.valueOf(accountID),n);
                settingsDB.updateLatestCommentID(commentService.this,accountID,Integer.valueOf(commentID));
                Log.i("wpToGoCommentService","found a new comment!");
              }
 else {
                Log.i("wpToGoCommentService","no new comments");
              }
            }
          }
        }
;
        final Object[] result;
        try {
          result=(Object[])client.call("wp.getComments",params);
          callBack.callFinished(result);
        }
 catch (        XMLRPCException e) {
          e.printStackTrace();
        }
      }
    }
  }
}
