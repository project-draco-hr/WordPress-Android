{
  String originalFileName=mediaFile.getName().toLowerCase();
  String mimeType=UrlUtils.getUrlMimeType(originalFileName);
  if (TextUtils.isEmpty(mimeType)) {
    try {
      String filePathForGuessingMime=mediaFile.getPath().contains("://") ? mediaFile.getPath() : "file://" + mediaFile.getPath();
      URL urlForGuessingMime=new URL(filePathForGuessingMime);
      URLConnection uc=urlForGuessingMime.openConnection();
      String guessedContentType=uc.getContentType();
      if (!TextUtils.isEmpty(guessedContentType) && !guessedContentType.equals("content/unknown")) {
        mimeType=guessedContentType;
      }
    }
 catch (    MalformedURLException e) {
      AppLog.e(AppLog.T.API,"MalformedURLException while trying to guess the content type for the file here " + mediaFile.getPath() + " with URLConnection",e);
    }
catch (    IOException e) {
      AppLog.e(AppLog.T.API,"Error while trying to guess the content type for the file here " + mediaFile.getPath() + " with URLConnection",e);
    }
  }
  if (TextUtils.isEmpty(mimeType)) {
    try {
      DataInputStream inputStream=new DataInputStream(new FileInputStream(mediaFile));
      String mimeTypeFromStream=getMimeTypeOfInputStream(inputStream);
      if (!TextUtils.isEmpty(mimeTypeFromStream)) {
        mimeType=mimeTypeFromStream;
      }
      inputStream.close();
    }
 catch (    FileNotFoundException e) {
      AppLog.e(AppLog.T.API,"FileNotFoundException while trying to guess the content type for the file " + mediaFile.getPath(),e);
    }
catch (    IOException e) {
      AppLog.e(AppLog.T.API,"IOException while trying to guess the content type for the file " + mediaFile.getPath(),e);
    }
  }
  if (TextUtils.isEmpty(mimeType)) {
    mimeType="";
  }
 else {
    if (mimeType.equalsIgnoreCase("video/mp4v-es")) {
      mimeType="video/mp4";
    }
  }
  return mimeType;
}
