{
  EditText urlET=(EditText)findViewById(R.id.url);
  if (wpcom) {
    blogURL="http://wordpress.com";
  }
 else {
    blogURL=urlET.getText().toString();
  }
  EditText usernameET=(EditText)findViewById(R.id.username);
  final String username=usernameET.getText().toString();
  EditText passwordET=(EditText)findViewById(R.id.password);
  final String password=passwordET.getText().toString();
  if (blogURL.equals("") || username.equals("") || password.equals("")) {
    pd.dismiss();
    AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(addAccount.this);
    dialogBuilder.setTitle(getResources().getText(R.string.required_fields));
    dialogBuilder.setMessage(getResources().getText(R.string.url_username_password_required));
    dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
      public void onClick(      DialogInterface dialog,      int whichButton){
      }
    }
);
    dialogBuilder.setCancelable(true);
    dialogBuilder.create().show();
  }
 else {
    if (!(blogURL.toLowerCase().contains("http://")) && !(blogURL.toLowerCase().contains("https://"))) {
      blogURL="http://" + blogURL;
    }
    String fBlogURL="";
    String rsdUrl=getRSDMetaTagHref(blogURL);
    if (rsdUrl != null) {
      xmlrpcURL=getXMLRPCUrl(rsdUrl);
    }
    if (xmlrpcURL != null) {
      fBlogURL=xmlrpcURL;
    }
 else {
      String lastChar=blogURL.substring(blogURL.length() - 1,blogURL.length());
      if (lastChar.equals("/")) {
        blogURL=blogURL.substring(0,blogURL.length() - 1);
      }
      fBlogURL=blogURL + "/xmlrpc.php";
    }
    client=new XMLRPCClient(fBlogURL);
    XMLRPCMethod method=new XMLRPCMethod("wp.getUsersBlogs",new XMLRPCMethodCallback(){
      public void callFinished(      Object[] result){
        final String[] blogNames=new String[result.length];
        final String[] urls=new String[result.length];
        final int[] blogIds=new int[result.length];
        final boolean[] wpcoms=new boolean[result.length];
        final String[] wpVersions=new String[result.length];
        HashMap contentHash=new HashMap();
        int ctr=0, blogCtr=0;
        WordPressDB settingsDB=new WordPressDB(addAccount.this);
        for (        Object item : result) {
          contentHash=(HashMap)result[ctr];
          boolean match=false;
          match=settingsDB.checkMatch(addAccount.this,contentHash.get("blogName").toString(),contentHash.get("xmlrpc").toString(),username);
          if (!match) {
            blogNames[blogCtr]=contentHash.get("blogName").toString();
            aBlogNames.add(escapeUtils.unescapeHtml(blogNames[blogCtr]));
            urls[blogCtr]=contentHash.get("xmlrpc").toString();
            blogIds[blogCtr]=Integer.parseInt(contentHash.get("blogid").toString());
            String blogName=blogNames[blogCtr];
            String blogURL=urls[blogCtr];
            int blogId=blogIds[blogCtr];
            boolean success=false;
            if (blogName == "") {
              blogNames[blogCtr]="(No Blog Title)";
            }
            boolean wpcomFlag=false;
            if (blogURL.toLowerCase().contains("wordpress.com")) {
              wpcomFlag=true;
            }
            wpcoms[blogCtr]=wpcomFlag;
            String wpVersion="";
            if (!wpcomFlag) {
              HashMap hPost=new HashMap();
              hPost.put("software_version","software_version");
              Object[] vParams={1,username,password,hPost};
              Object versionResult=new Object();
              try {
                versionResult=(Object)client.call("wp.getOptions",vParams);
              }
 catch (              XMLRPCException e) {
              }
              if (versionResult != null) {
                try {
                  contentHash=(HashMap)versionResult;
                  HashMap sv=(HashMap)contentHash.get("software_version");
                  wpVersion=sv.get("value").toString();
                }
 catch (                Exception e) {
                }
              }
            }
 else {
              wpVersion="3.0";
            }
            wpVersions[blogCtr]=wpVersion;
            blogCtr++;
          }
          ctr++;
        }
        pd.dismiss();
        if (result.length == 0) {
          AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(addAccount.this);
          dialogBuilder.setTitle("No Blogs Found");
          dialogBuilder.setMessage("No blogs were found for that account.");
          dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
            public void onClick(            DialogInterface dialog,            int whichButton){
            }
          }
);
          dialogBuilder.setCancelable(true);
          dialogBuilder.create().show();
        }
 else {
          if (result.length > 1) {
            LayoutInflater inflater=(LayoutInflater)addAccount.this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            final ListView lv=(ListView)inflater.inflate(R.layout.select_blogs_list,null);
            lv.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
            lv.setItemsCanFocus(false);
            ArrayAdapter<CharSequence> blogs=new ArrayAdapter<CharSequence>(addAccount.this,R.layout.blogs_row,aBlogNames);
            lv.setAdapter(blogs);
            AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(addAccount.this);
            dialogBuilder.setTitle("Select Blogs");
            dialogBuilder.setView(lv);
            dialogBuilder.setNegativeButton("Add Selected",new DialogInterface.OnClickListener(){
              public void onClick(              DialogInterface dialog,              int whichButton){
                SparseBooleanArray selectedItems=lv.getCheckedItemPositions();
                WordPressDB settingsDB=new WordPressDB(addAccount.this);
                for (int i=0; i < selectedItems.size(); i++) {
                  if (selectedItems.get(selectedItems.keyAt(i)) == true) {
                    int rowID=selectedItems.keyAt(i);
                    success=settingsDB.addAccount(addAccount.this,urls[rowID],blogNames[rowID],username,password,"Above Text",true,false,"500",5,false,blogIds[rowID],wpcoms[rowID],wpVersions[rowID]);
                  }
                }
                Bundle bundle=new Bundle();
                bundle.putString("returnStatus","SAVE");
                Intent mIntent=new Intent();
                mIntent.putExtras(bundle);
                setResult(RESULT_OK,mIntent);
                finish();
              }
            }
);
            dialogBuilder.setPositiveButton("Add All",new DialogInterface.OnClickListener(){
              public void onClick(              DialogInterface dialog,              int whichButton){
                WordPressDB settingsDB=new WordPressDB(addAccount.this);
                for (int i=0; i < blogNames.length; i++) {
                  success=settingsDB.addAccount(addAccount.this,urls[i],blogNames[i],username,password,"Above Text",true,false,"500",5,false,blogIds[i],wpcoms[i],wpVersions[i]);
                }
                Bundle bundle=new Bundle();
                bundle.putString("returnStatus","SAVE");
                Intent mIntent=new Intent();
                mIntent.putExtras(bundle);
                setResult(RESULT_OK,mIntent);
                finish();
              }
            }
);
            dialogBuilder.setCancelable(true);
            AlertDialog ad=dialogBuilder.create();
            ad.setInverseBackgroundForced(true);
            ad.show();
            final Button addSelected=ad.getButton(AlertDialog.BUTTON_NEGATIVE);
            addSelected.setEnabled(false);
            lv.setOnItemClickListener(new OnItemClickListener(){
              public void onItemClick(              AdapterView<?> arg0,              View arg1,              int arg2,              long arg3){
                SparseBooleanArray selectedItems=lv.getCheckedItemPositions();
                boolean isChecked=false;
                for (int i=0; i < selectedItems.size(); i++) {
                  if (selectedItems.get(selectedItems.keyAt(i)) == true) {
                    isChecked=true;
                  }
                }
                if (!isChecked) {
                  addSelected.setEnabled(false);
                }
 else {
                  addSelected.setEnabled(true);
                }
              }
            }
);
          }
 else {
            success=settingsDB.addAccount(addAccount.this,urls[0],blogNames[0],username,password,"Above Text",true,false,"500",5,false,blogIds[0],wpcoms[0],wpVersions[0]);
            Bundle bundle=new Bundle();
            bundle.putString("returnStatus","SAVE");
            Intent mIntent=new Intent();
            mIntent.putExtras(bundle);
            setResult(RESULT_OK,mIntent);
            finish();
          }
        }
      }
    }
);
    Object[] params={username,password};
    method.call(params);
  }
}
