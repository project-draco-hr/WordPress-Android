{
  Vector apiInfo=null;
  URI uri=URI.create("https://public-api.wordpress.com/getuserblogs.php");
  configureClient(uri,username,password);
  HttpResponse response;
  try {
    response=client.execute(postMethod);
    Log.i("WordPress","response = " + response.getStatusLine());
    int statusCode=response.getStatusLine().getStatusCode();
    if (statusCode != HttpStatus.SC_OK) {
      throw new IOException("HTTP status code: " + statusCode + " was returned. "+ response.getStatusLine().getReasonPhrase());
    }
    try {
      XmlPullParser pullParser=XmlPullParserFactory.newInstance().newPullParser();
      HttpEntity entity=response.getEntity();
      PushbackInputStream is=new PushbackInputStream(entity.getContent());
      int bomCheck=is.read();
      int stopper=0;
      while (bomCheck != 60 && stopper < 20) {
        bomCheck=is.read();
        stopper++;
      }
      is.unread(bomCheck);
      pullParser.setInput(is,"UTF-8");
      int eventType=pullParser.getEventType();
      String apiKey="";
      String blogID="";
      boolean foundKey=false;
      boolean foundID=false;
      boolean foundURL=false;
      String curBlogID="";
      String curBlogURL="";
      while (eventType != XmlPullParser.END_DOCUMENT) {
        if (eventType == XmlPullParser.START_DOCUMENT) {
          System.out.println("Start document");
        }
 else         if (eventType == XmlPullParser.END_DOCUMENT) {
          System.out.println("End document");
        }
 else         if (eventType == XmlPullParser.START_TAG) {
          String test=pullParser.getName();
          if (pullParser.getName().equals("apikey")) {
            foundKey=true;
          }
 else           if (pullParser.getName().equals("id")) {
            foundID=true;
          }
 else           if (pullParser.getName().equals("url")) {
            foundURL=true;
          }
        }
 else         if (eventType == XmlPullParser.END_TAG) {
          System.out.println("End tag " + pullParser.getName());
        }
 else         if (eventType == XmlPullParser.TEXT) {
          System.out.println("Text " + pullParser.getText().toString());
          if (foundKey) {
            apiKey=pullParser.getText();
            foundKey=false;
          }
 else           if (foundID) {
            curBlogID=pullParser.getText();
            foundID=false;
          }
 else           if (foundURL) {
            curBlogURL=pullParser.getText();
            foundURL=false;
            if (curBlogURL.equals(url) || storedBlogID.equals(curBlogID)) {
              blogID=curBlogID;
              apiInfo=new Vector();
              apiInfo.add(apiKey);
              apiInfo.add(blogID);
              return apiInfo;
            }
          }
        }
        eventType=pullParser.next();
      }
    }
 catch (    XmlPullParserException e) {
      e.printStackTrace();
    }
  }
 catch (  ClientProtocolException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  return apiInfo;
}
