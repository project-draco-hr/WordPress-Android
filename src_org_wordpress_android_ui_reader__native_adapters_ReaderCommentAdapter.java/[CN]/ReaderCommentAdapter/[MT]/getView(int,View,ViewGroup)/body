{
  final ReaderComment comment=mComments.get(position);
  CommentViewHolder holder;
  if (convertView == null) {
    convertView=mInflater.inflate(R.layout.reader_listitem_comment,parent,false);
    holder=new CommentViewHolder();
    holder.txtTitle=(TextView)convertView.findViewById(R.id.text_comment_title);
    holder.txtText=(TextView)convertView.findViewById(R.id.text_comment_text);
    holder.txtDate=(TextView)convertView.findViewById(R.id.text_comment_date);
    holder.imgAvatar=(WPNetworkImageView)convertView.findViewById(R.id.image_avatar);
    holder.spacer=convertView.findViewById(R.id.spacer);
    holder.progress=(ProgressBar)convertView.findViewById(R.id.progress);
    convertView.setTag(holder);
  }
 else {
    holder=(CommentViewHolder)convertView.getTag();
  }
  holder.txtTitle.setText(comment.getAuthorName());
  holder.txtText.setText(prepareComment(comment.getText()));
  java.util.Date dtPublished=DateTimeUtils.iso8601ToJavaDate(comment.getPublished());
  holder.txtDate.setText(DateTimeUtils.javaDateToTimeSpan(dtPublished));
  if (comment.hasAvatar()) {
    holder.imgAvatar.setImageUrl(PhotonUtils.fixAvatar(comment.getAuthorAvatar(),mAvatarSz),WPNetworkImageView.ImageType.AVATAR);
    holder.imgAvatar.setVisibility(View.VISIBLE);
    if (comment.hasAuthorUrl()) {
      holder.imgAvatar.setOnClickListener(new View.OnClickListener(){
        @Override public void onClick(        View v){
          ReaderActivityLauncher.openUrl(v.getContext(),comment.getAuthorUrl());
        }
      }
);
    }
 else {
      holder.imgAvatar.setOnClickListener(null);
    }
  }
 else {
    holder.imgAvatar.setVisibility(View.GONE);
  }
  holder.spacer.setVisibility(comment.parentId == 0 ? View.GONE : View.VISIBLE);
  if (comment.level > 0) {
    int indent=Math.min(MAX_INDENT_LEVEL,comment.level) * mIndentPerLevel;
    RelativeLayout.LayoutParams params=(RelativeLayout.LayoutParams)holder.spacer.getLayoutParams();
    if (params.width != indent)     params.width=indent;
    holder.spacer.setVisibility(View.VISIBLE);
  }
  if (mHighlightCommentId == comment.commentId) {
    convertView.setBackgroundColor(mBgColorHighlight);
    holder.progress.setVisibility(mShowProgressForHighlightedComment ? View.VISIBLE : View.GONE);
  }
 else {
    convertView.setBackgroundColor(mBgColorNormal);
    holder.progress.setVisibility(View.GONE);
  }
  if (mMoreCommentsExist && mDataRequestedListener != null && (position >= getCount() - 1))   mDataRequestedListener.onRequestData(ReaderActions.RequestDataAction.LOAD_NEWER);
  return convertView;
}
