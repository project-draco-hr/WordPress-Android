{
  final ViewGroup messageView=(ViewGroup)findViewById(R.id.message_container);
  if (mPost == null || mIsUpdatingPost || PostUploadService.isPostUploading(mPost.getLocalTablePostId()) || (!mPost.isLocalChange() && !mPost.isLocalDraft())) {
    messageView.setVisibility(View.GONE);
    return;
  }
  TextView messageText=(TextView)messageView.findViewById(R.id.message_text);
  if (mPost.isLocalChange()) {
    messageText.setText(R.string.local_changes_explainer);
  }
 else   if (mPost.isLocalDraft()) {
    messageText.setText(R.string.local_draft_explainer);
  }
  View btnPublish=messageView.findViewById(R.id.btn_publish);
  btnPublish.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      AniUtils.animateBottomBar(messageView,false);
      publishPost();
    }
  }
);
  View btnRevert=messageView.findViewById(R.id.btn_revert);
  btnRevert.setVisibility(mPost.isLocalDraft() ? View.GONE : View.VISIBLE);
  if (!mPost.isLocalDraft()) {
    btnRevert.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        AniUtils.animateBottomBar(messageView,false);
        revertPost();
      }
    }
);
  }
  messageView.setVisibility(View.INVISIBLE);
  new Handler().postDelayed(new Runnable(){
    @Override public void run(){
      if (!isFinishing() && messageView.getVisibility() != View.VISIBLE) {
        AniUtils.animateBottomBar(messageView,true);
      }
    }
  }
,1000);
}
