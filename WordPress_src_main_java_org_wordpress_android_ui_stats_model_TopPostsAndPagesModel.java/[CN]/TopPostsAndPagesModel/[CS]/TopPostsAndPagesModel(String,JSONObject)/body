{
  this.mBlogID=blogID;
  this.mPeriod=response.getString("period");
  this.mDate=response.getString("date");
  JSONArray postViewsArray=null;
  JSONObject jDaysObject=response.getJSONObject("days");
  if (jDaysObject.length() == 0) {
    throw new JSONException("Invalid document returned from the REST API");
  }
  Iterator<String> keys=jDaysObject.keys();
  if (keys.hasNext()) {
    String key=keys.next();
    JSONObject jDateObject=jDaysObject.optJSONObject(key);
    postViewsArray=(jDateObject != null) ? jDateObject.getJSONArray("postviews") : null;
  }
  if (postViewsArray == null) {
    postViewsArray=new JSONArray();
  }
  ArrayList<TopPostModel> list=new ArrayList<TopPostModel>(postViewsArray.length());
  for (int i=0; i < postViewsArray.length(); i++) {
    try {
      JSONObject postObject=postViewsArray.getJSONObject(i);
      TopPostModel currentModel=new TopPostModel(blogID,postObject);
      list.add(currentModel);
    }
 catch (    JSONException e) {
      AppLog.e(AppLog.T.STATS,"Unexpected TopPostModel object in top posts and pages array" + "at position " + i + " Response: "+ response.toString(),e);
    }
  }
  this.mTopPostsAndPages=list;
}
