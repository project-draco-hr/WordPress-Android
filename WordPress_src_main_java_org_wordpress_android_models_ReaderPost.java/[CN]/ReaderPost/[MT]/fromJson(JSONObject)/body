{
  if (json == null) {
    throw new IllegalArgumentException("null json post");
  }
  ReaderPost post=new ReaderPost();
  post.postId=json.optLong("ID");
  post.blogId=json.optLong("site_ID");
  if (json.has("pseudo_ID")) {
    post.pseudoId=JSONUtil.getString(json,"pseudo_ID");
  }
 else {
    post.pseudoId=JSONUtil.getString(json,"global_ID");
  }
  post.excerpt=HtmlUtils.fastStripHtml(JSONUtil.getString(json,"excerpt"));
  post.text=JSONUtil.getString(json,"content");
  post.title=JSONUtil.getStringDecoded(json,"title");
  post.url=JSONUtil.getString(json,"URL");
  post.setBlogUrl(JSONUtil.getString(json,"site_URL"));
  post.numReplies=json.optInt("comment_count");
  post.numLikes=json.optInt("like_count");
  post.isLikedByCurrentUser=JSONUtil.getBool(json,"i_like");
  post.isFollowedByCurrentUser=JSONUtil.getBool(json,"is_following");
  post.isRebloggedByCurrentUser=JSONUtil.getBool(json,"is_reblogged");
  post.isCommentsOpen=JSONUtil.getBool(json,"comments_open");
  post.isExternal=JSONUtil.getBool(json,"is_external");
  post.isPrivate=JSONUtil.getBool(json,"site_is_private");
  post.isLikesEnabled=JSONUtil.getBool(json,"likes_enabled");
  post.isSharingEnabled=JSONUtil.getBool(json,"sharing_enabled");
  assignAuthorFromJson(post,json.optJSONObject("author"));
  JSONObject jsonEditorial=json.optJSONObject("editorial");
  if (jsonEditorial != null) {
    post.blogId=jsonEditorial.optLong("blog_id");
    post.blogName=JSONUtil.getStringDecoded(jsonEditorial,"blog_name");
    post.featuredImage=getImageUrlFromFeaturedImageUrl(JSONUtil.getString(jsonEditorial,"image"));
    post.setPrimaryTag(JSONUtil.getString(jsonEditorial,"highlight_topic_title"));
    post.published=JSONUtil.getString(jsonEditorial,"displayed_on");
  }
 else {
    post.featuredImage=JSONUtil.getString(json,"featured_image");
    post.blogName=JSONUtil.getStringDecoded(json,"site_name");
    post.published=JSONUtil.getString(json,"date");
  }
  String likeDate=JSONUtil.getString(json,"date_liked");
  if (!TextUtils.isEmpty(likeDate)) {
    post.timestamp=DateTimeUtils.iso8601ToTimestamp(likeDate);
  }
 else {
    post.timestamp=DateTimeUtils.iso8601ToTimestamp(post.published);
  }
  if (!post.hasFeaturedImage()) {
    JSONObject jsonMedia=json.optJSONObject("featured_media");
    if (jsonMedia != null) {
      String mediaUrl=JSONUtil.getString(jsonMedia,"uri");
      if (!TextUtils.isEmpty(mediaUrl)) {
        String type=JSONUtil.getString(jsonMedia,"type");
        boolean isVideo=(type != null && type.equals("video"));
        if (isVideo) {
          post.featuredVideo=mediaUrl;
        }
 else {
          post.featuredImage=mediaUrl;
        }
      }
    }
    if (!post.hasFeaturedImage()) {
      post.featuredImage=findFeaturedImage(post.text);
    }
  }
  if (!post.hasTitle() && post.hasExcerpt()) {
    post.title=extractTitle(post.excerpt,50);
  }
  if (post.hasTitle() && post.title.contains("<") && post.title.contains(">")) {
    post.title=HtmlUtils.stripHtml(post.title);
  }
  assignTagsFromJson(post,json.optJSONObject("tags"));
  JSONObject jsonSite=JSONUtil.getJSONChild(json,"meta/data/site");
  if (jsonSite != null) {
    post.blogId=jsonSite.optInt("ID");
    post.blogName=JSONUtil.getString(jsonSite,"name");
    post.setBlogUrl(JSONUtil.getString(jsonSite,"URL"));
    post.isPrivate=JSONUtil.getBool(jsonSite,"is_private");
  }
  return post;
}
