{
  if (json == null) {
    throw new IllegalArgumentException("null json post");
  }
  ReaderPost post=new ReaderPost();
  post.postId=json.optLong("ID");
  post.blogId=json.optLong("site_ID");
  post.feedId=json.optLong("feed_ID");
  post.feedItemId=json.optLong("feed_item_ID");
  if (json.has("pseudo_ID")) {
    post.pseudoId=JSONUtils.getString(json,"pseudo_ID");
  }
 else {
    post.pseudoId=JSONUtils.getString(json,"global_ID");
  }
  post.excerpt=HtmlUtils.fastStripHtml(JSONUtils.getString(json,"excerpt")).trim();
  post.text=JSONUtils.getString(json,"content");
  post.title=JSONUtils.getStringDecoded(json,"title");
  post.url=JSONUtils.getString(json,"URL");
  post.shortUrl=JSONUtils.getString(json,"short_URL");
  post.setBlogUrl(JSONUtils.getString(json,"site_URL"));
  post.numLikes=json.optInt("like_count");
  post.wordCount=json.optInt("word_count");
  post.isLikedByCurrentUser=JSONUtils.getBool(json,"i_like");
  post.isFollowedByCurrentUser=JSONUtils.getBool(json,"is_following");
  post.isExternal=JSONUtils.getBool(json,"is_external");
  post.isPrivate=JSONUtils.getBool(json,"site_is_private");
  post.isJetpack=JSONUtils.getBool(json,"is_jetpack");
  JSONObject jsonDiscussion=json.optJSONObject("discussion");
  if (jsonDiscussion != null) {
    post.isCommentsOpen=JSONUtils.getBool(jsonDiscussion,"comments_open");
    post.numReplies=jsonDiscussion.optInt("comment_count");
  }
 else {
    post.isCommentsOpen=JSONUtils.getBool(json,"comments_open");
    post.numReplies=json.optInt("comment_count");
  }
  assignAuthorFromJson(post,json.optJSONObject("author"));
  post.featuredImage=JSONUtils.getString(json,"featured_image");
  post.blogName=JSONUtils.getStringDecoded(json,"site_name");
  post.published=JSONUtils.getString(json,"date");
  String likeDate=JSONUtils.getString(json,"date_liked");
  if (!TextUtils.isEmpty(likeDate)) {
    post.timestamp=DateTimeUtils.iso8601ToTimestamp(likeDate);
  }
 else {
    post.timestamp=DateTimeUtils.iso8601ToTimestamp(post.published);
  }
  if (json.has("score")) {
    double score=json.optDouble("score");
    post.timestamp=Math.round(score);
  }
  if (!post.hasTitle() && post.hasExcerpt()) {
    post.title=extractTitle(post.excerpt,50);
  }
  if (post.hasTitle() && post.title.contains("<") && post.title.contains(">")) {
    post.title=HtmlUtils.stripHtml(post.title);
  }
  assignTagsFromJson(post,json.optJSONObject("tags"));
  JSONObject jsonAttachments=json.optJSONObject("attachments");
  if (jsonAttachments != null && jsonAttachments.length() > 0) {
    post.attachmentsJson=jsonAttachments.toString();
  }
  JSONObject jsonSite=JSONUtils.getJSONChild(json,"meta/data/site");
  if (jsonSite != null) {
    post.blogId=jsonSite.optInt("ID");
    post.blogName=JSONUtils.getString(jsonSite,"name");
    post.setBlogUrl(JSONUtils.getString(jsonSite,"URL"));
    post.isPrivate=JSONUtils.getBool(jsonSite,"is_private");
    post.isJetpack=JSONUtils.getBool(jsonSite,"jetpack");
  }
  JSONObject jsonDiscover=json.optJSONObject("discover_metadata");
  if (jsonDiscover != null) {
    post.setDiscoverJson(jsonDiscover.toString());
  }
  assignXpostIdsFromJson(post,json.optJSONArray("metadata"));
  if (!post.hasFeaturedImage()) {
    JSONObject jsonMedia=json.optJSONObject("featured_media");
    if (jsonMedia != null && jsonMedia.length() > 0) {
      String mediaUrl=JSONUtils.getString(jsonMedia,"uri");
      if (!TextUtils.isEmpty(mediaUrl)) {
        String type=JSONUtils.getString(jsonMedia,"type");
        boolean isVideo=(type != null && type.equals("video"));
        if (isVideo) {
          post.featuredVideo=mediaUrl;
        }
 else {
          post.featuredImage=mediaUrl;
        }
      }
    }
  }
  if (!post.hasFeaturedImage() && post.hasAttachments()) {
    post.featuredImage=new ImageSizeMap(post.attachmentsJson).getLargestImageUrl(ReaderConstants.MIN_FEATURED_IMAGE_WIDTH);
  }
  if (!post.hasFeaturedImage() && post.hasText() && post.text.contains("<img")) {
    post.featuredImage=new ReaderImageScanner(post.text,post.isPrivate).getLargestImage(ReaderConstants.MIN_FEATURED_IMAGE_WIDTH);
  }
  return post;
}
