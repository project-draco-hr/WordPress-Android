{
  final ViewGroup rootView=(ViewGroup)inflater.inflate(R.layout.people_list_fragment,container,false);
  mFilteredRecyclerView=(FilteredRecyclerView)rootView.findViewById(R.id.filtered_recycler_view);
  mFilteredRecyclerView.addItemDecoration(new PeopleItemDecoration(getActivity(),R.drawable.people_list_divider));
  mFilteredRecyclerView.setFilterListener(new FilteredRecyclerView.FilterListener(){
    @Override public List<FilterCriteria> onLoadFilterCriteriaOptions(    boolean refresh){
      ArrayList<FilterCriteria> list=new ArrayList<>();
      Collections.addAll(list,PeopleListFilter.values());
      return list;
    }
    @Override public void onLoadFilterCriteriaOptionsAsync(    FilteredRecyclerView.FilterCriteriaAsyncLoaderListener listener,    boolean refresh){
    }
    @Override public FilterCriteria onRecallSelection(){
      return null;
    }
    @Override public void onLoadData(){
    }
    @Override public void onFilterSelected(    int position,    FilterCriteria criteria){
    }
    @Override public String onShowEmptyViewMessage(    EmptyViewMessageType emptyViewMsgType){
      return null;
    }
    @Override public void onShowCustomEmptyView(    EmptyViewMessageType emptyViewMsgType){
    }
  }
);
  mProgress=(ProgressBar)rootView.findViewById(R.id.progress_footer);
  mProgress.setVisibility(View.GONE);
  return rootView;
}
