{
  LoggedInputStream loggedInputStream=null;
  try {
    preparePostMethod(method,params,tempFile);
    HttpResponse response=mClient.execute(mPostMethod);
    if (response.getStatusLine() == null)     throw new XMLRPCException("HTTP Status code is missing!");
    int statusCode=response.getStatusLine().getStatusCode();
    HttpEntity entity=response.getEntity();
    if (entity == null) {
      throw new XMLRPCException("HTTP status code: " + statusCode + " was returned AND no response from the server.");
    }
    if (statusCode == HttpStatus.SC_OK) {
      loggedInputStream=new LoggedInputStream(entity.getContent());
      return XMLRPCClient.parseXMLRPCResponse(loggedInputStream,entity);
    }
    String statusLineReasonPhrase=StringUtils.notNullStr(response.getStatusLine().getReasonPhrase());
    try {
      String responseString=EntityUtils.toString(entity,"UTF-8");
      if (TextUtils.isEmpty(responseString)) {
        AppLog.e(T.API,"No HTTP error document document from the server");
      }
 else {
        AppLog.e(T.API,"HTTP error document received from the server: " + responseString);
      }
      if (statusCode == HttpStatus.SC_INTERNAL_SERVER_ERROR) {
        if (!TextUtils.isEmpty(responseString) && responseString.contains("php fatal error") && responseString.contains("bytes exhausted")) {
          String newErrorMsg;
          if (method.equals("wp.uploadFile")) {
            newErrorMsg="The server doesn't have enough memory to upload this file. You may need to increase the PHP memory limit on your site.";
          }
 else {
            newErrorMsg="The server doesn't have enough memory to fulfill the request. You may need to increase the PHP memory limit on your site.";
          }
          throw new XMLRPCException(statusLineReasonPhrase + ".\n\n" + newErrorMsg);
        }
      }
    }
 catch (    Exception e) {
    }
    throw new XMLRPCException("HTTP status code: " + statusCode + " was returned. "+ statusLineReasonPhrase);
  }
 catch (  XMLRPCFault e) {
    if (loggedInputStream != null) {
      AppLog.w(T.API,"Response document received from the server: " + loggedInputStream.getResponseDocument());
    }
switch (e.getFaultCode()) {
case 403:
      broadcastAction(WordPress.BROADCAST_ACTION_XMLRPC_INVALID_CREDENTIALS);
    break;
case 425:
  broadcastAction(WordPress.BROADCAST_ACTION_XMLRPC_TWO_FA_AUTH);
break;
default :
break;
}
throw e;
}
catch (XmlPullParserException e) {
AppLog.e(T.API,"Error while parsing the XML-RPC response document received from the server.",e);
if (loggedInputStream != null) {
AppLog.e(T.API,"Response document received from the server: " + loggedInputStream.getResponseDocument());
}
checkXMLRPCErrorMessage(e);
throw e;
}
catch (NumberFormatException e) {
AppLog.e(T.API,"Error while parsing the XML-RPC response document received from the server.",e);
if (loggedInputStream != null) {
AppLog.e(T.API,"Response document received from the server: " + loggedInputStream.getResponseDocument());
}
throw new XMLRPCException("The response received contains an invalid number. " + e.getMessage());
}
catch (XMLRPCException e) {
if (loggedInputStream != null) {
AppLog.e(T.API,"Response document received from the server: " + loggedInputStream.getResponseDocument());
}
checkXMLRPCErrorMessage(e);
throw e;
}
catch (SSLHandshakeException e) {
if (mIsWpcom) {
AppLog.e(T.NUX,"SSLHandshakeException failed. Erroneous SSL certificate detected on wordpress.com");
}
 else {
AppLog.w(T.NUX,"SSLHandshakeException failed. Erroneous SSL certificate detected.");
broadcastAction(WordPress.BROADCAST_ACTION_XMLRPC_INVALID_SSL_CERTIFICATE);
}
throw e;
}
catch (SSLPeerUnverifiedException e) {
if (mIsWpcom) {
AppLog.e(T.NUX,"SSLPeerUnverifiedException failed. Erroneous SSL certificate detected on wordpress.com");
}
 else {
AppLog.w(T.NUX,"SSLPeerUnverifiedException failed. Erroneous SSL certificate detected.");
broadcastAction(WordPress.BROADCAST_ACTION_XMLRPC_INVALID_SSL_CERTIFICATE);
}
throw e;
}
 finally {
deleteTempFile(method,tempFile);
try {
if (loggedInputStream != null) {
loggedInputStream.close();
}
}
 catch (Exception e) {
}
}
}
