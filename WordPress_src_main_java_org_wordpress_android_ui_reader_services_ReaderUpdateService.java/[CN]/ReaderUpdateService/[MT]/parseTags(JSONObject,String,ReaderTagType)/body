{
  ReaderTagList topics=new ReaderTagList();
  if (jsonObject == null) {
    return topics;
  }
  JSONObject jsonTopics=jsonObject.optJSONObject(name);
  if (jsonTopics == null) {
    return topics;
  }
  Iterator<String> it=jsonTopics.keys();
  while (it.hasNext()) {
    String internalName=it.next();
    JSONObject jsonTopic=jsonTopics.optJSONObject(internalName);
    if (jsonTopic != null) {
      String tagTitle=JSONUtils.getStringDecoded(jsonTopic,"title");
      String tagSlug;
      if (jsonTopic.has("slug")) {
        tagSlug=JSONUtils.getStringDecoded(jsonTopic,"slug");
      }
 else {
        tagSlug=tagTitle;
      }
      String endpoint=JSONUtils.getString(jsonTopic,"URL");
      if (tagType == ReaderTagType.DEFAULT && endpoint.contains("/read/list/")) {
        topics.add(new ReaderTag(tagSlug,tagTitle,endpoint,ReaderTagType.CUSTOM_LIST));
      }
 else {
        topics.add(new ReaderTag(tagSlug,tagTitle,endpoint,tagType));
      }
    }
  }
  return topics;
}
