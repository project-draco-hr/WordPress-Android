{
  final Object[] callParams={mBlog.getRemoteBlogId(),mUsernamePreference.getText(),mPasswordPreference.getText(),params};
  final boolean newCreds=!callParams[1].equals(mRemoteUsername) || !callParams[2].equals(mRemotePassword);
  if (!newCreds && (params == null || params.size() == 0))   return;
  final XMLRPCCallback callback=new XMLRPCCallback(){
    @Override public void onSuccess(    long id,    final Object result){
      if (newCreds) {
        mBlog.setUsername(callParams[1].toString());
        mBlog.setPassword(callParams[2].toString());
      }
      if (result instanceof Map) {
        handleResponseToSelfHostedSettingsSetRequest((Map)result);
      }
 else       if (!newCreds) {
        handleSettingsSetError("Invalid response object (expected Map): " + result,false);
      }
    }
    @Override public void onFailure(    long id,    final Exception error){
      if (isAdded()) {
        getActivity().runOnUiThread(new Runnable(){
          @Override public void run(){
            handleSettingsSetError(error.toString(),newCreds);
          }
        }
);
      }
    }
  }
;
  instantiateInterface().callAsync(callback,ApiHelper.Methods.SET_OPTIONS,callParams);
}
