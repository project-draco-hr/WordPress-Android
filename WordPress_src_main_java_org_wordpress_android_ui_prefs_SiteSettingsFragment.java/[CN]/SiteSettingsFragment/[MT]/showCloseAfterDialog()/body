{
  getNumberPickerDialog(true,mSiteSettings.getCloseAfter() > 0,new CompoundButton.OnCheckedChangeListener(){
    @Override public void onCheckedChanged(    CompoundButton buttonView,    boolean isChecked){
      mSwitchChecked=isChecked;
    }
  }
,R.string.close_after_switch_text,R.string.close_after_description,R.string.close_after_header,1,getResources().getInteger(R.integer.close_after_limit),mSiteSettings.getCloseAfter(),R.string.site_settings_close_after_dialog_title,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      if (mSiteSettings.getCloseAfter() != mNumberPicker.getValue()) {
        if (mSwitchChecked) {
          onPreferenceChange(mCloseAfterPref,mNumberPicker.getValue());
        }
 else {
          onPreferenceChange(mCloseAfterPref,0);
        }
      }
    }
  }
,null);
  mNumberPicker.setFormatter(new NumberPicker.Formatter(){
    @Override public String format(    int value){
      return getResources().getQuantityString(R.plurals.days_quantity,value,value);
    }
  }
);
}
