{
  if (newValue == null)   return false;
  if (preference == mTitlePref) {
    mSiteSettings.setTitle(newValue.toString());
    changeEditTextPreferenceValue(mTitlePref,mSiteSettings.getTitle());
  }
 else   if (preference == mTaglinePref) {
    mSiteSettings.setTagline(newValue.toString());
    changeEditTextPreferenceValue(mTaglinePref,mSiteSettings.getTagline());
  }
 else   if (preference == mAddressPref) {
    mSiteSettings.setAddress(newValue.toString());
    changeEditTextPreferenceValue(mAddressPref,mSiteSettings.getAddress());
  }
 else   if (preference == mLanguagePref) {
    mSiteSettings.setLanguageCode(newValue.toString());
    changeLanguageValue(mSiteSettings.getLanguageCode());
  }
 else   if (preference == mPrivacyPref) {
    mSiteSettings.setPrivacy(Integer.valueOf(newValue.toString()));
    setDetailListPreferenceValue(mPrivacyPref,String.valueOf(mSiteSettings.getPrivacy()),getPrivacySummary(mSiteSettings.getPrivacy()));
  }
 else   if (preference == mAllowCommentsPref || preference == mAllowCommentsNested) {
    setAllowComments((Boolean)newValue);
  }
 else   if (preference == mSendPingbacksPref || preference == mSendPingbacksNested) {
    setSendPingbacks((Boolean)newValue);
  }
 else   if (preference == mReceivePingbacksPref || preference == mReceivePingbacksNested) {
    setReceivePingbacks((Boolean)newValue);
  }
 else   if (preference == mCloseAfterPref) {
    mSiteSettings.setCloseAfter(Integer.parseInt(newValue.toString()));
    mCloseAfterPref.setSummary(getCloseAfterSummary(mSiteSettings.getCloseAfter()));
  }
 else   if (preference == mSortByPref) {
    mSiteSettings.setCommentSorting(Integer.parseInt(newValue.toString()));
    setDetailListPreferenceValue(mSortByPref,newValue.toString(),getSortOrderSummary(mSiteSettings.getCommentSorting()));
  }
 else   if (preference == mThreadingPref) {
    mSiteSettings.setThreadingLevels(Integer.parseInt(newValue.toString()));
    setDetailListPreferenceValue(mThreadingPref,newValue.toString(),getThreadingSummary(mSiteSettings.getThreadingLevels()));
  }
 else   if (preference == mPagingPref) {
    mSiteSettings.setPagingCount(Integer.parseInt(newValue.toString()));
    mPagingPref.setSummary(getPagingSummary(mSiteSettings.getPagingCount()));
  }
 else   if (preference == mIdentityRequiredPreference) {
    mSiteSettings.setIdentityRequired((Boolean)newValue);
  }
 else   if (preference == mUserAccountRequiredPref) {
    mSiteSettings.setUserAccountRequired((Boolean)newValue);
  }
 else   if (preference == mWhitelistPref) {
    updateWhitelistSettings(Integer.parseInt(newValue.toString()));
  }
 else   if (preference == mMultipleLinksPref) {
    mSiteSettings.setMultipleLinks(Integer.parseInt(newValue.toString()));
    mMultipleLinksPref.setSummary(getResources().getQuantityString(R.plurals.multiple_links_summary,mSiteSettings.getMultipleLinks(),mSiteSettings.getMultipleLinks()));
  }
 else   if (preference == mUsernamePref) {
    mSiteSettings.setUsername(newValue.toString());
    changeEditTextPreferenceValue(mUsernamePref,mSiteSettings.getUsername());
  }
 else   if (preference == mPasswordPref) {
    mSiteSettings.setPassword(newValue.toString());
    changeEditTextPreferenceValue(mPasswordPref,mSiteSettings.getPassword());
  }
 else   if (preference == mLocationPref) {
    mSiteSettings.setLocation((Boolean)newValue);
  }
 else   if (preference == mCategoryPref) {
    mSiteSettings.setDefaultCategory(Integer.parseInt(newValue.toString()));
    setDetailListPreferenceValue(mCategoryPref,newValue.toString(),mSiteSettings.getDefaultCategoryForDisplay());
  }
 else   if (preference == mFormatPref) {
    mSiteSettings.setDefaultFormat(newValue.toString());
    setDetailListPreferenceValue(mFormatPref,newValue.toString(),mSiteSettings.getDefaultPostFormatDisplay());
  }
 else {
    return false;
  }
  return true;
}
