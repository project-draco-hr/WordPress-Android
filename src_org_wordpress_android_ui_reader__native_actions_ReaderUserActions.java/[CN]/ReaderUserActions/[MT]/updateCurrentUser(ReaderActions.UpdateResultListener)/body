{
  final ReaderUser localUser=ReaderUserTable.getCurrentUser();
  com.wordpress.rest.RestRequest.Listener listener=new RestRequest.Listener(){
    @Override public void onResponse(    JSONObject jsonObject){
      final ReaderActions.UpdateResult result;
      ReaderUser serverUser=ReaderUser.fromJson(jsonObject);
      if (serverUser != null) {
        if (serverUser.isSameUser(localUser)) {
          result=ReaderActions.UpdateResult.UNCHANGED;
        }
 else {
          ReaderUserTable.addOrUpdateUser(serverUser);
          ReaderPrefs.setCurrentUserId(serverUser.userId);
          result=ReaderActions.UpdateResult.CHANGED;
        }
      }
 else {
        result=ReaderActions.UpdateResult.FAILED;
      }
      if (resultListener != null)       resultListener.onUpdateResult(result);
    }
  }
;
  RestRequest.ErrorListener errorListener=new RestRequest.ErrorListener(){
    @Override public void onErrorResponse(    VolleyError volleyError){
      ReaderLog.e(volleyError);
      if (resultListener != null)       resultListener.onUpdateResult(ReaderActions.UpdateResult.FAILED);
    }
  }
;
  WordPress.restClient.get("me",listener,errorListener);
}
