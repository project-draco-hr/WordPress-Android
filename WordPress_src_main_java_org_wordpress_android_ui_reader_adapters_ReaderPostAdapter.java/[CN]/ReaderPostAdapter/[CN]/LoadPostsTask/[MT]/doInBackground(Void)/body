{
  int numExisting;
switch (getPostListType()) {
case TAG_PREVIEW:
case TAG_FOLLOWED:
    allPosts=ReaderPostTable.getPostsWithTag(mCurrentTag,MAX_ROWS,EXCLUDE_TEXT_COLUMN);
  numExisting=ReaderPostTable.getNumPostsWithTag(mCurrentTag);
break;
case BLOG_PREVIEW:
if (mCurrentFeedId != 0) {
allPosts=ReaderPostTable.getPostsInFeed(mCurrentFeedId,MAX_ROWS,EXCLUDE_TEXT_COLUMN);
numExisting=ReaderPostTable.getNumPostsInFeed(mCurrentFeedId);
}
 else {
allPosts=ReaderPostTable.getPostsInBlog(mCurrentBlogId,MAX_ROWS,EXCLUDE_TEXT_COLUMN);
numExisting=ReaderPostTable.getNumPostsInBlog(mCurrentBlogId);
}
break;
case SEARCH_RESULTS:
ReaderTag searchTag=ReaderSearchService.getTagForSearchQuery(mCurrentSearchQuery);
allPosts=ReaderPostTable.getPostsWithTag(searchTag,MAX_ROWS,EXCLUDE_TEXT_COLUMN);
numExisting=ReaderPostTable.getNumPostsWithTag(searchTag);
break;
default :
return false;
}
if (mPosts.isSameList(allPosts)) {
return false;
}
mCanRequestMorePosts=(numExisting < ReaderConstants.READER_MAX_POSTS_TO_DISPLAY);
mGapMarkerPosition=getGapMarkerPosition();
return true;
}
