{
  final int numExisting;
  final ReaderPostList tmpPosts;
switch (getPostListType()) {
case TAG_PREVIEW:
case TAG_FOLLOWED:
    tmpPosts=ReaderPostTable.getPostsWithTag(mCurrentTag,MAX_ROWS,EXCLUDE_TEXT_COLUMN);
  numExisting=ReaderPostTable.getNumPostsWithTag(mCurrentTag);
break;
case BLOG_PREVIEW:
tmpPosts=ReaderPostTable.getPostsInBlog(mCurrentBlogId,MAX_ROWS,EXCLUDE_TEXT_COLUMN);
numExisting=ReaderPostTable.getNumPostsInBlog(mCurrentBlogId);
break;
default :
return false;
}
mCanRequestMorePosts=(numExisting < ReaderConstants.READER_MAX_POSTS_TO_DISPLAY);
for (ReaderPost post : tmpPosts) {
int index=mPosts.indexOfPost(post);
if (index == -1) {
newPosts.add(post);
}
}
if (newPosts.size() == 0) {
return false;
}
String currentTagName=(mCurrentTag != null ? mCurrentTag.getTagName() : "");
for (ReaderPost post : newPosts) {
post.getPostAvatarForDisplay(mAvatarSz);
post.getFeaturedImageForDisplay(mPhotonWidth,mPhotonHeight);
post.getDatePublished();
post.getTagForDisplay(currentTagName);
}
return true;
}
