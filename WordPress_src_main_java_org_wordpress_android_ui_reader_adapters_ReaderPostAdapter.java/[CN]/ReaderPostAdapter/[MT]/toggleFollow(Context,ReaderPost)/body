{
  if (post == null || !NetworkUtils.checkConnection(context)) {
    return;
  }
  boolean isCurrentlyFollowed=ReaderPostTable.isPostFollowed(post);
  final boolean isAskingToFollow=!isCurrentlyFollowed;
  ReaderActions.ActionListener actionListener=new ReaderActions.ActionListener(){
    @Override public void onActionResult(    boolean succeeded){
      if (!succeeded) {
        int resId=(isAskingToFollow ? R.string.reader_toast_err_follow_blog : R.string.reader_toast_err_unfollow_blog);
        ToastUtils.showToast(context,resId);
        setFollowStatusForBlog(post.blogId,!isAskingToFollow);
      }
    }
  }
;
  if (!ReaderBlogActions.followBlogForPost(post,isAskingToFollow,null)) {
    ToastUtils.showToast(context,R.string.reader_toast_err_generic);
    return;
  }
  setFollowStatusForBlog(post.blogId,isAskingToFollow);
}
