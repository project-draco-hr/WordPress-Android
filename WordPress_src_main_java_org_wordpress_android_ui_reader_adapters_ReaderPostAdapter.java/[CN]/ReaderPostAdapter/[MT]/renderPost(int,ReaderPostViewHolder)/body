{
  final ReaderPost post=getItem(position);
  ReaderTypes.ReaderPostListType postListType=getPostListType();
  holder.txtTitle.setText(post.getTitle());
  String timestamp=DateTimeUtils.javaDateToTimeSpan(post.getDatePublished());
  if (post.hasAuthorName()) {
    holder.txtDateline.setText(post.getAuthorName() + ReaderConstants.UNICODE_BULLET_WITH_SPACE + timestamp);
  }
 else   if (post.hasBlogName()) {
    holder.txtDateline.setText(post.getBlogName() + ReaderConstants.UNICODE_BULLET_WITH_SPACE + timestamp);
  }
 else {
    holder.txtDateline.setText(timestamp);
  }
  if (post.hasPostAvatar()) {
    holder.imgAvatar.setImageUrl(post.getPostAvatarForDisplay(mAvatarSzTiny),WPNetworkImageView.ImageType.AVATAR);
  }
 else {
    holder.imgAvatar.showDefaultGravatarImage();
  }
  if (!hasSiteHeader()) {
    holder.layoutPostHeader.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View view){
        ReaderActivityLauncher.showReaderBlogPreview(view.getContext(),post);
      }
    }
);
  }
  if (post.hasBlogUrl()) {
    String imageUrl=GravatarUtils.blavatarFromUrl(post.getBlogUrl(),mAvatarSzMedium);
    holder.imgBlavatar.setImageUrl(imageUrl,WPNetworkImageView.ImageType.BLAVATAR);
    holder.txtDomain.setText(UrlUtils.getHost(post.getBlogUrl()));
  }
 else {
    holder.imgBlavatar.showDefaultBlavatarImage();
    holder.txtDomain.setText(null);
  }
  if (post.hasBlogName()) {
    holder.txtBlogName.setText(post.getBlogName());
  }
 else   if (post.hasAuthorName()) {
    holder.txtBlogName.setText(post.getAuthorName());
  }
 else {
    holder.txtBlogName.setText(null);
  }
  if (post.hasExcerpt()) {
    holder.txtText.setVisibility(View.VISIBLE);
    holder.txtText.setText(post.getExcerpt());
  }
 else {
    holder.txtText.setVisibility(View.GONE);
  }
  final int titleMargin;
  if (post.hasFeaturedImage()) {
    final String imageUrl=post.getFeaturedImageForDisplay(mPhotonWidth,mPhotonHeight);
    holder.imgFeatured.setImageUrl(imageUrl,WPNetworkImageView.ImageType.PHOTO);
    holder.imgFeatured.setVisibility(View.VISIBLE);
    titleMargin=mMarginLarge;
  }
 else   if (post.hasFeaturedVideo() && WPNetworkImageView.canShowVideoThumbnail(post.getFeaturedVideo())) {
    holder.imgFeatured.setVideoUrl(post.postId,post.getFeaturedVideo());
    holder.imgFeatured.setVisibility(View.VISIBLE);
    titleMargin=mMarginLarge;
  }
 else {
    holder.imgFeatured.setVisibility(View.GONE);
    titleMargin=(holder.layoutPostHeader.getVisibility() == View.VISIBLE ? 0 : mMarginLarge);
  }
  LinearLayout.LayoutParams params=(LinearLayout.LayoutParams)holder.txtTitle.getLayoutParams();
  params.topMargin=titleMargin;
  final String tagToDisplay=(mCurrentTag != null ? post.getTagForDisplay(mCurrentTag.getTagSlug()) : null);
  if (!TextUtils.isEmpty(tagToDisplay)) {
    holder.txtTag.setText(ReaderUtils.makeHashTag(tagToDisplay));
    holder.txtTag.setVisibility(View.VISIBLE);
    holder.txtTag.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        if (mOnTagSelectedListener != null) {
          mOnTagSelectedListener.onTagSelected(tagToDisplay);
        }
      }
    }
);
  }
 else {
    holder.txtTag.setVisibility(View.GONE);
    holder.txtTag.setOnClickListener(null);
  }
  showLikes(holder,post);
  showComments(holder,post);
  if (!mIsLoggedOutReader && postListType == ReaderTypes.ReaderPostListType.TAG_FOLLOWED) {
    holder.imgMore.setVisibility(View.VISIBLE);
    holder.imgMore.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View view){
        if (mOnPostPopupListener != null) {
          mOnPostPopupListener.onShowPostPopup(view,post);
        }
      }
    }
);
  }
 else {
    holder.imgMore.setVisibility(View.GONE);
    holder.imgMore.setOnClickListener(null);
  }
  boolean showFollowButton=!hasSiteHeader() && !mIsLoggedOutReader && !isFollowedSites();
  if (showFollowButton) {
    holder.followButton.setIsFollowed(post.isFollowedByCurrentUser);
    holder.followButton.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View view){
        toggleFollow(view.getContext(),post);
      }
    }
);
    holder.followButton.setVisibility(View.VISIBLE);
  }
 else {
    holder.followButton.setVisibility(View.GONE);
  }
  if (post.isDiscoverPost()) {
    showDiscoverData(holder,post);
  }
 else {
    holder.layoutDiscover.setVisibility(View.GONE);
  }
  if (post.hasAttachments() || post.isGallery()) {
    holder.thumbnailStrip.loadThumbnails(post.blogId,post.postId,post.isPrivate);
  }
 else {
    holder.thumbnailStrip.setVisibility(View.GONE);
  }
  holder.cardView.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (mPostSelectedListener != null) {
        mPostSelectedListener.onPostSelected(post);
      }
    }
  }
);
  checkLoadMore(position);
}
