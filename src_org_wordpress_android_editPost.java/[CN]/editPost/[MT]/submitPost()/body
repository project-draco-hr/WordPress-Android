{
  EditText titleET=(EditText)findViewById(R.id.title);
  String title=titleET.getText().toString();
  EditText contentET=(EditText)findViewById(R.id.content);
  String content;
  if (localDraft) {
    content=escapeUtils.unescapeHtml(Html.toHtml(contentET.getText()));
  }
 else {
    content=contentET.getText().toString();
  }
  content=StringHelper.convertHTMLTagsForUpload(content);
  Boolean publishThis=false;
  String imageContent="";
  boolean mediaError=false;
  if (selectedImageCtr > 0) {
    String state=android.os.Environment.getExternalStorageState();
    if (!state.equals(android.os.Environment.MEDIA_MOUNTED)) {
      mediaError=true;
    }
 else {
      imageContent=uploadImages();
    }
  }
  String res="";
  if (!mediaError) {
    Thread updateDialog=new Thread(){
      public void run(){
        postingDialog.setMessage(getResources().getText((isPage) ? R.string.page_attempt_upload : R.string.post_attempt_upload));
      }
    }
;
    this.runOnUiThread(updateDialog);
    boolean enteredSettings=checkSettings();
    if (!enteredSettings) {
      res="invalidSettings";
    }
 else     if (title.equals("") || (content.equals("") && selectedImageIDs.size() == 0)) {
      res="emptyFields";
    }
 else {
      WordPressDB settingsDB=new WordPressDB(this);
      Vector<?> categoriesVector=settingsDB.loadSettings(this,id);
      String sURL="";
      if (categoriesVector.get(0).toString().contains("xmlrpc.php")) {
        sURL=categoriesVector.get(0).toString();
      }
 else {
        sURL=categoriesVector.get(0).toString() + "xmlrpc.php";
      }
      String sUsername=categoriesVector.get(2).toString();
      String sPassword=categoriesVector.get(3).toString();
      String sHttpuser=categoriesVector.get(4).toString();
      String sHttppassword=categoriesVector.get(5).toString();
      String sImagePlacement=categoriesVector.get(6).toString();
      String sCenterThumbnailString=categoriesVector.get(7).toString();
      if (sCenterThumbnailString.equals("1")) {
        centerThumbnail=true;
      }
      Spinner spinner=(Spinner)findViewById(R.id.status);
      int selectedStatus=spinner.getSelectedItemPosition();
      String status="";
switch (selectedStatus) {
case 0:
        status="draft";
      break;
case 1:
    if (isPage) {
      status="private";
    }
 else {
      status="pending";
    }
  break;
case 2:
if (isPage) {
  status="publish";
}
 else {
  status="private";
}
break;
case 3:
status="publish";
break;
}
Map<String,Object> contentStruct=new HashMap<String,Object>();
if (imageContent != "") {
if (sImagePlacement.equals("Above Text")) {
content=imageContent + content;
}
 else {
content=content + imageContent;
}
}
EditText passwordET=(EditText)findViewById(R.id.post_password);
String wpPassword=passwordET.getText().toString();
contentStruct.put("post_type","post");
contentStruct.put("title",title);
contentStruct.put("description",content);
contentStruct.put("post_status",status);
TextView tvPubDate=(TextView)findViewById(R.id.pubDate);
String pubDate=tvPubDate.getText().toString();
if (!pubDate.equals(getResources().getText(R.string.immediately))) {
SimpleDateFormat sdf=new SimpleDateFormat("MMM dd, yyyy hh:mm a");
Date d=new Date();
try {
d=sdf.parse(pubDate);
contentStruct.put("date_created_gmt",d);
}
 catch (ParseException e) {
e.printStackTrace();
}
catch (java.text.ParseException e) {
e.printStackTrace();
}
}
if (wpPassword != null && !"".equals(wpPassword)) {
contentStruct.put("wp_password",wpPassword);
}
if (!isPage) {
EditText tagsET=(EditText)findViewById(R.id.tags);
String tags=tagsET.getText().toString();
String[] theCategories=categories.split(",");
if (tags != "") {
contentStruct.put("mt_keywords",tags);
}
if (theCategories.length > 0) {
contentStruct.put("categories",theCategories);
}
}
client=new XMLRPCClient(sURL,sHttpuser,sHttppassword);
Object[] params={postID,sUsername,sPassword,contentStruct,publishThis};
Object result=null;
boolean success=false;
try {
result=(Object)client.call("metaWeblog.editPost",params);
success=true;
}
 catch (final XMLRPCException e) {
Thread prompt=new Thread(){
public void run(){
dismissDialog(ID_DIALOG_POSTING);
AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(editPost.this);
dialogBuilder.setTitle(getResources().getText(R.string.connection_error));
dialogBuilder.setMessage(e.getMessage());
dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int whichButton){
}
}
);
dialogBuilder.setCancelable(true);
if (!isFinishing()) {
dialogBuilder.create().show();
}
}
}
;
this.runOnUiThread(prompt);
}
if (success) {
newID=result.toString();
res="OK";
}
 else {
res="FAIL";
}
}
}
 else {
Thread prompt=new Thread(){
public void run(){
dismissDialog(ID_DIALOG_POSTING);
AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(editPost.this);
dialogBuilder.setTitle(getResources().getText(R.string.sdcard_title));
dialogBuilder.setMessage(getResources().getText(R.string.sdcard_message));
dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int whichButton){
}
}
);
dialogBuilder.setCancelable(true);
dialogBuilder.create().show();
}
}
;
this.runOnUiThread(prompt);
res="mediaError";
}
return res;
}
