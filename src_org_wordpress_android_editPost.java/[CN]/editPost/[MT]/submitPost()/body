{
  EditText titleET=(EditText)findViewById(R.id.title);
  String title=titleET.getText().toString();
  EditText contentET=(EditText)findViewById(R.id.content);
  String content;
  if (localDraft) {
    content=escapeUtils.unescapeHtml(Html.toHtml(contentET.getText()));
  }
 else {
    content=contentET.getText().toString();
  }
  content=StringHelper.convertHTMLTagsForUpload(content);
  CheckBox publishCB=(CheckBox)findViewById(R.id.publish);
  Boolean publishThis=false;
  String imageContent="";
  boolean mediaError=false;
  if (selectedImageCtr > 0) {
    String state=android.os.Environment.getExternalStorageState();
    if (!state.equals(android.os.Environment.MEDIA_MOUNTED)) {
      mediaError=true;
    }
 else {
      imageContent=uploadImages();
    }
  }
  String res="";
  if (!mediaError) {
    Thread updateDialog=new Thread(){
      public void run(){
        postingDialog.setMessage(getResources().getText((isPage) ? R.string.page_attempt_upload : R.string.post_attempt_upload));
      }
    }
;
    this.runOnUiThread(updateDialog);
    boolean enteredSettings=checkSettings();
    if (!enteredSettings) {
      res="invalidSettings";
    }
 else     if (title.equals("") || (content.equals("") && selectedImageIDs.size() == 0)) {
      res="emptyFields";
    }
 else {
      WordPressDB settingsDB=new WordPressDB(this);
      Vector<?> categoriesVector=settingsDB.loadSettings(this,id);
      String sURL="";
      if (categoriesVector.get(0).toString().contains("xmlrpc.php")) {
        sURL=categoriesVector.get(0).toString();
      }
 else {
        sURL=categoriesVector.get(0).toString() + "xmlrpc.php";
      }
      String sUsername=categoriesVector.get(2).toString();
      String sPassword=categoriesVector.get(3).toString();
      String sImagePlacement=categoriesVector.get(4).toString();
      String sCenterThumbnailString=categoriesVector.get(5).toString();
      if (sCenterThumbnailString.equals("1")) {
        centerThumbnail=true;
      }
      if (publishCB.isChecked()) {
        publishThis=true;
      }
      Map<String,Object> contentStruct=new HashMap<String,Object>();
      if (imageContent != "") {
        if (sImagePlacement.equals("Above Text")) {
          content=imageContent + content;
        }
 else {
          content=content + imageContent;
        }
      }
      contentStruct.put("post_type","post");
      contentStruct.put("title",title);
      contentStruct.put("description",content);
      if (!isPage) {
        EditText tagsET=(EditText)findViewById(R.id.tags);
        String tags=tagsET.getText().toString();
        String[] theCategories=categories.split(",");
        if (tags != "") {
          contentStruct.put("mt_keywords",tags);
        }
        if (theCategories.length > 0) {
          contentStruct.put("categories",theCategories);
        }
      }
      client=new XMLRPCClient(sURL);
      Object[] params={postID,sUsername,sPassword,contentStruct,publishThis};
      Object result=null;
      boolean success=false;
      try {
        result=(Object)client.call("metaWeblog.editPost",params);
        success=true;
      }
 catch (      final XMLRPCException e) {
        Thread prompt=new Thread(){
          public void run(){
            dismissDialog(ID_DIALOG_POSTING);
            AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(editPost.this);
            dialogBuilder.setTitle(getResources().getText(R.string.connection_error));
            dialogBuilder.setMessage(e.getMessage());
            dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
              public void onClick(              DialogInterface dialog,              int whichButton){
              }
            }
);
            dialogBuilder.setCancelable(true);
            dialogBuilder.create().show();
          }
        }
;
        this.runOnUiThread(prompt);
      }
      if (success) {
        newID=result.toString();
        res="OK";
      }
 else {
        res="FAIL";
      }
    }
  }
 else {
    Thread prompt=new Thread(){
      public void run(){
        dismissDialog(ID_DIALOG_POSTING);
        AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(editPost.this);
        dialogBuilder.setTitle(getResources().getText(R.string.sdcard_title));
        dialogBuilder.setMessage(getResources().getText(R.string.sdcard_message));
        dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int whichButton){
          }
        }
);
        dialogBuilder.setCancelable(true);
        dialogBuilder.create().show();
      }
    }
;
    this.runOnUiThread(prompt);
    res="mediaError";
  }
  return res;
}
