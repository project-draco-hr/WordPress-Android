{
  EditText titleET=(EditText)findViewById(R.id.title);
  String title=titleET.getText().toString();
  EditText contentET=(EditText)findViewById(R.id.content);
  String content=contentET.getText().toString();
  String tags="";
  if (!isPage) {
    EditText tagsET=(EditText)findViewById(R.id.tags);
    tags=tagsET.getText().toString();
  }
  CheckBox publishCB=(CheckBox)findViewById(R.id.publish);
  boolean publishThis=false;
  String images="";
  String categories="";
  boolean success=false;
  Vector<Object> myPostVector=new Vector<Object>();
  String res=null;
  boolean enteredSettings=checkSettings();
  if (!enteredSettings) {
    res="invalidSettings";
  }
 else   if (title.equals("") || content.equals("")) {
    res="emptyFields";
  }
 else {
    for (int it=0; it < selectedImageCtr; it++) {
      images+=selectedImageIDs.get(it).toString() + ",";
    }
    if (!isPage) {
      Spinner spinner=(Spinner)findViewById(R.id.spinner1);
      int itemCount=spinner.getCount();
      String selectedCategory="Uncategorized";
      if (itemCount != 0) {
        selectedCategory=spinner.getSelectedItem().toString();
      }
      String[] theCategories=new String[selectedCategories.size()];
      int catSize=selectedCategories.size();
      for (int i=0; i < selectedCategories.size(); i++) {
        categories+=selectedCategories.get(i).toString() + ",";
      }
    }
    if (publishCB.isChecked()) {
      publishThis=true;
    }
    localDraftsDB lDraftsDB=new localDraftsDB(this);
    if (isPage) {
      success=lDraftsDB.updateLocalPageDraft(this,id,postID,title,content,images,publishThis);
    }
 else {
      success=lDraftsDB.updateLocalDraft(this,id,postID,title,content,images,tags,categories,publishThis);
    }
  }
  return success;
}
