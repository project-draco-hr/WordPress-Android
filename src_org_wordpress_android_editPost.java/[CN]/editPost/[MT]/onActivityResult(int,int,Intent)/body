{
  super.onActivityResult(requestCode,resultCode,data);
  if (data != null || requestCode == 4) {
    Bundle extras;
switch (requestCode) {
case 0:
      extras=data.getExtras();
    break;
case 1:
  break;
case 2:
extras=data.getExtras();
String linkText=extras.getString("linkText");
if (linkText.equals("http://") != true) {
if (linkText.equals("CANCEL") != true) {
EditText contentText=(EditText)findViewById(R.id.content);
int selectionStart=contentText.getSelectionStart();
int selectionEnd=contentText.getSelectionEnd();
if (selectionStart > selectionEnd) {
  int temp=selectionEnd;
  selectionEnd=selectionStart;
  selectionStart=temp;
}
Spannable str=contentText.getText();
str.setSpan(new URLSpan(linkText),selectionStart,selectionEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
}
}
break;
case 3:
Uri imageUri=data.getData();
String imgPath=imageUri.toString();
addMedia(imgPath,imageUri);
break;
case 4:
if (resultCode == Activity.RESULT_OK) {
File f=null;
int sdk_int=0;
try {
sdk_int=Integer.valueOf(android.os.Build.VERSION.SDK);
}
 catch (Exception e1) {
sdk_int=3;
}
if (data != null && (sdk_int <= 4)) {
try {
String[] projection;
Uri imagePath=data.getData();
projection=new String[]{Images.Media._ID,Images.Media.DATA,Images.Media.MIME_TYPE,Images.Media.ORIENTATION};
Cursor cur=this.managedQuery(imagePath,projection,null,null,null);
String thumbData="";
if (cur.moveToFirst()) {
int dataColumn;
dataColumn=cur.getColumnIndex(Images.Media.DATA);
thumbData=cur.getString(dataColumn);
f=new File(thumbData);
}
}
 catch (Exception e) {
AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(editPost.this);
dialogBuilder.setTitle(getResources().getText(R.string.error));
dialogBuilder.setMessage(e.getMessage());
dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int whichButton){
}
}
);
dialogBuilder.setCancelable(true);
dialogBuilder.create().show();
}
}
 else {
f=new File(SD_CARD_TEMP_DIR);
}
try {
Uri capturedImage=Uri.parse(android.provider.MediaStore.Images.Media.insertImage(getContentResolver(),f.getAbsolutePath(),null,null));
Log.i("camera","Selected image: " + capturedImage.toString());
f.delete();
addMedia(capturedImage.toString(),capturedImage);
}
 catch (FileNotFoundException e) {
AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(editPost.this);
dialogBuilder.setTitle(getResources().getText(R.string.file_error));
dialogBuilder.setMessage(getResources().getText(R.string.file_error_encountered));
dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int whichButton){
}
}
);
dialogBuilder.setCancelable(true);
dialogBuilder.create().show();
}
}
 else {
AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(editPost.this);
dialogBuilder.setTitle(getResources().getText(R.string.file_error));
dialogBuilder.setMessage(getResources().getText(R.string.file_error_encountered));
dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int whichButton){
}
}
);
dialogBuilder.setCancelable(true);
dialogBuilder.create().show();
}
break;
case 5:
extras=data.getExtras();
String cats=extras.getString("selectedCategories");
categories=cats;
TextView selectedCategoriesTV=(TextView)findViewById(R.id.selectedCategories);
selectedCategoriesTV.setText(getResources().getText(R.string.selected_categories) + " " + cats);
break;
case 6:
Uri videoUri=data.getData();
String videoPath=videoUri.toString();
addMedia(videoPath,videoUri);
break;
case 7:
if (resultCode == Activity.RESULT_OK) {
Uri capturedVideo=data.getData();
addMedia(capturedVideo.toString(),capturedVideo);
}
 else {
AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(editPost.this);
dialogBuilder.setTitle(getResources().getText(R.string.file_error));
dialogBuilder.setMessage(getResources().getText(R.string.file_error_encountered));
dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int whichButton){
}
}
);
dialogBuilder.setCancelable(true);
dialogBuilder.create().show();
}
break;
}
}
}
