{
  if (mCommentAdapter == null) {
    ReaderActions.DataLoadedListener dataLoadedListener=new ReaderActions.DataLoadedListener(){
      @Override public void onDataLoaded(      boolean isEmpty){
        if (isAdded()) {
          mCommentFooter.setVisibility(isEmpty && mNote == null ? View.GONE : View.VISIBLE);
          if (mListState != null) {
            if (!isEmpty) {
              getListView().onRestoreInstanceState(mListState);
            }
            mListState=null;
          }
          if (mTopMostCommentId != 0) {
            restoreTopmostComment();
          }
          if (mNote != null && !isEmpty && mListView.getVisibility() == View.INVISIBLE) {
            scrollToCommentId(mNote.getCommentId());
            mListView.setAlpha(0.0f);
            mListView.setVisibility(View.VISIBLE);
            mListView.animate().alpha(1.0f).setStartDelay(300).setListener(new Animator.AnimatorListener(){
              @Override public void onAnimationStart(              Animator animation){
              }
              @Override public void onAnimationEnd(              Animator animation){
                mHeaderDetail.setAlpha(0.0f);
                mHeaderDetail.setVisibility(View.VISIBLE);
                mHeaderDetail.animate().alpha(1.0f).setStartDelay(300);
                if (mNotificationCommentView != null) {
                  mNotificationCommentView.setVisibility(View.GONE);
                }
              }
              @Override public void onAnimationCancel(              Animator animation){
              }
              @Override public void onAnimationRepeat(              Animator animation){
              }
            }
);
          }
        }
      }
    }
;
    ReaderCommentAdapter.RequestReplyListener replyListener=new ReaderCommentAdapter.RequestReplyListener(){
      @Override public void onRequestReply(      long commentId){
        if (!mIsAddCommentBoxShowing) {
          showAddCommentBox(commentId);
        }
 else {
          hideAddCommentBox();
        }
      }
    }
;
    ReaderActions.DataRequestedListener dataRequestedListener=new ReaderActions.DataRequestedListener(){
      @Override public void onRequestData(){
        if (!mIsUpdatingComments) {
          AppLog.i(T.READER,"reader post detail > requesting newer comments");
          updateComments(true);
        }
      }
    }
;
    mCommentAdapter=new ReaderCommentAdapter(getActivity(),mPost,replyListener,dataLoadedListener,dataRequestedListener);
  }
  return mCommentAdapter;
}
