{
  if (!isAdded() || !hasPost()) {
    return;
  }
  final boolean isAskingToFollow=!mPost.isFollowedByCurrentUser;
  final ReaderFollowButton followButton=(ReaderFollowButton)getView().findViewById(R.id.follow_button);
  followButton.setIsFollowed(isAskingToFollow,true);
  ReaderActions.ActionListener actionListener=new ReaderActions.ActionListener(){
    @Override public void onActionResult(    boolean succeeded){
      if (!succeeded && isAdded()) {
        followButton.setIsFollowed(!isAskingToFollow,false);
        int resId=(isAskingToFollow ? R.string.reader_toast_err_follow_blog : R.string.reader_toast_err_unfollow_blog);
        ToastUtils.showToast(getActivity(),resId);
      }
    }
  }
;
  if (ReaderBlogActions.performFollowAction(mPost,isAskingToFollow,actionListener)) {
    mPost=ReaderPostTable.getPost(mBlogId,mPostId,false);
  }
}
