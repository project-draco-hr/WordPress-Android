{
  AppLog.d(T.READER,"reader post detail > refreshLikes");
  if (!isAdded() || !hasPost() || !mPost.isWP()|| !mPost.isLikesEnabled) {
    return;
  }
  new Thread(){
    @Override public void run(){
      if (getView() == null) {
        return;
      }
      final ImageView imgBtnLike=(ImageView)getView().findViewById(R.id.image_like_btn);
      final TextView txtLikeCount=(TextView)mLayoutLikes.findViewById(R.id.text_like_count);
      final int marginExtraSmall=getResources().getDimensionPixelSize(R.dimen.margin_extra_small);
      final int marginLarge=getResources().getDimensionPixelSize(R.dimen.margin_large);
      final int likeAvatarSize=getResources().getDimensionPixelSize(R.dimen.avatar_sz_small);
      final int likeAvatarSizeWithMargin=likeAvatarSize + (marginExtraSmall * 2);
      final int displayWidth=DisplayUtils.getDisplayPixelWidth(getActivity());
      final int spaceForAvatars=displayWidth - (marginLarge * 2);
      final int maxAvatars=spaceForAvatars / likeAvatarSizeWithMargin;
      ReaderUserIdList avatarIds=ReaderLikeTable.getLikesForPost(mPost);
      final ArrayList<String> avatars=ReaderUserTable.getAvatarUrls(avatarIds,maxAvatars,likeAvatarSize);
      mHandler.post(new Runnable(){
        public void run(){
          if (!isAdded()) {
            return;
          }
          imgBtnLike.setSelected(mPost.isLikedByCurrentUser);
          imgBtnLike.setOnClickListener(new View.OnClickListener(){
            @Override public void onClick(            View view){
              togglePostLike(mPost,imgBtnLike);
            }
          }
);
          if (avatars.size() == 0 || mPost.numLikes == 0) {
            if (mLayoutLikes.getVisibility() != View.GONE) {
              ReaderAnim.fadeOut(mLayoutLikes,ReaderAnim.Duration.SHORT);
            }
            return;
          }
          if (mPost.isLikedByCurrentUser) {
            if (mPost.numLikes == 1) {
              txtLikeCount.setText(R.string.reader_likes_only_you);
            }
 else {
              txtLikeCount.setText(mPost.numLikes == 2 ? getString(R.string.reader_likes_you_and_one) : getString(R.string.reader_likes_you_and_multi,mPost.numLikes - 1));
            }
          }
 else {
            txtLikeCount.setText(mPost.numLikes == 1 ? getString(R.string.reader_likes_one) : getString(R.string.reader_likes_multi,mPost.numLikes));
          }
          mLayoutLikes.setOnClickListener(new View.OnClickListener(){
            @Override public void onClick(            View view){
              ReaderActivityLauncher.showReaderLikingUsers(getActivity(),mPost);
            }
          }
);
          if (mLayoutLikes.getVisibility() != View.VISIBLE) {
            ReaderAnim.fadeIn(mLayoutLikes,ReaderAnim.Duration.SHORT);
          }
          mLikingUsersView.showLikingAvatars(avatars);
        }
      }
);
    }
  }
.start();
}
