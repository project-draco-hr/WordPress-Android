{
  mIsPostTaskRunning=false;
  if (!isAdded()) {
    return;
  }
  if (!result) {
    if (!mHasAlreadyRequestedPost) {
      mHasAlreadyRequestedPost=true;
      AppLog.i(T.READER,"reader post detail > post not found, requesting it");
      requestPost();
    }
    return;
  }
  mScrollView.setVisibility(View.VISIBLE);
  mRenderer=new ReaderPostRenderer(mReaderWebView,mPost);
  mRenderer.beginRender();
  txtTitle.setText(mPost.hasTitle() ? mPost.getTitle() : getString(R.string.reader_untitled_post));
  View.OnClickListener blogPreviewListener=new View.OnClickListener(){
    @Override public void onClick(    View v){
      ReaderActivityLauncher.showReaderBlogPreview(v.getContext(),mPost);
    }
  }
;
  txtBlogName.setOnClickListener(blogPreviewListener);
  imgAvatar.setOnClickListener(blogPreviewListener);
  txtAuthorName.setOnClickListener(blogPreviewListener);
  if (mPost.hasBlogName()) {
    txtBlogName.setText(mPost.getBlogName());
    txtBlogName.setVisibility(View.VISIBLE);
  }
 else   if (mPost.hasBlogUrl()) {
    txtBlogName.setText(UrlUtils.getDomainFromUrl(mPost.getBlogUrl()));
    txtBlogName.setVisibility(View.VISIBLE);
  }
 else {
    txtBlogName.setVisibility(View.GONE);
  }
  if (mPost.hasAuthorName()) {
    txtAuthorName.setText(mPost.getAuthorName());
    imgAvatar.setImageUrl(mPost.getPostAvatarForDisplay(mResourceVars.extraSmallAvatarSizePx),WPNetworkImageView.ImageType.AVATAR);
    txtAuthorName.setVisibility(View.VISIBLE);
    imgAvatar.setVisibility(View.VISIBLE);
  }
 else {
    txtAuthorName.setVisibility(View.GONE);
    imgAvatar.setVisibility(View.GONE);
  }
  txtDate.setText(DateTimeUtils.javaDateToTimeSpan(mPost.getDatePublished()));
  if (canBlockBlog()) {
    imgMore.setVisibility(View.VISIBLE);
    imgMore.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View view){
        if (mOnPopupListener != null) {
          mOnPopupListener.onShowPostPopup(view,mPost);
        }
      }
    }
);
  }
 else {
    imgMore.setVisibility(View.GONE);
  }
  if (mLayoutHeader.getVisibility() != View.VISIBLE) {
    AniUtils.fadeIn(mLayoutHeader,AniUtils.Duration.MEDIUM);
  }
  refreshIconCounts(false);
}
