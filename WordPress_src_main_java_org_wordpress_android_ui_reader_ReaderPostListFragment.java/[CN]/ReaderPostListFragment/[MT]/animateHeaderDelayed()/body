{
  if (!isAdded()) {
    return;
  }
  final ViewGroup header=(ViewGroup)getView().findViewById(R.id.frame_header);
  if (header == null || header.getVisibility() == View.VISIBLE) {
    return;
  }
  header.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
    @Override public void onGlobalLayout(){
      header.getViewTreeObserver().removeGlobalOnLayoutListener(this);
      new Handler().postDelayed(new Runnable(){
        @Override public void run(){
          if (!isAdded()) {
            return;
          }
          header.setVisibility(View.VISIBLE);
          if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            @SuppressLint({"NewApi","LocalSuppress"}) Animator animator=ViewAnimationUtils.createCircularReveal(header,header.getWidth() / 2,0,0,(float)Math.hypot(header.getWidth(),header.getHeight()));
            animator.setInterpolator(new AccelerateDecelerateInterpolator());
            animator.start();
          }
 else {
            AniUtils.startAnimation(header,R.anim.reader_top_bar_in);
          }
        }
      }
,250);
    }
  }
);
}
