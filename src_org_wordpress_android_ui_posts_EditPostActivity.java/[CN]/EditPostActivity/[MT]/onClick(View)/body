{
  int id=v.getId();
  if (id == R.id.bold) {
    formatBtnClick(mBoldToggleButton,"strong");
    trackFormatButtonClick(WPMobileStatsUtil.StatsPropertyPostDetailClickedKeyboardToolbarBoldButton);
  }
 else   if (id == R.id.em) {
    formatBtnClick(mEmToggleButton,"em");
    trackFormatButtonClick(WPMobileStatsUtil.StatsPropertyPostDetailClickedKeyboardToolbarItalicButton);
  }
 else   if (id == R.id.underline) {
    formatBtnClick(mUnderlineToggleButton,"u");
    trackFormatButtonClick(WPMobileStatsUtil.StatsPropertyPostDetailClickedKeyboardToolbarUnderlineButton);
  }
 else   if (id == R.id.strike) {
    formatBtnClick(mStrikeToggleButton,"strike");
    trackFormatButtonClick(WPMobileStatsUtil.StatsPropertyPostDetailClickedKeyboardToolbarDelButton);
  }
 else   if (id == R.id.bquote) {
    formatBtnClick(mBquoteToggleButton,"blockquote");
    trackFormatButtonClick(WPMobileStatsUtil.StatsPropertyPostDetailClickedKeyboardToolbarBlockquoteButton);
  }
 else   if (id == R.id.more) {
    mSelectionEnd=mContentEditText.getSelectionEnd();
    Editable str=mContentEditText.getText();
    str.insert(mSelectionEnd,"\n<!--more-->\n");
    trackFormatButtonClick(WPMobileStatsUtil.StatsPropertyPostDetailClickedKeyboardToolbarMoreButton);
  }
 else   if (id == R.id.link) {
    mSelectionStart=mContentEditText.getSelectionStart();
    mStyleStart=mSelectionStart;
    mSelectionEnd=mContentEditText.getSelectionEnd();
    if (mSelectionStart > mSelectionEnd) {
      int temp=mSelectionEnd;
      mSelectionEnd=mSelectionStart;
      mSelectionStart=temp;
    }
    Intent i=new Intent(EditPostActivity.this,EditLinkActivity.class);
    if (mSelectionEnd > mSelectionStart) {
      String selectedText=mContentEditText.getText().subSequence(mSelectionStart,mSelectionEnd).toString();
      i.putExtra("selectedText",selectedText);
    }
    trackFormatButtonClick(WPMobileStatsUtil.StatsPropertyPostDetailClickedKeyboardToolbarLinkButton);
    startActivityForResult(i,ACTIVITY_REQUEST_CODE_CREATE_LINK);
  }
 else   if (id == R.id.addPictureButton) {
    mAddPictureButton.performLongClick();
    trackFormatButtonClick(WPMobileStatsUtil.StatsPropertyPostDetailClickedKeyboardToolbarPictureButton);
  }
 else   if (id == R.id.pubDateButton) {
    WPMobileStatsUtil.flagProperty(mStatEventEditorClosed,WPMobileStatsUtil.StatsPropertyPostDetailSettingsClickedScheduleFor);
    showDialog(ID_DIALOG_DATE);
  }
 else   if (id == R.id.selectCategories) {
    Bundle bundle=new Bundle();
    bundle.putInt("id",mBlogID);
    if (mCategories.size() > 0) {
      bundle.putSerializable("categories",new HashSet<String>(mCategories));
    }
    Intent categoriesIntent=new Intent(EditPostActivity.this,SelectCategoriesActivity.class);
    categoriesIntent.putExtras(bundle);
    startActivityForResult(categoriesIntent,ACTIVITY_REQUEST_CODE_SELECT_CATEGORIES);
  }
 else   if (id == R.id.categoryButton) {
    trackFormatButtonClick(WPMobileStatsUtil.StatsPropertyPostDetailClickedShowCategories);
    onCategoryButtonClick(v);
  }
 else   if (id == R.id.post) {
    if (mPost.isUploaded()) {
      WPMobileStatsUtil.flagProperty(mStatEventEditorClosed,WPMobileStatsUtil.StatsPropertyPostDetailClickedUpdate);
    }
 else {
      WPMobileStatsUtil.flagProperty(mStatEventEditorClosed,WPMobileStatsUtil.StatsPropertyPostDetailClickedPublish);
    }
    if (mAutoSaveHandler != null)     mAutoSaveHandler.removeCallbacks(autoSaveRunnable);
    if (savePost(false,false)) {
      if (mPost.isUploaded() || !mPost.getPost_status().equals("localdraft")) {
        if (mQuickMediaType >= 0) {
          if (mQuickMediaType == Constants.QUICK_POST_PHOTO_CAMERA || mQuickMediaType == Constants.QUICK_POST_PHOTO_LIBRARY)           mPost.setQuickPostType("QuickPhoto");
 else           if (mQuickMediaType == Constants.QUICK_POST_VIDEO_CAMERA || mQuickMediaType == Constants.QUICK_POST_VIDEO_LIBRARY)           mPost.setQuickPostType("QuickVideo");
        }
        WordPress.currentPost=mPost;
        PostUploadService.addPostToUpload(mPost);
        startService(new Intent(this,PostUploadService.class));
      }
      finish();
    }
  }
 else   if (id == R.id.viewMap) {
    Double latitude=0.0;
    try {
      latitude=mCurrentLocation.getLatitude();
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
    if (latitude != 0.0) {
      WPMobileStatsUtil.flagProperty(mStatEventEditorClosed,WPMobileStatsUtil.StatsPropertyPostDetailSettingsClickedAddLocation);
      String uri="geo:" + latitude + ","+ mCurrentLocation.getLongitude();
      startActivity(new Intent(android.content.Intent.ACTION_VIEW,Uri.parse(uri)));
    }
 else {
      Toast.makeText(EditPostActivity.this,getResources().getText(R.string.location_toast),Toast.LENGTH_SHORT).show();
    }
  }
 else   if (id == R.id.updateLocation) {
    getLocation();
    WPMobileStatsUtil.flagProperty(mStatEventEditorClosed,WPMobileStatsUtil.StatsPropertyPostDetailSettingsClickedUpdateLocation);
  }
 else   if (id == R.id.removeLocation) {
    removeLocation();
    WPMobileStatsUtil.flagProperty(mStatEventEditorClosed,WPMobileStatsUtil.StatsPropertyPostDetailSettingsClickedRemoveLocation);
  }
}
