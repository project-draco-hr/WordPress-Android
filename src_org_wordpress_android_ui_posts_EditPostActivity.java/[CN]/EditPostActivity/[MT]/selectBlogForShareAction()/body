{
  mIsNew=true;
  List<Map<String,Object>> accounts=WordPress.wpDB.getAccounts();
  if (accounts.size() > 0) {
    final String blogNames[]=new String[accounts.size()];
    final int accountIDs[]=new int[accounts.size()];
    for (int i=0; i < accounts.size(); i++) {
      Map<String,Object> curHash=accounts.get(i);
      try {
        blogNames[i]=EscapeUtils.unescapeHtml(curHash.get("blogName").toString());
      }
 catch (      Exception e) {
        blogNames[i]=curHash.get("url").toString();
      }
      accountIDs[i]=(Integer)curHash.get("id");
      try {
        mBlog=new Blog(accountIDs[i]);
      }
 catch (      Exception e) {
        showBlogErrorAndFinish();
        return false;
      }
    }
    if (accounts.size() > 1) {
      AlertDialog.Builder builder=new AlertDialog.Builder(EditPostActivity.this);
      builder.setCancelable(false);
      builder.setTitle(getResources().getText(R.string.select_a_blog));
      builder.setItems(blogNames,new DialogInterface.OnClickListener(){
        public void onClick(        DialogInterface dialog,        int item){
          mBlogID=accountIDs[item];
          try {
            mBlog=new Blog(mBlogID);
          }
 catch (          Exception e) {
            showBlogErrorAndFinish();
          }
          WordPress.currentBlog=mBlog;
          WordPress.wpDB.updateLastBlogId(WordPress.currentBlog.getId());
          mAccountName=blogNames[item];
          setTitle(EscapeUtils.unescapeHtml(mAccountName) + " - " + getResources().getText((mIsPage) ? R.string.new_page : R.string.new_post));
        }
      }
);
      AlertDialog alert=builder.create();
      alert.show();
    }
 else {
      mBlogID=accountIDs[0];
      try {
        mBlog=new Blog(mBlogID);
      }
 catch (      Exception e) {
        showBlogErrorAndFinish();
        return false;
      }
      WordPress.currentBlog=mBlog;
      WordPress.wpDB.updateLastBlogId(WordPress.currentBlog.getId());
      mAccountName=blogNames[0];
      setTitle(EscapeUtils.unescapeHtml(mAccountName) + " - " + getResources().getText((mIsPage) ? R.string.new_page : R.string.new_post));
    }
    ;
    return true;
  }
 else {
    Toast.makeText(getApplicationContext(),getResources().getText(R.string.no_account),Toast.LENGTH_LONG).show();
    startActivity(new Intent(this,NewAccountActivity.class));
    finish();
    return false;
  }
}
