{
  final String mediaId=imageSpan.getMediaId();
  final String thumbnailUrl=imageSpan.getThumbnailURL();
  if (thumbnailUrl == null || mediaId == null)   return;
  WordPress.imageLoader.get(thumbnailUrl,new ImageListener(){
    @Override public void onErrorResponse(    VolleyError arg0){
    }
    @Override public void onResponse(    ImageContainer container,    boolean arg1){
      if (container.getBitmap() != null) {
        Bitmap bitmap=container.getBitmap();
        Editable s=mContentEditText.getText();
        WPImageSpan[] spans=s.getSpans(0,s.length(),WPImageSpan.class);
        if (spans.length != 0) {
          for (          WPImageSpan is : spans) {
            if (mediaId != null && mediaId.equals(is.getMediaId()) && !is.isNetworkImageLoaded()) {
              int spanStart=s.getSpanStart(is);
              int spanEnd=s.getSpanEnd(is);
              WPImageSpan imageSpan=new WPImageSpan(EditPostActivity.this,bitmap,is.getImageSource());
              imageSpan.setCaption(is.getCaption());
              imageSpan.setDescription(is.getDescription());
              imageSpan.setFeatured(is.isFeatured());
              imageSpan.setFeaturedInPost(is.isFeaturedInPost());
              imageSpan.setHeight(is.getHeight());
              imageSpan.setHorizontalAlignment(is.getHorizontalAlignment());
              imageSpan.setMediaId(is.getMediaId());
              imageSpan.setMimeType(is.getMimeType());
              imageSpan.setTitle(is.getTitle());
              imageSpan.setVideo(is.isVideo());
              imageSpan.setWidth(is.getWidth());
              imageSpan.setNetworkImageLoaded(true);
              s.removeSpan(is);
              s.setSpan(imageSpan,spanStart,spanEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
              break;
            }
          }
        }
      }
    }
  }
,0,0);
}
