{
  MediaGallery gallery=(MediaGallery)data.getSerializableExtra(MediaGalleryActivity.RESULT_MEDIA_GALLERY);
  if (gallery == null) {
    gallery=new MediaGallery();
  }
  int selectionStart=mContentEditText.getSelectionStart();
  int selectionEnd=mContentEditText.getSelectionEnd();
  if (selectionStart > selectionEnd) {
    int temp=selectionEnd;
    selectionEnd=selectionStart;
    selectionStart=temp;
  }
  Editable s=mContentEditText.getText();
  MediaGalleryImageSpan is=new MediaGalleryImageSpan(EditPostActivity.this,gallery);
  int line=0, column=0;
  try {
    line=mContentEditText.getLayout().getLineForOffset(selectionStart);
    column=mContentEditText.getSelectionStart() - mContentEditText.getLayout().getLineStart(line);
  }
 catch (  Exception ex) {
  }
  MediaGalleryImageSpan[] gallerySpans=s.getSpans(selectionStart,selectionEnd,MediaGalleryImageSpan.class);
  if (gallerySpans.length != 0) {
    for (int i=0; i < gallerySpans.length; i++) {
      if (gallerySpans[i].getMediaGallery().getUniqueId() == gallery.getUniqueId()) {
        gallerySpans[i].setMediaGallery(gallery);
        int spanStart=s.getSpanStart(gallerySpans[i]);
        int spanEnd=s.getSpanEnd(gallerySpans[i]);
        s.setSpan(gallerySpans[i],spanStart,spanEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
      }
    }
    return;
  }
 else   if (column != 0) {
    s.insert(selectionEnd,"\n");
    selectionStart=selectionStart + 1;
    selectionEnd=selectionEnd + 1;
  }
  s.insert(selectionStart," ");
  s.setSpan(is,selectionStart,selectionEnd + 1,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
  AlignmentSpan.Standard as=new AlignmentSpan.Standard(Layout.Alignment.ALIGN_CENTER);
  s.setSpan(as,selectionStart,selectionEnd + 1,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
  s.insert(selectionEnd + 1,"\n\n");
  try {
    mContentEditText.setSelection(s.length());
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
