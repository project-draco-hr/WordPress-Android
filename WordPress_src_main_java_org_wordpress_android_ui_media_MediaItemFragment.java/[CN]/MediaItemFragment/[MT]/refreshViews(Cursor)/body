{
  if (!isAdded() || !cursor.moveToFirst()) {
    return;
  }
  String state=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_UPLOAD_STATE));
  mIsLocal=MediaUtils.isLocalFile(state);
  if (mIsLocal && getActivity() != null) {
    getActivity().invalidateOptionsMenu();
  }
  String caption=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_CAPTION));
  if (TextUtils.isEmpty(caption)) {
    mCaptionView.setVisibility(View.GONE);
  }
 else {
    mCaptionView.setText(caption);
    mCaptionView.setVisibility(View.VISIBLE);
  }
  String desc=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_DESCRIPTION));
  if (TextUtils.isEmpty(desc)) {
    mDescriptionView.setVisibility(View.GONE);
  }
 else {
    mDescriptionView.setText(desc);
    mDescriptionView.setVisibility(View.VISIBLE);
  }
  String date=MediaUtils.getDate(cursor.getLong(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_DATE_CREATED_GMT)));
  if (mIsLocal) {
    mDateView.setText(getResources().getString(R.string.media_details_added_on) + " " + date);
  }
 else {
    mDateView.setText(getResources().getString(R.string.media_details_uploaded_on) + " " + date);
  }
  final String fileURL=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_URL));
  String fileName=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_NAME));
  if (mIsLocal || TextUtils.isEmpty(fileURL)) {
    mFileNameView.setText(fileName);
  }
 else {
    String link=String.format("<a href='%1$s'>%2$s</a>",fileURL,fileName);
    mFileNameView.setText(Html.fromHtml(link));
    mFileNameView.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        ReaderActivityLauncher.openUrl(v.getContext(),fileURL);
      }
    }
);
  }
  inflateImageView();
  String dimensions=null;
  String imageUri=TextUtils.isEmpty(fileURL) ? cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_PATH)) : fileURL;
  if (MediaUtils.isValidImage(imageUri)) {
    int mediaWidth=cursor.getInt(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_WIDTH));
    int mediaHeight=cursor.getInt(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_HEIGHT));
    if (mediaWidth > 0 && mediaHeight > 0) {
      dimensions=mediaWidth + " x " + mediaHeight;
    }
    float screenWidth;
    if (this.isInLayout()) {
      screenWidth=((View)mImageView.getParent()).getMeasuredWidth();
    }
 else {
      screenWidth=getActivity().getResources().getDisplayMetrics().widthPixels;
    }
    float screenHeight=getActivity().getResources().getDisplayMetrics().heightPixels;
    if (mediaWidth > screenWidth) {
      mediaHeight=(int)(mediaHeight / (mediaWidth / screenWidth));
      mediaWidth=(int)screenWidth;
    }
 else     if (mediaHeight > screenHeight) {
      mediaWidth=(int)(mediaWidth / (mediaHeight / screenHeight));
      mediaHeight=(int)screenHeight;
    }
    if (mIsLocal) {
      final String filePath=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_PATH));
      loadLocalImage(mImageView,filePath,mediaWidth,mediaHeight);
    }
 else {
      if (WordPress.getCurrentBlog() != null && WordPress.getCurrentBlog().isPhotonCapable()) {
        String thumbnailURL=StringUtils.getPhotonUrl(imageUri,(int)screenWidth);
        ((NetworkImageView)mImageView).setImageUrl(thumbnailURL,mImageLoader);
      }
 else {
        ((NetworkImageView)mImageView).setImageUrl(imageUri + "?w=" + screenWidth,mImageLoader);
      }
    }
    mImageView.setVisibility(View.VISIBLE);
    mImageView.setLayoutParams(new RelativeLayout.LayoutParams(LayoutParams.MATCH_PARENT,mediaHeight));
  }
 else {
    mImageView.setVisibility(View.GONE);
    mProgressView.setVisibility(View.GONE);
  }
  String fileExt=TextUtils.isEmpty(fileURL) ? null : fileURL.replaceAll(".*\\.(\\w+)$","$1").toUpperCase();
  boolean hasDimens=!TextUtils.isEmpty(dimensions);
  boolean hasExt=!TextUtils.isEmpty(fileExt);
  if (hasDimens & hasExt) {
    mFileTypeView.setText(dimensions + " " + fileExt);
    mFileTypeView.setVisibility(View.VISIBLE);
  }
 else   if (hasDimens) {
    mFileTypeView.setText(dimensions);
    mFileTypeView.setVisibility(View.VISIBLE);
  }
 else   if (hasExt) {
    mFileTypeView.setText(fileExt);
    mFileTypeView.setVisibility(View.VISIBLE);
  }
 else {
    mFileTypeView.setVisibility(View.GONE);
  }
}
