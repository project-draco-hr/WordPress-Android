{
  if (!cursor.moveToFirst())   return;
  String state=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_UPLOAD_STATE));
  mIsLocal=MediaUtils.isLocalFile(state);
  if (mIsLocal && getActivity() != null) {
    getActivity().invalidateOptionsMenu();
  }
  mTitleView.setText(cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_TITLE)));
  String caption=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_CAPTION));
  if (caption == null || caption.length() == 0) {
    mCaptionView.setVisibility(View.GONE);
  }
 else {
    mCaptionView.setText(caption);
    mCaptionView.setVisibility(View.VISIBLE);
  }
  String desc=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_DESCRIPTION));
  if (desc == null || desc.length() == 0) {
    mDescriptionView.setVisibility(View.GONE);
  }
 else {
    mDescriptionView.setText(desc);
    mDescriptionView.setVisibility(View.VISIBLE);
  }
  String date=MediaUtils.getDate(cursor.getLong(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_DATE_CREATED_GMT)));
  if (mIsLocal) {
    mDateView.setText(getResources().getString(R.string.media_details_added_on) + " " + date);
  }
 else {
    mDateView.setText(getResources().getString(R.string.media_details_uploaded_on) + " " + date);
  }
  String fileName=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_NAME));
  mFileNameView.setText(getResources().getString(R.string.media_details_file_name) + " " + fileName);
  String fileURL=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_URL));
  if (fileURL != null) {
    String fileType=fileURL.replaceAll(".*\\.(\\w+)$","$1").toUpperCase();
    mFileTypeView.setText(getResources().getString(R.string.media_details_file_type) + " " + fileType);
    mFileTypeView.setVisibility(View.VISIBLE);
    mFileUrlView.setText(getResources().getString(R.string.media_details_file_url) + " " + fileURL);
    mFileUrlView.setVisibility(View.VISIBLE);
  }
 else {
    mFileTypeView.setVisibility(View.GONE);
    mFileUrlView.setVisibility(View.GONE);
  }
  String imageUri=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_URL));
  if (imageUri == null)   imageUri=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_PATH));
  inflateImageView();
  if (MediaUtils.isValidImage(imageUri)) {
    int width=cursor.getInt(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_WIDTH));
    int height=cursor.getInt(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_HEIGHT));
    float screenWidth;
    View parentView=(View)mImageView.getParent();
    if (this.isInLayout()) {
      screenWidth=parentView.getMeasuredWidth();
    }
 else {
      screenWidth=getActivity().getResources().getDisplayMetrics().widthPixels;
    }
    float screenHeight=getActivity().getResources().getDisplayMetrics().heightPixels;
    if (width > 0 && height > 0) {
      String dimensions=width + "x" + height;
      mDimensionsView.setText(getResources().getString(R.string.media_details_dimensions) + " " + dimensions);
      mDimensionsView.setVisibility(View.VISIBLE);
    }
 else {
      mDimensionsView.setVisibility(View.GONE);
    }
    if (width > screenWidth) {
      height=(int)(height / (width / screenWidth));
      width=(int)screenWidth;
    }
 else     if (height > screenHeight) {
      width=(int)(width / (height / screenHeight));
      height=(int)screenHeight;
    }
    if (mIsLocal) {
      final String filePath=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_PATH));
      loadLocalImage(mImageView,filePath,width,height);
    }
 else {
      if (WordPress.getCurrentBlog() != null && WordPress.getCurrentBlog().isPhotonCapable()) {
        String thumbnailURL=StringUtils.getPhotonUrl(imageUri,(int)screenWidth);
        ((NetworkImageView)mImageView).setImageUrl(thumbnailURL,mImageLoader);
      }
 else {
        ((NetworkImageView)mImageView).setImageUrl(imageUri + "?w=" + screenWidth,mImageLoader);
      }
    }
    mImageView.setVisibility(View.VISIBLE);
    mImageView.setLayoutParams(new RelativeLayout.LayoutParams(LayoutParams.MATCH_PARENT,height));
  }
 else {
    mImageView.setVisibility(View.GONE);
    mProgressView.setVisibility(View.GONE);
    mDimensionsView.setVisibility(View.GONE);
  }
}
