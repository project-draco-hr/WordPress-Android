{
  if (!isAdded() || !cursor.moveToFirst()) {
    return;
  }
  String state=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_UPLOAD_STATE));
  mIsLocal=MediaUtils.isLocalFile(state);
  if (mIsLocal && getActivity() != null) {
    getActivity().invalidateOptionsMenu();
  }
  String caption=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_CAPTION));
  if (TextUtils.isEmpty(caption)) {
    mCaptionView.setVisibility(View.GONE);
  }
 else {
    mCaptionView.setText(caption);
    mCaptionView.setVisibility(View.VISIBLE);
  }
  String desc=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_DESCRIPTION));
  if (TextUtils.isEmpty(desc)) {
    mDescriptionView.setVisibility(View.GONE);
  }
 else {
    mDescriptionView.setText(desc);
    mDescriptionView.setVisibility(View.VISIBLE);
  }
  String date=MediaUtils.getDate(cursor.getLong(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_DATE_CREATED_GMT)));
  if (mIsLocal) {
    mDateView.setText(getResources().getString(R.string.media_details_added_on) + " " + date);
  }
 else {
    mDateView.setText(getResources().getString(R.string.media_details_uploaded_on) + " " + date);
  }
  final String fileURL=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_URL));
  final String fileName=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_NAME));
  final String imageUri=TextUtils.isEmpty(fileURL) ? cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_PATH)) : fileURL;
  if (mIsLocal || TextUtils.isEmpty(fileURL)) {
    mFileNameView.setText(fileName);
  }
 else {
    String link=String.format("<a href='%1$s'>%2$s</a>",fileURL,fileName);
    mFileNameView.setText(Html.fromHtml(link));
    mFileNameView.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        ReaderActivityLauncher.openUrl(v.getContext(),fileURL);
      }
    }
);
  }
  float mediaWidth=cursor.getInt(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_WIDTH));
  float mediaHeight=cursor.getInt(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_HEIGHT));
  if (MediaUtils.isValidImage(imageUri)) {
    int screenWidth=DisplayUtils.getDisplayPixelWidth(getActivity());
    int screenHeight=DisplayUtils.getDisplayPixelHeight(getActivity());
    int imageWidth;
    int imageHeight;
    if (mediaWidth == 0 || mediaHeight == 0) {
      imageWidth=screenWidth;
      imageHeight=screenHeight / 2;
    }
 else     if (mediaWidth > mediaHeight) {
      float ratio=mediaHeight / mediaWidth;
      imageWidth=screenWidth;
      imageHeight=(int)(imageWidth * ratio);
    }
 else {
      float ratio=mediaWidth / mediaHeight;
      imageHeight=screenHeight / 2;
      imageWidth=(int)(imageHeight * ratio);
    }
    mImageView.setLayoutParams(new RelativeLayout.LayoutParams(imageWidth,imageHeight));
    if (mIsLocal) {
      final String filePath=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_PATH));
      loadLocalImage(mImageView,filePath,imageWidth,imageHeight);
    }
 else {
      String thumbnailURL;
      if (WordPress.getCurrentBlog() != null && WordPress.getCurrentBlog().isPhotonCapable()) {
        thumbnailURL=StringUtils.getPhotonUrl(imageUri,(int)screenWidth);
      }
 else {
        thumbnailURL=imageUri + "?w=" + imageWidth;
      }
      mImageView.setImageUrl(thumbnailURL,WPNetworkImageView.ImageType.PHOTO);
    }
    mImageView.setVisibility(View.VISIBLE);
  }
 else {
    mImageView.setVisibility(View.GONE);
  }
  String dimens=(mediaWidth > 0 && mediaHeight > 0) ? (int)mediaWidth + " x " + (int)mediaHeight : null;
  String fileExt=TextUtils.isEmpty(fileURL) ? null : fileURL.replaceAll(".*\\.(\\w+)$","$1").toUpperCase();
  boolean hasDimens=!TextUtils.isEmpty(dimens);
  boolean hasExt=!TextUtils.isEmpty(fileExt);
  if (hasDimens & hasExt) {
    mFileTypeView.setText(dimens + " " + fileExt);
    mFileTypeView.setVisibility(View.VISIBLE);
  }
 else   if (hasDimens) {
    mFileTypeView.setText(dimens);
    mFileTypeView.setVisibility(View.VISIBLE);
  }
 else   if (hasExt) {
    mFileTypeView.setText(fileExt);
    mFileTypeView.setVisibility(View.VISIBLE);
  }
 else {
    mFileTypeView.setVisibility(View.GONE);
  }
  if (!mIsLocal && !TextUtils.isEmpty(imageUri)) {
    mImageView.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        Blog blog=WordPress.getCurrentBlog();
        boolean isPrivate=blog != null && blog.isPrivate();
        ReaderActivityLauncher.showReaderPhotoViewer(v.getContext(),imageUri,isPrivate);
      }
    }
);
    mImgBtnCopy.setVisibility(View.VISIBLE);
    mImgBtnCopy.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        copyUrlToClipboard(v.getContext(),imageUri);
      }
    }
);
  }
 else {
    mImgBtnCopy.setVisibility(View.GONE);
    mImageView.setOnClickListener(null);
  }
}
