{
  Spannable s=mContentEditText.getText();
  if (s == null)   return;
  int selectionStart=mContentEditText.getSelectionStart();
  mStyleStart=selectionStart;
  int selectionEnd=mContentEditText.getSelectionEnd();
  if (selectionStart > selectionEnd) {
    int temp=selectionEnd;
    selectionEnd=selectionStart;
    selectionStart=temp;
  }
  if (mPost.isLocalDraft()) {
    if (selectionEnd > selectionStart) {
      Spannable str=mContentEditText.getText();
      if (tag.equals("strong")) {
        StyleSpan[] ss=str.getSpans(selectionStart,selectionEnd,StyleSpan.class);
        boolean exists=false;
        for (        StyleSpan styleSpan : ss) {
          int style=styleSpan.getStyle();
          if (style == Typeface.BOLD) {
            str.removeSpan(styleSpan);
            exists=true;
          }
        }
        if (!exists) {
          str.setSpan(new StyleSpan(android.graphics.Typeface.BOLD),selectionStart,selectionEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }
        toggleButton.setChecked(false);
      }
 else       if (tag.equals("em")) {
        StyleSpan[] ss=str.getSpans(selectionStart,selectionEnd,StyleSpan.class);
        boolean exists=false;
        for (        StyleSpan styleSpan : ss) {
          int style=styleSpan.getStyle();
          if (style == Typeface.ITALIC) {
            str.removeSpan(styleSpan);
            exists=true;
          }
        }
        if (!exists) {
          str.setSpan(new StyleSpan(android.graphics.Typeface.ITALIC),selectionStart,selectionEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }
        toggleButton.setChecked(false);
      }
 else       if (tag.equals("u")) {
        WPUnderlineSpan[] ss=str.getSpans(selectionStart,selectionEnd,WPUnderlineSpan.class);
        boolean exists=false;
        for (        WPUnderlineSpan underlineSpan : ss) {
          str.removeSpan(underlineSpan);
          exists=true;
        }
        if (!exists) {
          str.setSpan(new WPUnderlineSpan(),selectionStart,selectionEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }
        toggleButton.setChecked(false);
      }
 else       if (tag.equals("strike")) {
        StrikethroughSpan[] ss=str.getSpans(selectionStart,selectionEnd,StrikethroughSpan.class);
        boolean exists=false;
        for (        StrikethroughSpan strikethroughSpan : ss) {
          str.removeSpan(strikethroughSpan);
          exists=true;
        }
        if (!exists) {
          str.setSpan(new StrikethroughSpan(),selectionStart,selectionEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }
        toggleButton.setChecked(false);
      }
 else       if (tag.equals("blockquote")) {
        QuoteSpan[] ss=str.getSpans(selectionStart,selectionEnd,QuoteSpan.class);
        boolean exists=false;
        for (        QuoteSpan quoteSpan : ss) {
          str.removeSpan(quoteSpan);
          exists=true;
        }
        if (!exists) {
          str.setSpan(new QuoteSpan(),selectionStart,selectionEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }
        toggleButton.setChecked(false);
      }
    }
 else     if (!toggleButton.isChecked()) {
      if (tag.equals("strong") || tag.equals("em")) {
        StyleSpan[] ss=s.getSpans(mStyleStart - 1,mStyleStart,StyleSpan.class);
        for (        StyleSpan styleSpan : ss) {
          int tagStart;
          int tagEnd;
          if (styleSpan.getStyle() == Typeface.BOLD && tag.equals("strong")) {
            tagStart=s.getSpanStart(styleSpan);
            tagEnd=s.getSpanEnd(styleSpan);
            s.removeSpan(styleSpan);
            s.setSpan(new StyleSpan(Typeface.BOLD),tagStart,tagEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
          }
          if (styleSpan.getStyle() == Typeface.ITALIC && tag.equals("em")) {
            tagStart=s.getSpanStart(styleSpan);
            tagEnd=s.getSpanEnd(styleSpan);
            s.removeSpan(styleSpan);
            s.setSpan(new StyleSpan(Typeface.ITALIC),tagStart,tagEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
          }
        }
      }
 else       if (tag.equals("u")) {
        WPUnderlineSpan[] us=s.getSpans(mStyleStart - 1,mStyleStart,WPUnderlineSpan.class);
        for (        WPUnderlineSpan underlineSpan : us) {
          int tagStart=s.getSpanStart(underlineSpan);
          int tagEnd=s.getSpanEnd(underlineSpan);
          s.removeSpan(underlineSpan);
          s.setSpan(new WPUnderlineSpan(),tagStart,tagEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }
      }
 else       if (tag.equals("strike")) {
        StrikethroughSpan[] ss=s.getSpans(mStyleStart - 1,mStyleStart,StrikethroughSpan.class);
        for (        StrikethroughSpan strikethroughSpan : ss) {
          int tagStart=s.getSpanStart(strikethroughSpan);
          int tagEnd=s.getSpanEnd(strikethroughSpan);
          s.removeSpan(strikethroughSpan);
          s.setSpan(new StrikethroughSpan(),tagStart,tagEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }
      }
 else       if (tag.equals("blockquote")) {
        QuoteSpan[] ss=s.getSpans(mStyleStart - 1,mStyleStart,QuoteSpan.class);
        for (        QuoteSpan quoteSpan : ss) {
          int tagStart=s.getSpanStart(quoteSpan);
          int tagEnd=s.getSpanEnd(quoteSpan);
          s.removeSpan(quoteSpan);
          s.setSpan(new QuoteSpan(),tagStart,tagEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }
      }
    }
  }
 else {
    String startTag="<" + tag + ">";
    String endTag="</" + tag + ">";
    Editable content=mContentEditText.getText();
    if (selectionEnd > selectionStart) {
      content.insert(selectionStart,startTag);
      content.insert(selectionEnd + startTag.length(),endTag);
      toggleButton.setChecked(false);
      mContentEditText.setSelection(selectionEnd + startTag.length() + endTag.length());
    }
 else     if (toggleButton.isChecked()) {
      content.insert(selectionStart,startTag);
      mContentEditText.setSelection(selectionEnd + startTag.length());
    }
 else     if (!toggleButton.isChecked()) {
      content.insert(selectionEnd,endTag);
      mContentEditText.setSelection(selectionEnd + endTag.length());
    }
  }
}
