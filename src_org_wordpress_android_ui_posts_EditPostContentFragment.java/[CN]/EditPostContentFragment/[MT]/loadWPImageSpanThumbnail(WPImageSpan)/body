{
  MediaFile mediaFile=imageSpan.getMediaFile();
  if (mediaFile == null)   return;
  final String mediaId=mediaFile.getMediaId();
  if (mediaId == null)   return;
  String imageURL=null;
  if (WordPress.getCurrentBlog() != null && WordPress.getCurrentBlog().isPhotonCapable()) {
    String photonUrl=imageSpan.getImageSource().toString();
    imageURL=StringUtils.getPhotonUrl(photonUrl,400);
  }
 else {
    imageURL=mediaFile.getThumbnailURL();
  }
  if (imageURL == null)   return;
  WordPress.imageLoader.get(imageURL,new ImageLoader.ImageListener(){
    @Override public void onErrorResponse(    VolleyError arg0){
    }
    @Override public void onResponse(    ImageLoader.ImageContainer container,    boolean arg1){
      if (container.getBitmap() != null) {
        Bitmap resizedBitmap=null;
        try {
          Bitmap bitmap=container.getBitmap();
          ImageHelper ih=new ImageHelper();
          ByteArrayOutputStream stream=new ByteArrayOutputStream();
          bitmap.compress(Bitmap.CompressFormat.PNG,100,stream);
          byte[] bitmapByteArray=stream.toByteArray();
          resizedBitmap=ih.getThumbnailForWPImageSpan(getActivity(),bitmapByteArray,null);
        }
 catch (        OutOfMemoryError er) {
          return;
        }
        if (resizedBitmap == null)         return;
        Editable s=mContentEditText.getText();
        if (s == null)         return;
        WPImageSpan[] spans=s.getSpans(0,s.length(),WPImageSpan.class);
        if (spans.length != 0) {
          for (          WPImageSpan is : spans) {
            MediaFile mediaFile=is.getMediaFile();
            if (mediaFile == null)             continue;
            if (mediaId.equals(mediaFile.getMediaId()) && !is.isNetworkImageLoaded()) {
              int spanStart=s.getSpanStart(is);
              int spanEnd=s.getSpanEnd(is);
              WPImageSpan imageSpan=new WPImageSpan(getActivity(),resizedBitmap,is.getImageSource());
              imageSpan.setMediaFile(is.getMediaFile());
              imageSpan.setNetworkImageLoaded(true);
              s.removeSpan(is);
              s.setSpan(imageSpan,spanStart,spanEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
              break;
            }
          }
        }
      }
    }
  }
,0,0);
}
