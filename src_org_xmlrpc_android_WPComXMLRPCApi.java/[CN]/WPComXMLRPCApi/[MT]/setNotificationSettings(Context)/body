{
  SharedPreferences settings=PreferenceManager.getDefaultSharedPreferences(context);
  String settingsJson=settings.getString("wp_pref_notification_settings",null);
  if (settingsJson == null)   return;
  Gson gson=new Gson();
  Map<String,StringMap<String>> notificationSettings=gson.fromJson(settingsJson,HashMap.class);
  Map<String,Object> updatedSettings=new HashMap<String,Object>();
  if (notificationSettings == null)   return;
  String gcmToken=GCMRegistrar.getRegistrationId(context);
  if (gcmToken == null)   return;
  if (!WordPress.hasValidWPComCredentials(context))   return;
  StringMap<?> mutedBlogsMap=(StringMap<?>)notificationSettings.get("muted_blogs");
  StringMap<?> muteUntilMap=(StringMap<?>)notificationSettings.get("mute_until");
  ArrayList<StringMap<Double>> blogsList=(ArrayList<StringMap<Double>>)mutedBlogsMap.get("value");
  notificationSettings.remove("muted_blogs");
  notificationSettings.remove("mute_until");
  for (  Map.Entry<String,StringMap<String>> entry : notificationSettings.entrySet()) {
    StringMap<String> setting=entry.getValue();
    updatedSettings.put(entry.getKey(),setting.get("value"));
  }
  if (muteUntilMap != null && muteUntilMap.get("value") != null) {
    updatedSettings.put("mute_until",muteUntilMap.get("value"));
  }
  ArrayList<StringMap<Double>> mutedBlogsList=new ArrayList<StringMap<Double>>();
  for (int i=0; i < blogsList.size(); i++) {
    StringMap<Double> userBlog=blogsList.get(i);
    if (Double.valueOf(userBlog.get("value")) == 1.0) {
      mutedBlogsList.add(userBlog);
    }
  }
  if (mutedBlogsList.size() > 0) {
    updatedSettings.put("muted_blogs",mutedBlogsList);
  }
  if (updatedSettings.size() == 0)   return;
  Object[] params={settings.getString(WordPress.WPCOM_USERNAME_PREFERENCE,""),WordPressDB.decryptPassword(settings.getString(WordPress.WPCOM_PASSWORD_PREFERENCE,"")),updatedSettings,gcmToken,"android"};
  client.callAsync(new XMLRPCCallback(){
    public void onSuccess(    long id,    Object result){
      Log.v("WORDPRESS","Notification settings updated successfully");
    }
    public void onFailure(    long id,    XMLRPCException error){
      Log.v("WORDPRESS",error.getMessage());
    }
  }
,"wpcom.set_mobile_push_notification_settings",params);
}
