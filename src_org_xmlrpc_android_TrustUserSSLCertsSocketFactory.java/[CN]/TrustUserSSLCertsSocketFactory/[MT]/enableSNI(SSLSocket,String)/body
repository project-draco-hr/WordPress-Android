{
  ssl.setEnabledProtocols(ssl.getSupportedProtocols());
  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
    AppLog.i(T.API,"Setting SNI hostname");
    mFactory.setHostname(ssl,host);
  }
 else {
    AppLog.i(T.API,"No documented SNI support on Android <4.2, trying with reflection");
    try {
      java.lang.reflect.Method setHostnameMethod=ssl.getClass().getMethod("setHostname",String.class);
      setHostnameMethod.invoke(ssl,host);
    }
 catch (    Exception e) {
      AppLog.e(T.API,"SNI not useable",e);
    }
  }
  SSLSession session=ssl.getSession();
  if (!mHostnameVerifier.verify(host,session)) {
    throw new SSLPeerUnverifiedException("Cannot verify hostname: " + host);
  }
  AppLog.i(T.API,"Established " + session.getProtocol() + " connection with "+ session.getPeerHost()+ " using "+ session.getCipherSuite());
  return ssl;
}
