{
  post=posts[0];
  nm=(NotificationManager)context.getSystemService("notification");
  Intent notificationIntent=new Intent(context,ViewPosts.class);
  notificationIntent.setData((Uri.parse("custom://wordpressNotificationIntent" + post.blogID)));
  notificationIntent.putExtra("fromNotification",true);
  PendingIntent pendingIntent=PendingIntent.getActivity(context,0,notificationIntent,Intent.FLAG_ACTIVITY_CLEAR_TOP);
  n=new Notification(R.drawable.wp_logo,"Uploading Post",System.currentTimeMillis());
  RemoteViews contentView=new RemoteViews(context.getPackageName(),R.layout.upload_progress);
  contentView.setImageViewResource(R.id.status_icon,R.drawable.wp_logo_home);
  contentView.setTextViewText(R.id.status_text,"Uploading Post");
  contentView.setProgressBar(R.id.status_progress,100,0,false);
  n.contentView=contentView;
  n.contentIntent=pendingIntent;
  notificationID=22 + Integer.valueOf(post.blogID);
  nm.notify(notificationID,n);
  if (!post.categories.equals("")) {
    String[] aCategories=post.categories.split(",");
    for (int i=0; i < aCategories.length; i++) {
      post.selectedCategories.add(aCategories[i]);
    }
  }
  if (post.post_status == null) {
    post.post_status="publish";
  }
  Boolean publishThis=false;
  String imageContent="";
  boolean mediaError=false;
  Spannable s=(Spannable)WPHtml.fromHtml(post.getDescription() + post.getMt_text_more(),context,post);
  WPImageSpan[] click_spans=s.getSpans(0,s.length(),WPImageSpan.class);
  if (click_spans.length != 0) {
    for (int i=0; i < click_spans.length; i++) {
      WPImageSpan wpIS=click_spans[i];
      int start=s.getSpanStart(wpIS);
      int end=s.getSpanEnd(wpIS);
      MediaFile mf=new MediaFile();
      mf.setPostID(post.getId());
      mf.setTitle(wpIS.getTitle());
      mf.setDescription(wpIS.getDescription());
      mf.setFeatured(wpIS.isFeatured());
      mf.setFileName(wpIS.getImageSource().toString());
      mf.setHorizontalAlignment(wpIS.getHorizontalAlignment());
      mf.setWidth(wpIS.getWidth());
      String imgHTML=uploadImage(mf);
      if (imgHTML != null) {
        SpannableString ss=new SpannableString(imgHTML);
        s.setSpan(ss,start,end,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        s.removeSpan(wpIS);
      }
 else {
        mediaError=true;
      }
    }
  }
  WordPressDB db=new WordPressDB(context);
  if (!mediaError) {
    String[] theCategories=new String[post.selectedCategories.size()];
    for (int i=0; i < post.selectedCategories.size(); i++) {
      theCategories[i]=post.selectedCategories.get(i).toString();
    }
    Map<String,Object> contentStruct=new HashMap<String,Object>();
    String content="";
    content=WPHtml.toHtml(s);
    if (!post.isPage) {
      HashMap<?,?> globalSettings=db.getNotificationOptions(post.context);
      boolean taglineValue=false;
      String tagline="";
      if (globalSettings != null) {
        if (globalSettings.get("tagline_flag").toString().equals("1")) {
          taglineValue=true;
        }
        if (taglineValue) {
          tagline=globalSettings.get("tagline").toString();
          if (tagline != null) {
            content+="\n\n<span class=\"post_sig\">" + tagline + "</span>\n\n";
          }
        }
      }
      if (!post.getWP_post_format().equals("")) {
        contentStruct.put("wp_post_format",post.getWP_post_format());
      }
    }
    contentStruct.put("post_type",(post.isPage) ? "page" : "post");
    contentStruct.put("title",post.title);
    long pubDate=post.date_created_gmt;
    if (pubDate != 0) {
      Date date=new Date(pubDate);
      contentStruct.put("date_created_gmt",date);
    }
    content=content.replace("/\n\n/g","</p><p>");
    content=content.replace("/\n/g","<br />");
    contentStruct.put("description",content);
    if (!post.isPage) {
      if (post.mt_keywords != "") {
        contentStruct.put("mt_keywords",post.mt_keywords);
      }
      if (theCategories.length > 0) {
        contentStruct.put("categories",theCategories);
      }
    }
    contentStruct.put((post.isPage) ? "page_status" : "post_status",post.post_status);
    Double latitude=0.0;
    Double longitude=0.0;
    if (!post.isPage) {
      latitude=(Double)latitude;
      longitude=(Double)longitude;
      if (latitude > 0) {
        HashMap<Object,Object> hLatitude=new HashMap<Object,Object>();
        hLatitude.put("key","geo_latitude");
        hLatitude.put("value",latitude);
        HashMap<Object,Object> hLongitude=new HashMap<Object,Object>();
        hLongitude.put("key","geo_longitude");
        hLongitude.put("value",longitude);
        HashMap<Object,Object> hPublic=new HashMap<Object,Object>();
        hPublic.put("key","geo_public");
        hPublic.put("value",1);
        Object[] geo={hLatitude,hLongitude,hPublic};
        contentStruct.put("custom_fields",geo);
      }
    }
    XMLRPCClient client=new XMLRPCClient(post.blog.getUrl(),post.blog.getHttpuser(),post.blog.getHttppassword());
    n.contentView.setTextViewText(R.id.status_text,"Uploading Post");
    nm.notify(notificationID,n);
    if (post.wp_password != null && !"".equals(post.wp_password)) {
      contentStruct.put("wp_password",post.wp_password);
    }
    Object[] params;
    if (post.isLocalDraft() && !post.uploaded)     params=new Object[]{post.blog.getBlogId(),post.blog.getUsername(),post.blog.getPassword(),contentStruct,publishThis};
 else     params=new Object[]{post.getPostid(),post.blog.getUsername(),post.blog.getPassword(),contentStruct,publishThis};
    Object result=null;
    boolean success=false;
    try {
      result=(Object)client.call((post.isLocalDraft() && !post.uploaded) ? "metaWeblog.newPost" : "metaWeblog.editPost",params);
      success=true;
      post.update();
      return true;
    }
 catch (    final XMLRPCException e) {
      error=e.getLocalizedMessage();
    }
  }
  return false;
}
