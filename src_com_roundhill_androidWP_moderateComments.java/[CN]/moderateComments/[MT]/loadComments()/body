{
  postStoreDB postStoreDB=new postStoreDB(this);
  Vector loadedPosts=postStoreDB.loadComments(moderateComments.this,id);
  if (loadedPosts != null) {
    authors=new String[loadedPosts.size()];
    commentID=new String[loadedPosts.size()];
    comments=new String[loadedPosts.size()];
    dateCreated=new String[loadedPosts.size()];
    status=new String[loadedPosts.size()];
    for (int i=0; i < loadedPosts.size(); i++) {
      HashMap contentHash=(HashMap)loadedPosts.get(i);
      allComments.put(contentHash.get("commentID").toString(),contentHash);
      authors[i]=escapeUtils.unescapeHtml(contentHash.get("author").toString());
      commentID[i]=contentHash.get("commentID").toString();
      comments[i]=contentHash.get("comment").toString();
      dateCreated[i]=contentHash.get("commentDate").toString();
      status[i]=contentHash.get("status").toString();
    }
    setListAdapter(new CommentListAdapter(moderateComments.this));
    ListView listView=(ListView)findViewById(android.R.id.list);
    listView.setSelector(R.layout.list_selector);
    listView.setOnItemClickListener(new OnItemClickListener(){
      public void onNothingSelected(      AdapterView<?> arg0){
      }
      public void onItemClick(      AdapterView<?> arg0,      View arg1,      int arg2,      long arg3){
        Intent intent=new Intent(moderateComments.this,editPost.class);
        intent.putExtra("id",id);
        intent.putExtra("accountName",accountName);
        startActivity(intent);
      }
    }
);
    listView.setOnCreateContextMenuListener(new OnCreateContextMenuListener(){
      public void onCreateContextMenu(      ContextMenu menu,      View v,      ContextMenuInfo menuInfo){
        AdapterView.AdapterContextMenuInfo info;
        try {
          info=(AdapterView.AdapterContextMenuInfo)menuInfo;
        }
 catch (        ClassCastException e) {
          return;
        }
        selectedID=info.targetView.getId();
        rowID=info.position;
        menu.setHeaderTitle("Comment Actions");
        menu.add(0,0,0,"Mark Approved");
        menu.add(0,1,0,"Mark Unapproved");
        menu.add(0,2,0,"Mark Spam");
      }
    }
);
    return true;
  }
 else {
    return false;
  }
}
