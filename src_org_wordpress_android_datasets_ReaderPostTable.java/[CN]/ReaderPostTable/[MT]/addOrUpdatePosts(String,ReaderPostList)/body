{
  if (posts == null || posts.size() == 0)   return;
  SQLiteDatabase db=ReaderDatabase.getWritableDb();
  db.beginTransaction();
  SQLiteStatement stmtPosts=db.compileStatement("INSERT OR REPLACE INTO tbl_posts (" + COLUMN_NAMES + ") VALUES (?1,?2,?3,?4,?5,?6,?7,?8,?9,?10,?11,?12,?13,?14,?15,?16,?17,?18,?19,?20,?21,?22,?23)");
  SQLiteStatement stmtTopics=db.compileStatement("INSERT OR REPLACE INTO tbl_post_topics (post_id, blog_id, pseudo_id, topic_name) VALUES (?1,?2,?3,?4)");
  try {
    for (    ReaderPost post : posts) {
      stmtPosts.bindLong(1,post.postId);
      stmtPosts.bindLong(2,post.blogId);
      stmtPosts.bindString(3,post.getPseudoId());
      stmtPosts.bindString(4,post.getAuthorName());
      stmtPosts.bindString(5,post.getTitle());
      stmtPosts.bindString(6,post.getText());
      stmtPosts.bindString(7,post.getExcerpt());
      stmtPosts.bindString(8,post.getUrl());
      stmtPosts.bindString(9,post.getBlogUrl());
      stmtPosts.bindString(10,post.getBlogName());
      stmtPosts.bindString(11,post.getFeaturedImage());
      stmtPosts.bindString(12,post.getFeaturedVideo());
      stmtPosts.bindString(13,post.getPostAvatar());
      stmtPosts.bindLong(14,post.timestamp);
      stmtPosts.bindString(15,post.getPublished());
      stmtPosts.bindLong(16,post.numReplies);
      stmtPosts.bindLong(17,post.numLikes);
      stmtPosts.bindLong(18,SqlUtils.boolToSql(post.isLikedByCurrentUser));
      stmtPosts.bindLong(19,SqlUtils.boolToSql(post.isFollowedByCurrentUser));
      stmtPosts.bindLong(20,SqlUtils.boolToSql(post.isCommentsOpen));
      stmtPosts.bindLong(21,SqlUtils.boolToSql(post.isRebloggedByCurrentUser));
      stmtPosts.bindLong(22,SqlUtils.boolToSql(post.isExternal));
      stmtPosts.bindLong(23,SqlUtils.boolToSql(post.isPrivate));
      stmtPosts.execute();
      stmtPosts.clearBindings();
    }
    if (!TextUtils.isEmpty(topicName)) {
      for (      ReaderPost post : posts) {
        stmtTopics.bindLong(1,post.postId);
        stmtTopics.bindLong(2,post.blogId);
        stmtTopics.bindString(3,post.getPseudoId());
        stmtTopics.bindString(4,topicName);
        stmtTopics.execute();
        stmtTopics.clearBindings();
      }
    }
    db.setTransactionSuccessful();
  }
  finally {
    db.endTransaction();
    SqlUtils.closeStatement(stmtPosts);
    SqlUtils.closeStatement(stmtTopics);
  }
}
