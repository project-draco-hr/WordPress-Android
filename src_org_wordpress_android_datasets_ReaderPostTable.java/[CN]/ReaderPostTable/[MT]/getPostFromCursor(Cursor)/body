{
  if (c == null)   throw new IllegalArgumentException("null post cursor");
  ReaderPost post=new ReaderPost();
  post.postId=c.getLong(COL_POST_ID);
  post.blogId=c.getLong(COL_BLOG_ID);
  post.setPseudoId(c.getString(COL_PSEUDO_ID));
  post.setAuthorName(c.getString(COL_AUTHOR_NAME));
  post.setBlogName(c.getString(COL_BLOG_NAME));
  post.setBlogUrl(c.getString(COL_BLOG_URL));
  post.setExcerpt(c.getString(COL_EXCERPT));
  post.setFeaturedImage(c.getString(COL_FEATURED_IMAGE));
  post.setFeaturedVideo(c.getString(COL_FEATURED_VIDEO));
  post.setTitle(c.getString(COL_TITLE));
  post.setText(c.getString(COL_TEXT));
  post.setUrl(c.getString(COL_URL));
  post.setPostAvatar(c.getString(COL_POST_AVATAR));
  post.timestamp=c.getLong(COL_TIMESTAMP);
  post.setPublished(c.getString(COL_PUBLISHED));
  post.numReplies=c.getInt(COL_NUM_REPLIES);
  post.numLikes=c.getInt(COL_NUM_LIKES);
  post.isLikedByCurrentUser=SqlUtils.sqlToBool(c.getInt(COL_IS_LIKED));
  post.isFollowedByCurrentUser=SqlUtils.sqlToBool(c.getInt(COL_IS_FOLLOWED));
  post.isCommentsOpen=SqlUtils.sqlToBool(c.getInt(COL_IS_COMMENTS_OPEN));
  post.isRebloggedByCurrentUser=SqlUtils.sqlToBool(c.getInt(COL_IS_REBLOGGED));
  post.isExternal=SqlUtils.sqlToBool(c.getInt(COL_IS_EXTERNAL));
  post.isPrivate=SqlUtils.sqlToBool(c.getInt(COL_IS_PRIVATE));
  post.isVideoPress=SqlUtils.sqlToBool(c.getInt(COL_IS_VIDEOPRESS));
  post.setTags(c.getString(COL_TAGLIST));
  return post;
}
