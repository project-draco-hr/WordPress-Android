{
  long wpcomUserID=AppPrefs.getCurrentUserId();
  String userIDFromPN=extras.getString("user");
  if (userIDFromPN != null) {
    if (wpcomUserID <= 0) {
    }
 else {
      if (!String.valueOf(wpcomUserID).equals(userIDFromPN)) {
        AppLog.e(T.NOTIFS,"wpcom userId found in the app doesn't match with the ID in the PN. Aborting.");
        return;
      }
    }
  }
  String title=StringEscapeUtils.unescapeHtml(extras.getString("title"));
  if (title == null) {
    title=getString(R.string.app_name);
  }
  String message=StringEscapeUtils.unescapeHtml(extras.getString("msg"));
  String note_id=extras.getString("note_id");
  long thisTime=System.currentTimeMillis();
  if (mPreviousNoteId != null && mPreviousNoteId.equals(note_id)) {
    long seconds=TimeUnit.MILLISECONDS.toSeconds(thisTime - mPreviousNoteTime);
    if (seconds <= 1) {
      AppLog.w(T.NOTIFS,"skipped potential duplicate notification");
      return;
    }
  }
  mPreviousNoteId=note_id;
  mPreviousNoteTime=thisTime;
  if (note_id != null && !mActiveNotificationsMap.containsKey(note_id)) {
    mActiveNotificationsMap.put(note_id,extras);
  }
  String iconUrl=extras.getString("icon");
  Bitmap largeIconBitmap=null;
  if (iconUrl != null) {
    try {
      iconUrl=URLDecoder.decode(iconUrl,"UTF-8");
      int largeIconSize=context.getResources().getDimensionPixelSize(android.R.dimen.notification_large_icon_height);
      String resizedUrl=PhotonUtils.getPhotonImageUrl(iconUrl,largeIconSize,largeIconSize);
      largeIconBitmap=ImageUtils.downloadBitmap(resizedUrl);
    }
 catch (    UnsupportedEncodingException e) {
      AppLog.e(T.NOTIFS,e);
    }
  }
  SharedPreferences prefs=PreferenceManager.getDefaultSharedPreferences(context);
  boolean sound, vibrate, light;
  sound=prefs.getBoolean("wp_pref_notification_sound",false);
  vibrate=prefs.getBoolean("wp_pref_notification_vibrate",false);
  light=prefs.getBoolean("wp_pref_notification_light",false);
  NotificationCompat.Builder mBuilder;
  Intent resultIntent=new Intent(this,NotificationsActivity.class);
  resultIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
  resultIntent.setAction("android.intent.action.MAIN");
  resultIntent.addCategory("android.intent.category.LAUNCHER");
  if (mActiveNotificationsMap.size() <= 1) {
    mBuilder=new NotificationCompat.Builder(this).setSmallIcon(R.drawable.notification_icon).setColor(getResources().getColor(R.color.blue_wordpress)).setContentTitle(title).setContentText(message).setTicker(message).setAutoCancel(true).setStyle(new NotificationCompat.BigTextStyle().bigText(message));
    if (note_id != null) {
      resultIntent.putExtra(NotificationsListFragment.NOTE_ID_EXTRA,note_id);
    }
    String noteType=extras.getString("type");
    if (noteType != null && noteType.equals("c")) {
      Intent commentReplyIntent=new Intent(this,NotificationsActivity.class);
      commentReplyIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
      commentReplyIntent.setAction("android.intent.action.MAIN");
      commentReplyIntent.addCategory("android.intent.category.LAUNCHER");
      commentReplyIntent.addCategory("comment-reply");
      commentReplyIntent.putExtra(NotificationsListFragment.NOTE_INSTANT_REPLY_EXTRA,true);
      if (note_id != null) {
        commentReplyIntent.putExtra(NotificationsListFragment.NOTE_ID_EXTRA,note_id);
      }
      PendingIntent commentReplyPendingIntent=PendingIntent.getActivity(context,0,commentReplyIntent,PendingIntent.FLAG_CANCEL_CURRENT);
      mBuilder.addAction(R.drawable.ic_reply_white_24dp,context.getText(R.string.reply),commentReplyPendingIntent);
    }
    if (largeIconBitmap != null) {
      mBuilder.setLargeIcon(largeIconBitmap);
    }
  }
 else {
    NotificationCompat.InboxStyle inboxStyle=new NotificationCompat.InboxStyle();
    int noteCtr=1;
    for (    Bundle wpPN : mActiveNotificationsMap.values()) {
      if (noteCtr > mMaxInboxItems)       break;
      if (wpPN.getString("msg") == null)       continue;
      if (wpPN.getString("type") != null && wpPN.getString("type").equals("c")) {
        String pnTitle=StringEscapeUtils.unescapeHtml((wpPN.getString("title")));
        String pnMessage=StringEscapeUtils.unescapeHtml((wpPN.getString("msg")));
        inboxStyle.addLine(pnTitle + ": " + pnMessage);
      }
 else {
        String pnMessage=StringEscapeUtils.unescapeHtml((wpPN.getString("msg")));
        inboxStyle.addLine(pnMessage);
      }
      noteCtr++;
    }
    if (mActiveNotificationsMap.size() > mMaxInboxItems) {
      inboxStyle.setSummaryText(String.format(getString(R.string.more_notifications),mActiveNotificationsMap.size() - mMaxInboxItems));
    }
    String subject=String.format(getString(R.string.new_notifications),mActiveNotificationsMap.size());
    mBuilder=new NotificationCompat.Builder(this).setSmallIcon(R.drawable.notification_icon).setColor(getResources().getColor(R.color.blue_wordpress)).setContentTitle("WordPress").setContentText(subject).setTicker(message).setAutoCancel(true).setStyle(inboxStyle);
  }
  Intent notificationDeletedIntent=new Intent(this,NotificationDismissBroadcastReceiver.class);
  PendingIntent pendingDeleteIntent=PendingIntent.getBroadcast(context,0,notificationDeletedIntent,0);
  mBuilder.setDeleteIntent(pendingDeleteIntent);
  if (sound) {
    mBuilder.setSound(Uri.parse("android.resource://" + getPackageName() + "/"+ R.raw.notification));
  }
  if (vibrate) {
    mBuilder.setVibrate(new long[]{500,500,500});
  }
  if (light) {
    mBuilder.setLights(0xff0000ff,1000,5000);
  }
  PendingIntent pendingIntent=PendingIntent.getActivity(context,0,resultIntent,PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_UPDATE_CURRENT);
  mBuilder.setContentIntent(pendingIntent);
  NotificationManager mNotificationManager=(NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);
  mNotificationManager.notify(PUSH_NOTIFICATION_ID,mBuilder.build());
  broadcastNewNotification(context);
}
