{
  final String imageUri;
  if (isLocal) {
    imageUri=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_PATH));
  }
 else {
    imageUri=cursor.getString(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_URL));
  }
  if (MediaUtils.isValidImage(imageUri)) {
    int width=cursor.getInt(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_WIDTH));
    int height=cursor.getInt(cursor.getColumnIndex(WordPressDB.COLUMN_NAME_HEIGHT));
    float screenWidth;
    if (this.isInLayout()) {
      screenWidth=mLinearLayout.getMeasuredWidth();
    }
 else {
      screenWidth=getActivity().getResources().getDisplayMetrics().widthPixels;
    }
    float screenHeight=getActivity().getResources().getDisplayMetrics().heightPixels;
    if (width > screenWidth) {
      height=(int)(height / (width / screenWidth));
    }
 else     if (height > screenHeight) {
      width=(int)(width / (height / screenHeight));
    }
    if (isLocal) {
      loadLocalImage(mLocalImageView,imageUri,width,height);
      mLocalImageView.setLayoutParams(new FrameLayout.LayoutParams(LayoutParams.MATCH_PARENT,height));
    }
 else {
      mNetworkImageView.setImageUrl(imageUri + "?w=" + screenWidth,mImageLoader);
      mNetworkImageView.setLayoutParams(new FrameLayout.LayoutParams(LayoutParams.MATCH_PARENT,height));
    }
  }
 else {
    mNetworkImageView.setVisibility(View.GONE);
    mLocalImageView.setVisibility(View.GONE);
  }
}
