{
  paint.setStrokeWidth(0);
  float border=GraphViewConfig.BORDER;
  float horstart=0;
  float height=getHeight();
  float width=getWidth() - 1;
  double maxY=getMaxY();
  double minY=getMinY();
  double diffY=maxY - minY;
  double maxX=getMaxX(false);
  double minX=getMinX(false);
  double diffX=maxX - minX;
  float graphheight=height - (2 * border);
  graphwidth=width;
  if (horlabels == null) {
    horlabels=generateHorlabels(graphwidth);
  }
  if (verlabels == null) {
    verlabels=generateVerlabels(graphheight);
  }
  paint.setTextAlign(Align.LEFT);
  int vers=verlabels.length - 1;
  for (int i=0; i < verlabels.length; i++) {
    paint.setColor(Color.DKGRAY);
    float y=((graphheight / vers) * i) + border;
    canvas.drawLine(horstart,y,width,y,paint);
  }
  int hors=horlabels.length - 1;
  for (int i=0; i < horlabels.length; i++) {
    paint.setColor(Color.DKGRAY);
    float x=((graphwidth / hors) * i) + horstart;
    canvas.drawLine(x,height - border,x,border,paint);
    paint.setTextAlign(Align.CENTER);
    if (i == horlabels.length - 1)     paint.setTextAlign(Align.RIGHT);
    if (i == 0)     paint.setTextAlign(Align.LEFT);
    paint.setColor(Color.WHITE);
    canvas.drawText(horlabels[i],x,height - 4,paint);
  }
  paint.setTextAlign(Align.CENTER);
  canvas.drawText(title,(graphwidth / 2) + horstart,border - 4,paint);
  if (maxY != minY) {
    paint.setStrokeCap(Paint.Cap.ROUND);
    paint.setStrokeWidth(3);
    for (int i=0; i < graphSeries.size(); i++) {
      paint.setColor(graphSeries.get(i).color);
      drawSeries(canvas,_values(i),graphwidth,graphheight,border,minX,minY,diffX,diffY,horstart);
    }
    if (showLegend)     drawLegend(canvas,height,width);
  }
}
