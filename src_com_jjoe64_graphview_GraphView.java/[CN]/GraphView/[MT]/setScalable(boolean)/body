{
  this.scalable=scalable;
  if (scalable == true && scaleDetector == null) {
    scrollable=true;
    scaleDetector=new ScaleGestureDetector(getContext(),new ScaleGestureDetector.SimpleOnScaleGestureListener(){
      @Override public boolean onScale(      ScaleGestureDetector detector){
        double center=viewportStart + viewportSize / 2;
        viewportSize/=detector.getScaleFactor();
        viewportStart=center - viewportSize / 2;
        double minX=getMinX(true);
        if (viewportStart < minX) {
          viewportStart=minX;
        }
        double maxX=getMaxX(true);
        double overlap=viewportStart + viewportSize - maxX;
        if (overlap > 0) {
          if (viewportStart - overlap > minX) {
            viewportStart-=overlap;
          }
 else {
            viewportStart=minX;
            viewportSize=maxX - viewportStart;
          }
        }
        verlabels=null;
        horlabels=null;
        numberformatter=null;
        invalidate();
        viewVerLabels.invalidate();
        return true;
      }
    }
);
  }
}
