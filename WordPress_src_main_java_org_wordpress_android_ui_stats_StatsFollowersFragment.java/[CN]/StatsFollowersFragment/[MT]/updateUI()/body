{
  if (!isAdded()) {
    return;
  }
  if (!hasDataAvailable()) {
    showHideNoResultsUI(true);
    mTotalsLabel.setText(getTotalFollowersLabel(0));
    return;
  }
  mTotalsLabel.setVisibility(View.VISIBLE);
  final FollowersModel followersModel=getCurrentDataModel();
  if (followersModel != null && followersModel.getFollowers() != null && followersModel.getFollowers().size() > 0) {
    ArrayAdapter adapter=new DotComFollowerAdapter(getActivity(),followersModel.getFollowers());
    StatsUIHelper.reloadLinearLayout(getActivity(),adapter,mList,getMaxNumberOfItemsToShowInList());
    showHideNoResultsUI(false);
    if (mTopPagerSelectedButtonIndex == 0) {
      mTotalsLabel.setText(getTotalFollowersLabel(followersModel.getTotalWPCom()));
    }
 else {
      mTotalsLabel.setText(getTotalFollowersLabel(followersModel.getTotalEmail()));
    }
    if (isSingleView()) {
      if (followersModel.getPages() > 1) {
        mBottomPaginationContainer.setVisibility(View.VISIBLE);
        mTopPaginationContainer.setVisibility(View.VISIBLE);
        String paginationLabel=String.format(getString(R.string.stats_pagination_label),FormatUtils.formatDecimal(followersModel.getPage()),FormatUtils.formatDecimal(followersModel.getPages()));
        mBottomPaginationText.setText(paginationLabel);
        mTopPaginationText.setText(paginationLabel);
        setNavigationButtonsEnabled(true);
        if (followersModel.getPage() == 1) {
          setNavigationBackButtonsVisibility(false);
        }
 else {
          setNavigationBackButtonsVisibility(true);
          View.OnClickListener clickListener=new View.OnClickListener(){
            @Override public void onClick(            View v){
              setNavigationButtonsEnabled(false);
              refreshStats(followersModel.getPage() - 1,new StatsService.StatsEndpointsEnum[]{sectionsToUpdate()[mTopPagerSelectedButtonIndex]});
            }
          }
;
          mBottomPaginationGoBackButton.setOnClickListener(clickListener);
          mTopPaginationGoBackButton.setOnClickListener(clickListener);
        }
        if (followersModel.getPage() == followersModel.getPages()) {
          setNavigationForwardButtonsVisibility(false);
        }
 else {
          setNavigationForwardButtonsVisibility(true);
          View.OnClickListener clickListener=new View.OnClickListener(){
            @Override public void onClick(            View v){
              setNavigationButtonsEnabled(false);
              refreshStats(followersModel.getPage() + 1,new StatsService.StatsEndpointsEnum[]{sectionsToUpdate()[mTopPagerSelectedButtonIndex]});
            }
          }
;
          mBottomPaginationGoForwardButton.setOnClickListener(clickListener);
          mTopPaginationGoForwardButton.setOnClickListener(clickListener);
        }
        int startIndex=followersModel.getPage() * StatsService.MAX_RESULTS_REQUESTED_PER_PAGE - StatsService.MAX_RESULTS_REQUESTED_PER_PAGE + 1;
        int endIndex=startIndex + followersModel.getFollowers().size() - 1;
        String pagedLabel=getString(mTopPagerSelectedButtonIndex == 0 ? R.string.stats_followers_total_wpcom_paged : R.string.stats_followers_total_email_paged,startIndex,endIndex,FormatUtils.formatDecimal(mTopPagerSelectedButtonIndex == 0 ? followersModel.getTotalWPCom() : followersModel.getTotalEmail()));
        mTotalsLabel.setText(pagedLabel);
      }
 else {
        mBottomPaginationContainer.setVisibility(View.GONE);
        mTopPaginationContainer.setVisibility(View.GONE);
      }
    }
  }
 else {
    showHideNoResultsUI(true);
    mBottomPaginationContainer.setVisibility(View.GONE);
    mTotalsLabel.setText(getTotalFollowersLabel(0));
  }
  mTopPagerContainer.setVisibility(View.VISIBLE);
}
