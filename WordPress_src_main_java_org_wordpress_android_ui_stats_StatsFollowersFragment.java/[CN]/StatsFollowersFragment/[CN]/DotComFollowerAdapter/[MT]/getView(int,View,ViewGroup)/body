{
  View rowView=convertView;
  if (rowView == null) {
    rowView=inflater.inflate(R.layout.stats_list_cell,parent,false);
    LinearLayout totalContainer=(LinearLayout)rowView.findViewById(R.id.stats_list_cell_total_container);
    int dp64=DisplayUtils.dpToPx(rowView.getContext(),64);
    totalContainer.setMinimumWidth(dp64);
    StatsViewHolder viewHolder=new StatsViewHolder(rowView);
    rowView.setTag(viewHolder);
  }
  final FollowerModel currentRowData=list.get(position);
  final StatsViewHolder holder=(StatsViewHolder)rowView.getTag();
  holder.entryTextView.setTextColor(context.getResources().getColor(R.color.stats_text_color));
  holder.rowContent.setClickable(false);
  final FollowDataModel followData=currentRowData.getFollowData();
  if (mTopPagerSelectedButtonIndex == 0 && !(TextUtils.isEmpty(currentRowData.getURL()) && followData == null)) {
    final int blogID;
    if (followData == null) {
      String normURL=normalizeAndRemoveScheme(currentRowData.getURL());
      blogID=userBlogs.containsKey(normURL) ? userBlogs.get(normURL) : Integer.MIN_VALUE;
    }
 else {
      blogID=followData.getSiteID();
    }
    if (blogID > Integer.MIN_VALUE) {
      holder.entryTextView.setText(currentRowData.getLabel());
      holder.rowContent.setOnClickListener(new View.OnClickListener(){
        @Override public void onClick(        View view){
          ReaderActivityLauncher.showReaderBlogPreview(context,blogID,null);
        }
      }
);
    }
 else {
      holder.setEntryTextOrLink(currentRowData.getURL(),currentRowData.getLabel());
    }
    holder.entryTextView.setTextColor(context.getResources().getColor(R.color.stats_link_text_color));
  }
 else {
    holder.setEntryText(currentRowData.getLabel());
  }
  holder.totalsTextView.setText(StatsUtils.getSinceLabel(context,currentRowData.getDateSubscribed()));
  holder.networkImageView.setImageUrl(GravatarUtils.fixGravatarUrl(currentRowData.getAvatar(),mResourceVars.headerAvatarSizePx),WPNetworkImageView.ImageType.AVATAR);
  holder.networkImageView.setVisibility(View.VISIBLE);
  if (followData == null) {
    holder.imgMore.setVisibility(View.GONE);
    holder.imgMore.setClickable(false);
  }
 else {
    holder.imgMore.setVisibility(View.VISIBLE);
    holder.imgMore.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View view){
        FollowHelper fh=new FollowHelper(context);
        fh.showPopup(holder.imgMore,followData);
      }
    }
);
  }
  return rowView;
}
