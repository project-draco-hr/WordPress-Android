{
  if (position >= mPosts.size() || position < 0) {
    ReaderLog.w("invalid preload position > " + Integer.toString(position));
    return;
  }
  mLastPreloadPos=position;
  ReaderPost post=mPosts.get(position);
  if (!post.hasFeaturedImage())   return;
  final String imageUrl=post.getFeaturedImageForDisplay(mPhotonWidth,mPhotonHeight);
  if (isImageCached(imageUrl))   return;
  Request<?> newRequest=new ImageRequest(imageUrl,new Response.Listener<Bitmap>(){
    @Override public void onResponse(    Bitmap response){
      if (response != null)       WordPress.getBitmapCache().putBitmap(getCacheKey(imageUrl),response);
    }
  }
,mPhotonWidth,mPhotonWidth,Bitmap.Config.RGB_565,new Response.ErrorListener(){
    @Override public void onErrorResponse(    VolleyError error){
      ReaderLog.e(error);
    }
  }
);
  WordPress.requestQueue.add(newRequest);
}
