{
  if (mNosaraClient == null) {
    return;
  }
  String eventName=getEventNameForStat(stat);
  if (eventName == null) {
    AppLog.w(AppLog.T.STATS,"There is NO match for the event " + stat.name() + "stat");
    return;
  }
  Map<String,Object> predefinedEventProperties=new HashMap<String,Object>();
switch (stat) {
case EDITOR_ADDED_PHOTO_VIA_LOCAL_LIBRARY:
    predefinedEventProperties.put("via","local_library");
  break;
case EDITOR_ADDED_PHOTO_VIA_WP_MEDIA_LIBRARY:
predefinedEventProperties.put("via","media_library");
break;
case EDITOR_ADDED_VIDEO_VIA_LOCAL_LIBRARY:
predefinedEventProperties.put("via","local_library");
break;
case EDITOR_ADDED_VIDEO_VIA_WP_MEDIA_LIBRARY:
predefinedEventProperties.put("via","media_library");
break;
case EDITOR_TAPPED_BLOCKQUOTE:
predefinedEventProperties.put("button","blockquote");
break;
case EDITOR_TAPPED_BOLD:
predefinedEventProperties.put("button","bold");
break;
case EDITOR_TAPPED_IMAGE:
predefinedEventProperties.put("button","image");
break;
case EDITOR_TAPPED_ITALIC:
predefinedEventProperties.put("button","italic");
break;
case EDITOR_TAPPED_LINK:
predefinedEventProperties.put("button","link");
break;
case EDITOR_TAPPED_MORE:
predefinedEventProperties.put("button","more");
break;
case EDITOR_TAPPED_STRIKETHROUGH:
predefinedEventProperties.put("button","strikethrough");
break;
case EDITOR_TAPPED_UNDERLINE:
predefinedEventProperties.put("button","underline");
break;
case EDITOR_TAPPED_HTML:
predefinedEventProperties.put("button","html");
break;
case EDITOR_TAPPED_ORDERED_LIST:
predefinedEventProperties.put("button","ordered_list");
break;
case EDITOR_TAPPED_UNLINK:
predefinedEventProperties.put("button","unlink");
break;
case EDITOR_TAPPED_UNORDERED_LIST:
predefinedEventProperties.put("button","unordered_list");
break;
case OPENED_POSTS:
predefinedEventProperties.put("menu_item","posts");
break;
case OPENED_PAGES:
predefinedEventProperties.put("menu_item","pages");
break;
case OPENED_COMMENTS:
predefinedEventProperties.put("menu_item","comments");
break;
case OPENED_VIEW_SITE:
predefinedEventProperties.put("menu_item","view_site");
break;
case OPENED_VIEW_ADMIN:
predefinedEventProperties.put("menu_item","view_admin");
break;
case OPENED_MEDIA_LIBRARY:
predefinedEventProperties.put("menu_item","media_library");
break;
case OPENED_BLOG_SETTINGS:
predefinedEventProperties.put("menu_item","site_settings");
break;
case STATS_PERIOD_DAYS_ACCESSED:
predefinedEventProperties.put("period","days");
break;
case STATS_PERIOD_WEEKS_ACCESSED:
predefinedEventProperties.put("period","weeks");
break;
case STATS_PERIOD_MONTHS_ACCESSED:
predefinedEventProperties.put("period","months");
break;
case STATS_PERIOD_YEARS_ACCESSED:
predefinedEventProperties.put("period","years");
break;
}
final String user;
final TracksClient.NosaraUserType userType;
if (getWordPressComUserName() != null) {
user=getWordPressComUserName();
userType=TracksClient.NosaraUserType.WPCOM;
}
 else {
if (getAnonID() == null) {
user=generateNewAnonID();
}
 else {
user=getAnonID();
}
userType=TracksClient.NosaraUserType.ANON;
}
final JSONObject propertiesToJSON;
if (properties != null && properties.size() > 0) {
propertiesToJSON=new JSONObject(properties);
for (String key : predefinedEventProperties.keySet()) {
try {
if (propertiesToJSON.has(key)) {
AppLog.w(AppLog.T.STATS,"The user has defined a property named: '" + key + "' that will override"+ "the same property pre-defined at event level. This may generate unexpected behavior!!");
AppLog.w(AppLog.T.STATS,"User value: " + propertiesToJSON.get(key).toString() + " - pre-defined value: "+ predefinedEventProperties.get(key).toString());
}
 else {
propertiesToJSON.put(key,predefinedEventProperties.get(key));
}
}
 catch (JSONException e) {
AppLog.e(AppLog.T.STATS,"Error while merging user-defined properties with pre-defined properties",e);
}
}
}
 else {
propertiesToJSON=new JSONObject(predefinedEventProperties);
}
if (propertiesToJSON.length() > 0) {
mNosaraClient.track(EVENTS_PREFIX + eventName,propertiesToJSON,user,userType);
}
 else {
mNosaraClient.track(EVENTS_PREFIX + eventName,user,userType);
}
}
