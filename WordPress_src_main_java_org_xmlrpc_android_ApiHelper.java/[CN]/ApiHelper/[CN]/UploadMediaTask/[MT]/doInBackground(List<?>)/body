{
  List<?> arguments=params[0];
  WordPress.currentBlog=(Blog)arguments.get(0);
  Blog blog=WordPress.currentBlog;
  if (blog == null) {
    setError(ErrorType.INVALID_CURRENT_BLOG,"current blog is null");
    return null;
  }
  final XMLRPCClientInterface client=XMLRPCFactory.instantiate(blog.getUri(),blog.getHttpuser(),blog.getHttppassword());
  Map<String,Object> data=new HashMap<String,Object>();
  data.put("name",mMediaFile.getFileName());
  data.put("type",mMediaFile.getMimeType());
  data.put("bits",mMediaFile);
  data.put("overwrite",true);
  Object[] apiParams={blog.getRemoteBlogId(),blog.getUsername(),blog.getPassword(),data};
  final File tempFile=getTempFile(mContext);
  if (client instanceof XMLRPCClient) {
    ((XMLRPCClient)client).setOnBytesUploadedListener(new XMLRPCClient.OnBytesUploadedListener(){
      @Override public void onBytesUploaded(      long uploadedBytes){
        if (isCancelled()) {
          ((XMLRPCClient)client).cancel();
        }
        if (tempFile == null || tempFile.length() == 0) {
          return;
        }
        float fractionUploaded=uploadedBytes / (float)tempFile.length();
        mCallback.onProgressUpdate(fractionUploaded);
      }
    }
);
  }
  if (mContext == null) {
    return null;
  }
  Map<?,?> resultMap;
  try {
    resultMap=(HashMap<?,?>)client.call(Methods.UPLOAD_FILE,apiParams,tempFile);
  }
 catch (  ClassCastException cce) {
    setError(ErrorType.INVALID_RESULT,cce.getMessage(),cce);
    return null;
  }
catch (  XMLRPCException e) {
    setError(ErrorType.NETWORK_XMLRPC,e.getMessage(),e);
    return null;
  }
catch (  IOException e) {
    setError(ErrorType.NETWORK_XMLRPC,e.getMessage(),e);
    return null;
  }
catch (  XmlPullParserException e) {
    setError(ErrorType.NETWORK_XMLRPC,e.getMessage(),e);
    return null;
  }
  if (resultMap != null && resultMap.containsKey("id")) {
    return resultMap;
  }
 else {
    setError(ErrorType.INVALID_RESULT,"Invalid result");
  }
  return null;
}
