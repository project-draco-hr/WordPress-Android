{
  boolean commentsOnly=params[0];
  XMLRPCClientInterface client=XMLRPCFactory.instantiate(mBlog.getUri(),mBlog.getHttpuser(),mBlog.getHttppassword());
  boolean alreadyTrackedAsJetpackBlog=mBlog.isJetpackPowered();
  if (!commentsOnly) {
    Map<String,String> hPost=ApiHelper.blogOptionsXMLRPCParameters;
    Object[] vParams={mBlog.getRemoteBlogId(),mBlog.getUsername(),mBlog.getPassword(),hPost};
    Object versionResult=null;
    try {
      versionResult=client.call(Methods.GET_OPTIONS,vParams);
    }
 catch (    ClassCastException cce) {
      setError(ErrorType.INVALID_RESULT,cce.getMessage(),cce);
      return false;
    }
catch (    Exception e) {
      setError(ErrorType.NETWORK_XMLRPC,e.getMessage(),e);
      return false;
    }
    if (versionResult != null) {
      Map<?,?> blogOptions=(HashMap<?,?>)versionResult;
      ApiHelper.updateBlogOptions(mBlog,blogOptions);
    }
    if (mBlog.isJetpackPowered() && !alreadyTrackedAsJetpackBlog) {
      AnalyticsTracker.track(AnalyticsTracker.Stat.SIGNED_INTO_JETPACK);
    }
    new GetPostFormatsTask().execute(mBlog);
    String currentBlogID=String.valueOf(mBlog.getRemoteBlogId());
    if (StatsWidgetProvider.shouldUpdateWidgetForBlog(WordPress.getContext(),currentBlogID)) {
      String currentDate=StatsUtils.getCurrentDateTZ(mBlog.getLocalTableBlogId());
      StatsWidgetProvider.enqueueStatsRequestForBlog(WordPress.getContext(),currentBlogID,currentDate);
    }
  }
  Object[] userParams={mBlog.getRemoteBlogId(),mBlog.getUsername(),mBlog.getPassword()};
  try {
    Map<String,Object> userInfos=(HashMap<String,Object>)client.call(ApiHelper.Methods.GET_PROFILE,userParams);
    updateBlogAdmin(userInfos);
  }
 catch (  ClassCastException cce) {
    setError(ErrorType.INVALID_RESULT,cce.getMessage(),cce);
    return false;
  }
catch (  XMLRPCException e) {
    setError(ErrorType.NETWORK_XMLRPC,e.getMessage(),e);
  }
catch (  IOException e) {
    setError(ErrorType.NETWORK_XMLRPC,e.getMessage(),e);
  }
catch (  XmlPullParserException e) {
    setError(ErrorType.NETWORK_XMLRPC,e.getMessage(),e);
  }
  Map<String,Object> hPost=new HashMap<String,Object>();
  hPost.put("number",30);
  Object[] commentParams={mBlog.getRemoteBlogId(),mBlog.getUsername(),mBlog.getPassword(),hPost};
  try {
    ApiHelper.refreshComments(mBlog,commentParams);
  }
 catch (  Exception e) {
    setError(ErrorType.NETWORK_XMLRPC,e.getMessage(),e);
    return false;
  }
  return true;
}
