{
  List<?> arguments=params[0];
  Blog blog=(Blog)arguments.get(0);
  if (blog == null)   return false;
  boolean isPage=(Boolean)arguments.get(1);
  int recordCount=(Integer)arguments.get(2);
  boolean loadMore=(Boolean)arguments.get(3);
  XMLRPCClientInterface client=XMLRPCFactory.instantiate(blog.getUri(),blog.getHttpuser(),blog.getHttppassword());
  Object[] result;
  Object[] xmlrpcParams={blog.getRemoteBlogId(),blog.getUsername(),blog.getPassword(),recordCount};
  try {
    result=(Object[])client.call((isPage) ? "wp.getPages" : "metaWeblog.getRecentPosts",xmlrpcParams);
    if (result != null && result.length > 0) {
      mPostCount=result.length;
      List<Map<?,?>> postsList=new ArrayList<Map<?,?>>();
      if (!loadMore) {
        WordPress.wpDB.deleteUploadedPosts(blog.getLocalTableBlogId(),isPage);
      }
      int startPosition=0;
      if (loadMore && result.length > PostsListFragment.POSTS_REQUEST_COUNT) {
        startPosition=result.length - PostsListFragment.POSTS_REQUEST_COUNT;
      }
      for (int ctr=startPosition; ctr < result.length; ctr++) {
        Map<?,?> postMap=(Map<?,?>)result[ctr];
        postsList.add(postMap);
      }
      WordPress.wpDB.savePosts(postsList,blog.getLocalTableBlogId(),isPage,mOverwriteLocalChanges);
    }
    return true;
  }
 catch (  XMLRPCFault e) {
    mErrorType=ErrorType.NETWORK_XMLRPC;
    if (e.getFaultCode() == 401) {
      mErrorType=ErrorType.UNAUTHORIZED;
    }
    mErrorMessage=e.getMessage();
  }
catch (  XMLRPCException e) {
    mErrorType=ErrorType.NETWORK_XMLRPC;
    mErrorMessage=e.getMessage();
  }
catch (  IOException e) {
    mErrorType=ErrorType.INVALID_RESULT;
    mErrorMessage=e.getMessage();
  }
catch (  XmlPullParserException e) {
    mErrorType=ErrorType.INVALID_RESULT;
    mErrorMessage=e.getMessage();
  }
  return false;
}
