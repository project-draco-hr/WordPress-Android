{
  final ViewGroup rootView=(ViewGroup)inflater.inflate(R.layout.person_detail_fragment,container,false);
  mPersonID=getArguments().getLong(ARG_PERSON_ID);
  mLocalTableBlogID=getArguments().getInt(ARG_LOCAL_TABLE_BLOG_ID);
  mAvatarImageView=(WPNetworkImageView)rootView.findViewById(R.id.person_avatar);
  mDisplayNameTextView=(TextView)rootView.findViewById(R.id.person_display_name);
  mUsernameTextView=(TextView)rootView.findViewById(R.id.person_username);
  mRoleContainer=(LinearLayout)rootView.findViewById(R.id.person_role_container);
  mRoleTextView=(TextView)rootView.findViewById(R.id.person_role);
  RelativeLayout detailsLayout=(RelativeLayout)rootView.findViewById(R.id.person_details);
  detailsLayout.setBackgroundColor(ContextCompat.getColor(getActivity(),R.color.color_primary));
  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
    detailsLayout.setElevation(getResources().getDimension(R.dimen.appbar_elevation));
  }
  mDisplayNameTextView.setTextColor(ContextCompat.getColor(getActivity(),R.color.white));
  mUsernameTextView.setTextColor(ContextCompat.getColor(getActivity(),R.color.white));
  Account account=AccountHelper.getDefaultAccount();
  boolean isCurrentUser=account.getUserId() == mPersonID;
  Blog blog=WordPress.getBlog(mLocalTableBlogID);
  if (!isCurrentUser && blog != null && blog.hasCapability(Capability.REMOVE_USERS)) {
    setHasOptionsMenu(true);
  }
  return rootView;
}
