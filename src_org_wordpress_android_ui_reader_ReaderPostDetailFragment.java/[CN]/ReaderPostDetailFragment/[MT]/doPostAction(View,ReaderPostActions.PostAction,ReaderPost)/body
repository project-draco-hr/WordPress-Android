{
  boolean isSelected=actionView.isSelected();
  actionView.setSelected(!isSelected);
  AniUtils.zoomAction(actionView);
  if (!ReaderPostActions.performPostAction(action,post,null)) {
    actionView.setSelected(isSelected);
    return;
  }
  mPost=ReaderPostTable.getPost(mBlogId,mPostId);
switch (action) {
case TOGGLE_LIKE:
    if (mPost.isLikedByCurrentUser) {
      WPStats.track(WPStats.Stat.READER_LIKED_ARTICLE);
      doPostChanged(PostChangeType.LIKED);
    }
 else {
      doPostChanged(PostChangeType.UNLIKED);
    }
  break;
case TOGGLE_FOLLOW:
doPostChanged(mPost.isFollowedByCurrentUser ? PostChangeType.FOLLOWED : PostChangeType.UNFOLLOWED);
break;
}
switch (action) {
case TOGGLE_LIKE:
refreshLikes(true);
break;
case TOGGLE_FOLLOW:
refreshFollowed();
break;
}
}
