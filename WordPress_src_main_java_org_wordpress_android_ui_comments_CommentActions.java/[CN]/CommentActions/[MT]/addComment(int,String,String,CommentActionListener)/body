{
  final Blog blog=WordPress.getBlog(accountId);
  if (blog == null || TextUtils.isEmpty(commentText)) {
    if (actionListener != null) {
      actionListener.onActionResult(new CommentActionResult(CommentActionResult.COMMENT_ID_ON_ERRORS,null));
    }
    return;
  }
  final Handler handler=new Handler();
  new Thread(){
    @Override public void run(){
      XMLRPCClientInterface client=XMLRPCFactory.instantiate(blog.getUri(),blog.getHttpuser(),blog.getHttppassword());
      Map<String,Object> commentHash=new HashMap<String,Object>();
      commentHash.put("content",commentText);
      commentHash.put("author","");
      commentHash.put("author_url","");
      commentHash.put("author_email","");
      Object[] params={blog.getRemoteBlogId(),blog.getUsername(),blog.getPassword(),postID,commentHash};
      int newCommentID=-1;
      String message=null;
      try {
        newCommentID=(Integer)client.call(Method.NEW_COMMENT,params);
      }
 catch (      IOException|XmlPullParserException|XMLRPCException e) {
        AppLog.e(T.COMMENTS,"Error while sending new comment",e);
        message=e.getMessage();
      }
      final CommentActionResult cr=new CommentActionResult(newCommentID,message);
      if (actionListener != null) {
        handler.post(new Runnable(){
          @Override public void run(){
            actionListener.onActionResult(cr);
          }
        }
);
      }
    }
  }
.start();
}
