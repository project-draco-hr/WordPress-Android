{
  final Comment comment=mComments.get(position);
  final CommentHolder holder;
  if (convertView == null || convertView.getTag() == null) {
    convertView=mInflater.inflate(R.layout.comment_row,null);
    holder=new CommentHolder(convertView);
    convertView.setTag(holder);
  }
 else {
    holder=(CommentHolder)convertView.getTag();
  }
  holder.txtTitle.setText(Html.fromHtml(comment.getFormattedTitle()));
  holder.txtComment.setText(comment.getUnescapedCommentText());
  holder.txtDate.setText(DateTimeUtils.javaDateToTimeSpan(comment.getDatePublished()));
  final boolean showStatus;
switch (comment.getStatusEnum()) {
case SPAM:
    showStatus=true;
  holder.txtStatus.setText(mStatusTextSpam);
holder.txtStatus.setTextColor(mStatusColorSpam);
break;
case UNAPPROVED:
showStatus=true;
holder.txtStatus.setText(mStatusTextUnapproved);
holder.txtStatus.setTextColor(mStatusColorUnapproved);
break;
default :
showStatus=false;
break;
}
holder.txtStatus.setVisibility(showStatus ? View.VISIBLE : View.GONE);
final boolean useSelectionBackground;
if (mEnableSelection && isItemSelected(position)) {
useSelectionBackground=true;
if (holder.imgCheckmark.getVisibility() != View.VISIBLE) holder.imgCheckmark.setVisibility(View.VISIBLE);
}
 else {
useSelectionBackground=(mHighlightedCommentId == comment.commentID);
if (holder.imgCheckmark.getVisibility() == View.VISIBLE) holder.imgCheckmark.setVisibility(View.GONE);
holder.imgAvatar.setImageUrl(comment.getAvatarForDisplay(mAvatarSz),WPNetworkImageView.ImageType.AVATAR);
}
if (useSelectionBackground) {
convertView.setBackgroundColor(mSelectionColor);
}
 else {
convertView.setBackgroundDrawable(null);
}
boolean adjustComment=(showStatus && holder.txtTitle.getLineCount() <= 1);
RelativeLayout.LayoutParams params=(RelativeLayout.LayoutParams)holder.txtComment.getLayoutParams();
if (adjustComment) {
params.addRule(RelativeLayout.LEFT_OF,R.id.layout_date_status);
}
 else {
params.addRule(RelativeLayout.LEFT_OF,0);
}
if (mOnLoadMoreListener != null && position >= getCount() - 1) mOnLoadMoreListener.onLoadMore();
return convertView;
}
