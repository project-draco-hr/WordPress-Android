{
  final Comment comment=mComments.get(position);
  final CommentHolder holder;
  if (convertView == null || convertView.getTag() == null) {
    convertView=mInflater.inflate(R.layout.comment_row,null);
    holder=new CommentHolder(convertView);
    convertView.setTag(holder);
  }
 else {
    holder=(CommentHolder)convertView.getTag();
  }
  holder.txtName.setText(comment.hasAuthorName() ? comment.getAuthorName() : mAnonymous);
  holder.txtPostTitle.setText(comment.getUnescapedPostTitle());
  holder.txtComment.setText(comment.getUnescapedCommentText());
  holder.txtDate.setText(DateTimeUtils.javaDateToTimeSpan(comment.getDatePublished()));
switch (comment.getStatusEnum()) {
case SPAM:
    holder.txtStatus.setText(mStatusTextSpam);
  holder.txtStatus.setTextColor(mStatusColorSpam);
holder.txtStatus.setVisibility(View.VISIBLE);
break;
case UNAPPROVED:
holder.txtStatus.setText(mStatusTextUnapproved);
holder.txtStatus.setTextColor(mStatusColorUnapproved);
holder.txtStatus.setVisibility(View.VISIBLE);
break;
default :
holder.txtStatus.setVisibility(View.GONE);
break;
}
String avatarUrl=comment.getAvatarForDisplay(mAvatarSz);
if (!TextUtils.isEmpty(avatarUrl)) {
holder.imgAvatar.setImageUrl(avatarUrl,WordPress.imageLoader);
}
 else {
holder.imgAvatar.setImageDrawable(mDefaultAvatar);
}
if (mEnableSelection && isItemSelected(position)) {
convertView.setBackgroundColor(mSelectedColor);
}
 else {
convertView.setBackgroundColor(Color.TRANSPARENT);
}
if (mOnLoadMoreListener != null && position >= getCount() - 1) mOnLoadMoreListener.onLoadMore();
return convertView;
}
