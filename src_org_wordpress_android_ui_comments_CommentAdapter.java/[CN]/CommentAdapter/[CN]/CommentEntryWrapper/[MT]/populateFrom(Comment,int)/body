{
  txtName.setText(comment.hasAuthorName() ? comment.getAuthorName() : mAnonymous);
  txtPostTitle.setText(comment.getPostTitle());
  txtComment.setText(StringUtils.unescapeHTML(comment.getCommentText()));
  String fEmailURL=(comment.hasAuthorUrl() ? comment.getAuthorUrl() : comment.getAuthorEmail());
  txtEmailURL.setVisibility(TextUtils.isEmpty(fEmailURL) ? View.GONE : View.VISIBLE);
  txtEmailURL.setText(fEmailURL);
  row.setId(Integer.valueOf(comment.commentID));
switch (comment.getStatusEnum()) {
case SPAM:
    txtStatus.setText(mStatusTextSpam);
  txtStatus.setTextColor(mStatusColorSpam);
txtStatus.setVisibility(View.VISIBLE);
break;
case UNAPPROVED:
txtStatus.setText(mStatusTextUnapproved);
txtStatus.setTextColor(mStatusColorUnapproved);
txtStatus.setVisibility(View.VISIBLE);
break;
default :
txtStatus.setVisibility(View.GONE);
break;
}
bulkCheck.setChecked(mSelectedCommentPositions.contains(position));
bulkCheck.setOnClickListener(new View.OnClickListener(){
public void onClick(View view){
if (bulkCheck.isChecked()) {
mSelectedCommentPositions.add(position);
}
 else {
mSelectedCommentPositions.remove(position);
}
if (mOnSelectionChangeListener != null) mOnSelectionChangeListener.onSelectionChanged();
}
}
);
imgAvatar.setDefaultImageResId(R.drawable.placeholder);
if (comment.hasProfileImageUrl()) {
imgAvatar.setImageUrl(GravatarUtils.fixGravatarUrl(comment.getProfileImageUrl()),WordPress.imageLoader);
}
 else if (comment.hasAuthorEmail()) {
imgAvatar.setImageUrl(GravatarUtils.gravatarUrlFromEmail(comment.getAuthorEmail()),WordPress.imageLoader);
}
 else {
imgAvatar.setImageResource(R.drawable.placeholder);
}
}
