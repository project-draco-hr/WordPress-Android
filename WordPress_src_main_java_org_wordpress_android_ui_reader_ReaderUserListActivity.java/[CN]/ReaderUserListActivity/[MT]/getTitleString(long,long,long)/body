{
  final int numLikes;
  final boolean isLikedByCurrentUser;
  if (commentId == 0) {
    numLikes=ReaderPostTable.getNumLikesForPost(blogId,postId);
    isLikedByCurrentUser=ReaderPostTable.isPostLikedByCurrentUser(blogId,postId);
  }
 else {
    numLikes=ReaderCommentTable.getNumLikesForComment(blogId,postId,commentId);
    isLikedByCurrentUser=ReaderCommentTable.isCommentLikedByCurrentUser(blogId,postId,commentId);
  }
  if (isLikedByCurrentUser) {
switch (numLikes) {
case 1:
      return getString(R.string.reader_likes_only_you);
case 2:
    return getString(R.string.reader_likes_you_and_one);
default :
  return getString(R.string.reader_likes_you_and_multi,numLikes - 1);
}
}
 else {
return (numLikes == 1 ? getString(R.string.reader_likes_one) : getString(R.string.reader_likes_multi,numLikes));
}
}
