{
  super.onCreate(null);
  createMenuDrawer(R.layout.notifications_activity);
  if (savedInstanceState == null) {
    AnalyticsTracker.track(AnalyticsTracker.Stat.NOTIFICATIONS_ACCESSED);
  }
  FragmentManager fm=getFragmentManager();
  if (fm.findFragmentByTag(TAG_LIST_VIEW) != null) {
    mNotesListFragment=(NotificationsListFragment)fm.findFragmentByTag(TAG_LIST_VIEW);
  }
 else {
    mNotesListFragment=new NotificationsListFragment();
    FragmentTransaction fragmentTransaction=fm.beginTransaction();
    fragmentTransaction.add(R.id.layout_fragment_container,mNotesListFragment,TAG_LIST_VIEW);
    fragmentTransaction.commit();
  }
  if (DisplayUtils.isLandscapeTablet(this)) {
    if (fm.findFragmentByTag(TAG_DETAIL_VIEW) != null) {
      mTabletDetailFragment=(NotificationsDetailFragment)fm.findFragmentByTag(TAG_DETAIL_VIEW);
    }
 else {
      addDetailFragment();
    }
  }
  ActionBar actionBar=getActionBar();
  if (actionBar != null) {
    actionBar.setDisplayShowTitleEnabled(true);
  }
  setTitle(getResources().getString(R.string.notifications));
  fm.addOnBackStackChangedListener(mOnBackStackChangedListener);
  mNotesListFragment.setOnNoteClickListener(new NoteClickListener());
  GCMIntentService.clearNotificationsMap();
  if (savedInstanceState != null) {
    mHasPerformedInitialUpdate=savedInstanceState.getBoolean(KEY_INITIAL_UPDATE);
  }
 else {
    launchWithNoteId();
  }
  getWindow().setBackgroundDrawable(null);
  if (SimperiumUtils.isUserNotAuthorized()) {
    AuthenticationDialogUtils.showAuthErrorDialog(this,R.string.sign_in_again,R.string.simperium_connection_error);
  }
}
