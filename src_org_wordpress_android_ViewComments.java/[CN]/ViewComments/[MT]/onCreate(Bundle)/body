{
  super.onCreate(icicle);
  setContentView(R.layout.moderatecomments);
  boolean fromNotification=false;
  Bundle extras=getIntent().getExtras();
  if (extras != null) {
    id=extras.getString("id");
    blog=new Blog(id,this);
    pd=new ProgressDialog(this);
    fromNotification=extras.getBoolean("fromNotification",false);
  }
  TextView blogname=(TextView)findViewById(R.id.blogname);
  blogname.setText(blog.getBlogName());
  ImageButton home=(ImageButton)findViewById(R.id.home_small);
  ImageButton add=(ImageButton)findViewById(R.id.add_small);
  home.setOnClickListener(new OnClickListener(){
    public void onClick(    View v){
      Intent i=new Intent(ViewComments.this,wpAndroid.class);
      startActivity(i);
    }
  }
);
  final ActionItem newpost=new ActionItem();
  newpost.setTitle("Add New Post");
  newpost.setIcon(getResources().getDrawable(R.drawable.posts_tab));
  newpost.setOnClickListener(new OnClickListener(){
    public void onClick(    View v){
      Intent i=new Intent(ViewComments.this,EditPost.class);
      i.putExtra("accountName",accountName);
      i.putExtra("id",id);
      i.putExtra("isNew",true);
      startActivityForResult(i,0);
    }
  }
);
  final ActionItem newpage=new ActionItem();
  newpage.setTitle("Add New Page");
  newpage.setIcon(getResources().getDrawable(R.drawable.pages_tab));
  newpage.setOnClickListener(new OnClickListener(){
    public void onClick(    View v){
      Intent i=new Intent(ViewComments.this,EditPost.class);
      i.putExtra("accountName",accountName);
      i.putExtra("id",id);
      i.putExtra("isNew",true);
      i.putExtra("isPage",true);
      startActivityForResult(i,0);
    }
  }
);
  final ActionItem addOldPhoto=new ActionItem();
  addOldPhoto.setTitle("Add Image From Gallery");
  addOldPhoto.setIcon(getResources().getDrawable(R.drawable.media));
  addOldPhoto.setOnClickListener(new OnClickListener(){
    public void onClick(    View v){
      Intent i=new Intent(ViewComments.this,EditPost.class);
      i.putExtra("accountName",accountName);
      i.putExtra("id",id);
      i.putExtra("isNew",true);
      i.putExtra("viewPages",true);
      i.putExtra("option","photoPicker");
      startActivityForResult(i,0);
    }
  }
);
  final ActionItem takeNewPhoto=new ActionItem();
  takeNewPhoto.setTitle("Take Photo");
  takeNewPhoto.setIcon(getResources().getDrawable(R.drawable.media));
  takeNewPhoto.setOnClickListener(new OnClickListener(){
    public void onClick(    View v){
      Intent i=new Intent(ViewComments.this,EditPost.class);
      i.putExtra("accountName",accountName);
      i.putExtra("id",id);
      i.putExtra("isNew",true);
      i.putExtra("viewPages",true);
      i.putExtra("option","takePhotoFromCamera");
      startActivityForResult(i,0);
    }
  }
);
  final ActionItem addOldVideo=new ActionItem();
  addOldVideo.setTitle("Add Video from Gallery");
  addOldVideo.setIcon(getResources().getDrawable(R.drawable.media));
  addOldVideo.setOnClickListener(new OnClickListener(){
    public void onClick(    View v){
      Intent i=new Intent(ViewComments.this,EditPost.class);
      i.putExtra("accountName",accountName);
      i.putExtra("id",id);
      i.putExtra("isNew",true);
      i.putExtra("viewPages",true);
      i.putExtra("option","videoPicker");
      startActivityForResult(i,0);
    }
  }
);
  final ActionItem takeNewVideo=new ActionItem();
  takeNewVideo.setTitle("Take Video");
  takeNewVideo.setIcon(getResources().getDrawable(R.drawable.media));
  takeNewVideo.setOnClickListener(new OnClickListener(){
    public void onClick(    View v){
      Intent i=new Intent(ViewComments.this,EditPost.class);
      i.putExtra("accountName",accountName);
      i.putExtra("id",id);
      i.putExtra("isNew",true);
      i.putExtra("viewPages",true);
      i.putExtra("option","takeVideo");
      startActivityForResult(i,0);
    }
  }
);
  add.setOnClickListener(new View.OnClickListener(){
    public void onClick(    View v){
      QuickAction qa=new QuickAction(v);
      qa.addActionItem(newpost);
      qa.addActionItem(newpage);
      qa.addActionItem(addOldPhoto);
      qa.addActionItem(takeNewPhoto);
      qa.addActionItem(addOldVideo);
      qa.addActionItem(takeNewVideo);
      qa.setAnimStyle(QuickAction.ANIM_AUTO);
      qa.show();
    }
  }
);
  switcher=new ViewSwitcher(this);
  Button footer=(Button)View.inflate(this,R.layout.list_footer_btn,null);
  footer.setText(getResources().getText(R.string.load_more) + " " + getResources().getText(R.string.tab_comments));
  footer.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      switcher.showNext();
      refreshComments(true,false,false);
    }
  }
);
  View progress=View.inflate(this,R.layout.list_footer_progress,null);
  switcher.addView(footer);
  switcher.addView(progress);
  if (fromNotification) {
  }
  this.setTitle(accountName + " - Moderate Comments");
  boolean loadedComments=loadComments(false,false);
  if (!loadedComments) {
    refreshComments(false,false,false);
  }
  Button deleteComments=(Button)findViewById(R.id.deleteComment);
  deleteComments.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      showDialog(ID_DIALOG_DELETING);
      new Thread(){
        public void run(){
          Looper.prepare();
          deleteComments();
        }
      }
.start();
    }
  }
);
  Button approveComments=(Button)findViewById(R.id.approveComment);
  approveComments.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      showDialog(ID_DIALOG_MODERATING);
      new Thread(){
        public void run(){
          Looper.prepare();
          moderateComments("approve");
        }
      }
.start();
    }
  }
);
  Button unapproveComments=(Button)findViewById(R.id.unapproveComment);
  unapproveComments.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      showDialog(ID_DIALOG_MODERATING);
      new Thread(){
        public void run(){
          Looper.prepare();
          moderateComments("hold");
        }
      }
.start();
    }
  }
);
  Button spamComments=(Button)findViewById(R.id.markSpam);
  spamComments.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      showDialog(ID_DIALOG_MODERATING);
      new Thread(){
        public void run(){
          Looper.prepare();
          moderateComments("spam");
        }
      }
.start();
    }
  }
);
}
