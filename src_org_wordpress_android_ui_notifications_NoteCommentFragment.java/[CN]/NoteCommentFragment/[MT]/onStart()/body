{
  super.onStart();
  httpClient.get(getNote().getIconURL(),new BitmapResponseHandler(){
    @Override public void onSuccess(    int statusCode,    Bitmap bitmap){
      mFollowRow.getImageView().setImageBitmap(bitmap);
    }
  }
);
  SpannableStringBuilder html=(SpannableStringBuilder)getNote().getCommentBody();
  Html.ImageGetter imgGetter=new AsyncImageGetter(mCommentText);
  ImageSpan imgs[]=html.getSpans(0,html.length(),ImageSpan.class);
  for (  ImageSpan img : imgs) {
    ImageSpan remote=new ImageSpan(imgGetter.getDrawable(img.getSource()),img.getSource());
    html.setSpan(remote,html.getSpanStart(img),html.getSpanEnd(img),html.getSpanFlags(img));
    html.removeSpan(img);
  }
  mCommentText.setText(html);
  mCommentText.setMovementMethod(LinkMovementMethod.getInstance());
  mReplyField.setOnReplyListener(mReplyListener);
  mDetailHeader.setText(getNote().getSubject());
  String url=getNote().queryJSON("body.items[last].header_link","");
  if (!url.equals("")) {
    mDetailHeader.setUrl(url);
  }
  JSONObject followAction=getNote().queryJSON("body.items[last].action",new JSONObject());
  mFollowRow.setDefaultText(getNote().queryJSON("body.items[-1].header_text",""));
  mFollowRow.setAction(followAction);
  mFollowRow.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (mFollowRow.hasParams()) {
        Intent intent=new Intent(Intent.ACTION_VIEW,Uri.parse(mFollowRow.getSiteUrl()));
        startActivity(intent);
      }
    }
  }
);
  mFollowRow.setListener(new FollowListener());
  Bundle arguments=getArguments();
  if (arguments != null && arguments.containsKey(NotificationsActivity.NOTE_REPLY_EXTRA)) {
    mReplyField.setText(arguments.getString(NotificationsActivity.NOTE_REPLY_EXTRA));
    mReplyField.requestFocus();
  }
}
