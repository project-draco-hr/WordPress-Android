{
  if (db == null) {
    return new Vector<>();
  }
  if (shouldHideJetpack) {
    String hideJetpackArgs="NOT(dotcomFlag=0 AND wpVersion='' AND blogId!=1)";
    if (TextUtils.isEmpty(byString)) {
      byString=hideJetpackArgs;
    }
 else {
      byString=hideJetpackArgs + " AND " + byString;
    }
  }
  String limitStr=null;
  if (limit != 0) {
    limitStr=String.valueOf(limit);
  }
  String[] baseFields=new String[]{"id","blogName","username","blogId","url"};
  String[] allFields=baseFields;
  if (extraFields != null) {
    allFields=(String[])ArrayUtils.addAll(baseFields,extraFields);
  }
  Cursor c=db.query(BLOGS_TABLE,allFields,byString,null,null,null,null,limitStr);
  int numRows=c.getCount();
  c.moveToFirst();
  List<Map<String,Object>> blogs=new Vector<>();
  for (int i=0; i < numRows; i++) {
    int id=c.getInt(0);
    String blogName=c.getString(1);
    String username=c.getString(2);
    int blogId=c.getInt(3);
    String url=c.getString(4);
    if (id > 0) {
      Map<String,Object> blogMap=new HashMap<>();
      blogMap.put("id",id);
      blogMap.put("blogName",blogName);
      blogMap.put("username",username);
      blogMap.put("blogId",blogId);
      blogMap.put("url",url);
      int extraFieldsIndex=baseFields.length;
      if (extraFields != null) {
        for (int j=0; j < extraFields.length; ++j) {
          blogMap.put(extraFields[j],c.getString(extraFieldsIndex + j));
        }
      }
      blogs.add(blogMap);
    }
    c.moveToNext();
  }
  c.close();
  Collections.sort(blogs,BlogUtils.BlogNameComparator);
  return blogs;
}
