{
  setBlogId(blogId);
  setDate(StatsUtils.toMs(date));
  setGroupId(groupJSON.getString("group"));
  setName(groupJSON.getString("name"));
  setTotal(groupJSON.getInt("total"));
  if (groupJSON.has("icon") && !groupJSON.getString("icon").equals("null")) {
    setIcon(groupJSON.getString("icon"));
  }
  if (groupJSON.has("url") && !groupJSON.getString("url").equals("null")) {
    setUrl(groupJSON.getString("url"));
  }
 else {
    JSONArray resultsJSON=groupJSON.getJSONArray("results");
    mResults=new ArrayList<>();
    for (int i=0; i < resultsJSON.length(); i++) {
      JSONObject currentResultJSON=resultsJSON.getJSONObject(i);
      if (currentResultJSON.has("children")) {
        JSONArray currentResultChildensJSON=currentResultJSON.getJSONArray("children");
        for (int j=0; j < currentResultChildensJSON.length(); j++) {
          JSONObject currentChild=currentResultChildensJSON.getJSONObject(j);
          mResults.add(getChildren(blogId,date,currentChild));
        }
      }
 else {
        mResults.add(getChildren(blogId,date,currentResultJSON));
      }
    }
    Collections.sort(mResults,new java.util.Comparator<SingleItemModel>(){
      public int compare(      SingleItemModel o1,      SingleItemModel o2){
        return o2.getTotals() - o1.getTotals();
      }
    }
);
  }
}
