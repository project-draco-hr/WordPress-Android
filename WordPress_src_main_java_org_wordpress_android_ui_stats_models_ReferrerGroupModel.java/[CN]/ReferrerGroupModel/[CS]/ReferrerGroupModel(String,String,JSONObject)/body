{
  setBlogId(blogId);
  setDate(StatsUtils.toMs(date));
  setGroupId(groupJSON.getString("group"));
  setName(groupJSON.getString("name"));
  setTotal(groupJSON.getInt("total"));
  setIcon(JSONUtils.getString(groupJSON,"icon"));
  if (!TextUtils.isEmpty(JSONUtils.getString(groupJSON,"url"))) {
    setUrl(JSONUtils.getString(groupJSON,"url"));
  }
 else {
    mResults=new ArrayList<>();
    JSONArray resultsJSON=groupJSON.getJSONArray("results");
    for (int i=0; i < resultsJSON.length(); i++) {
      JSONObject currentResultJSON=resultsJSON.getJSONObject(i);
      ReferrerResultModel currentResultModel=new ReferrerResultModel(blogId,date,currentResultJSON);
      mResults.add(currentResultModel);
    }
    Collections.sort(mResults,new java.util.Comparator<ReferrerResultModel>(){
      public int compare(      ReferrerResultModel o1,      ReferrerResultModel o2){
        return o2.getViews() - o1.getViews();
      }
    }
);
  }
}
