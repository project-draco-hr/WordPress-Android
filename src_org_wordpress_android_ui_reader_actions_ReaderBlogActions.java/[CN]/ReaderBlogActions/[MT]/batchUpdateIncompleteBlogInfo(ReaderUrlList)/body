{
  if (requestUrls == null || requestUrls.size() == 0) {
    return;
  }
  RestRequest.Listener listener=new RestRequest.Listener(){
    @Override public void onResponse(    JSONObject jsonObject){
      if (jsonObject == null) {
        return;
      }
      SQLiteDatabase db=ReaderDatabase.getWritableDb();
      db.beginTransaction();
      try {
        int numUpdated=0;
        for (        String url : requestUrls) {
          JSONObject jsonSite=jsonObject.optJSONObject(url);
          ReaderBlogInfo blogInfo=ReaderBlogInfo.fromJson(jsonSite);
          if (!blogInfo.isIncomplete()) {
            ReaderBlogTable.setBlogInfo(blogInfo);
            numUpdated++;
          }
        }
        AppLog.d(T.READER,String.format("updated info for %d incomplete blogs",numUpdated));
        db.setTransactionSuccessful();
      }
  finally {
        db.endTransaction();
      }
    }
  }
;
  RestRequest.ErrorListener errorListener=new RestRequest.ErrorListener(){
    @Override public void onErrorResponse(    VolleyError volleyError){
      AppLog.e(T.READER,volleyError);
    }
  }
;
  AppLog.d(T.READER,String.format("requesting info for %d incomplete blogs",requestUrls.size()));
  String path=ReaderUtils.getBatchEndpointForRequests(requestUrls);
  WordPress.getRestClientUtils().get(path,listener,errorListener);
}
