{
  final ReaderUrlList urls=new ReaderUrlList();
  final ReaderBlogInfoList followedBlogs=ReaderBlogTable.getAllFollowedBlogInfo();
  for (  ReaderBlogInfo info : followedBlogs) {
    if (info.isIncomplete()) {
      if (info.hasBlogId()) {
        urls.add("/sites/" + info.blogId);
      }
 else       if (info.hasUrl()) {
        String domain=UrlUtils.getDomainFromUrl(UrlUtils.normalizeUrl(info.getUrl()));
        urls.add("/sites/" + domain);
      }
      if (urls.size() >= MAX_INCOMPLETE) {
        break;
      }
    }
  }
  if (urls.size() == 0) {
    return;
  }
  StringBuilder sbBatch=new StringBuilder("/batch/");
  boolean isFirst=true;
  for (  String url : urls) {
    if (isFirst) {
      isFirst=false;
      sbBatch.append("?");
    }
 else {
      sbBatch.append("&");
    }
    sbBatch.append("urls%5B%5D=").append(Uri.encode(url));
  }
  RestRequest.Listener listener=new RestRequest.Listener(){
    @Override public void onResponse(    JSONObject jsonObject){
      if (jsonObject != null) {
        SQLiteDatabase db=ReaderDatabase.getWritableDb();
        db.beginTransaction();
        try {
          for (          String url : urls) {
            JSONObject jsonSite=jsonObject.optJSONObject(url);
            if (jsonSite != null) {
              ReaderBlogInfo blogInfo=ReaderBlogInfo.fromJson(jsonSite);
              ReaderBlogTable.setBlogInfo(blogInfo);
            }
          }
          db.setTransactionSuccessful();
        }
  finally {
          db.endTransaction();
        }
      }
    }
  }
;
  RestRequest.ErrorListener errorListener=new RestRequest.ErrorListener(){
    @Override public void onErrorResponse(    VolleyError volleyError){
      AppLog.e(T.READER,volleyError);
    }
  }
;
  AppLog.d(T.READER,String.format("updating info for %d incomplete blogs",urls.size()));
  WordPress.getRestClientUtils().get(sbBatch.toString(),listener,errorListener);
}
