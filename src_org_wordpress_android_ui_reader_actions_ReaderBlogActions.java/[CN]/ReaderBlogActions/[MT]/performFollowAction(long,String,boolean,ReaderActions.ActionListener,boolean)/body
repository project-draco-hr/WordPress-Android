{
  final boolean hasBlogId=(blogId != 0);
  final boolean hasBlogUrl=!TextUtils.isEmpty(blogUrl);
  if (!hasBlogId && !hasBlogUrl) {
    AppLog.w(T.READER,"follow action performed without blogId or blogUrl");
    if (actionListener != null) {
      actionListener.onActionResult(false);
    }
    return false;
  }
  ReaderBlogTable.setIsFollowedBlog(blogId,blogUrl,isAskingToFollow);
  ReaderPostTable.setFollowStatusForPostsInBlog(blogId,blogUrl,isAskingToFollow);
  if (!hasBlogId && canLookupBlogInfo) {
    lookupBlogIdAndRetryFollow(blogUrl,isAskingToFollow,actionListener);
    return true;
  }
  if (isAskingToFollow) {
    AnalyticsTracker.track(AnalyticsTracker.Stat.READER_FOLLOWED_SITE);
  }
  final String path=getFollowEndpoint(blogId,blogUrl,isAskingToFollow);
  final String actionName=(isAskingToFollow ? "follow" : "unfollow");
  com.wordpress.rest.RestRequest.Listener listener=new RestRequest.Listener(){
    @Override public void onResponse(    JSONObject jsonObject){
      boolean success=isFollowActionSuccessful(jsonObject,isAskingToFollow);
      if (success) {
        AppLog.d(T.READER,"blog " + actionName + " succeeded");
      }
 else {
        AppLog.w(T.READER,"blog " + actionName + " failed");
        localRevertFollowAction(blogId,blogUrl,isAskingToFollow);
      }
      if (actionListener != null) {
        actionListener.onActionResult(success);
      }
    }
  }
;
  RestRequest.ErrorListener errorListener=new RestRequest.ErrorListener(){
    @Override public void onErrorResponse(    VolleyError volleyError){
      AppLog.w(T.READER,"blog " + actionName + " failed");
      AppLog.e(T.READER,volleyError);
      localRevertFollowAction(blogId,blogUrl,isAskingToFollow);
      if (actionListener != null) {
        actionListener.onActionResult(false);
      }
    }
  }
;
  WordPress.getRestClientUtils().post(path,listener,errorListener);
  return true;
}
