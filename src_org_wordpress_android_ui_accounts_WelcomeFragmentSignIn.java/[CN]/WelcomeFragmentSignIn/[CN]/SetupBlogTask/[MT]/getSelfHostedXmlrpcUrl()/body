{
  String xmlrpcUrl=null;
  String url=mUrlEditText.getText().toString().trim();
  if (!(url.toLowerCase().startsWith("http://")) && !(url.toLowerCase().startsWith("https://"))) {
    url="http://" + url;
  }
  if (!URLUtil.isValidUrl(url)) {
    mErrorMsg=getString(R.string.invalid_url_message);
    return null;
  }
  String rsdUrl=ApiHelper.getRSDMetaTagHrefRegEx(url);
  if (rsdUrl == null) {
    rsdUrl=ApiHelper.getRSDMetaTagHref(url);
  }
  if (rsdUrl != null) {
    xmlrpcUrl=ApiHelper.getXMLRPCUrl(rsdUrl);
    if (xmlrpcUrl == null)     xmlrpcUrl=rsdUrl.replace("?rsd","");
  }
 else {
    try {
      XMLRPCClient client=new XMLRPCClient(url,mHttpUsername,mHttpPassword);
      try {
        client.call("system.listMethods");
        xmlrpcUrl=url;
        mIsCustomUrl=true;
      }
 catch (      XMLRPCException e) {
        if (e.getMessage().contains("401")) {
          mHttpAuthRequired=true;
          return null;
        }
        String guessURL=url;
        if (guessURL.substring(guessURL.length() - 1,guessURL.length()).equals("/")) {
          guessURL=guessURL.substring(0,guessURL.length() - 1);
        }
        guessURL+="/xmlrpc.php";
        client=new XMLRPCClient(guessURL,mHttpUsername,mHttpPassword);
        try {
          client.call("system.listMethods");
          xmlrpcUrl=guessURL;
        }
 catch (        XMLRPCException ex) {
        }
      }
    }
 catch (    Exception e) {
    }
  }
  return xmlrpcUrl;
}
