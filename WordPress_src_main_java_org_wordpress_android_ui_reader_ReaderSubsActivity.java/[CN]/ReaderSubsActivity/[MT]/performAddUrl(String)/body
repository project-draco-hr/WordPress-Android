{
  if (!NetworkUtils.checkConnection(this)) {
    return;
  }
  showAddUrlProgress();
  ReaderActions.OnCheckUrlReachableListener urlListener=new ReaderActions.OnCheckUrlReachableListener(){
    @Override public void onSuccess(){
      if (!isFinishing()) {
        followBlogUrl(blogUrl);
      }
    }
    @Override public void onFailed(    int statusCode){
      if (!isFinishing()) {
        hideAddUrlProgress();
        String errMsg;
switch (statusCode) {
case 401:
          errMsg=getString(R.string.reader_toast_err_follow_blog_not_authorized);
        break;
case 0:
case 404:
      errMsg=getString(R.string.reader_toast_err_follow_blog_not_found);
    break;
default :
  errMsg=getString(R.string.reader_toast_err_follow_blog) + " (" + Integer.toString(statusCode)+ ")";
break;
}
ToastUtils.showToast(ReaderSubsActivity.this,errMsg);
}
}
}
;
ReaderBlogActions.checkUrlReachable(blogUrl,urlListener);
}
