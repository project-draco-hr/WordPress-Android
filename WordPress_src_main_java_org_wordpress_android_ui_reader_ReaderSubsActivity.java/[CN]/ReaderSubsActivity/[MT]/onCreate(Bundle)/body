{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.reader_activity_subs);
  restoreState(savedInstanceState);
  mViewPager=(ViewPager)findViewById(R.id.viewpager);
  mViewPager.setAdapter(getPageAdapter());
  TabLayout tabLayout=(TabLayout)findViewById(R.id.tab_layout);
  tabLayout.setTabMode(TabLayout.MODE_SCROLLABLE);
  int normalColor=getResources().getColor(R.color.blue_light);
  int selectedColor=getResources().getColor(R.color.white);
  tabLayout.setTabTextColors(normalColor,selectedColor);
  tabLayout.setTabMode(TabLayout.MODE_SCROLLABLE);
  tabLayout.setupWithViewPager(mViewPager);
  Toolbar toolbar=(Toolbar)findViewById(R.id.toolbar);
  setSupportActionBar(toolbar);
  toolbar.setNavigationOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      onBackPressed();
    }
  }
);
  getSupportActionBar().setDisplayShowTitleEnabled(true);
  getSupportActionBar().setDisplayHomeAsUpEnabled(true);
  mEditAdd=(EditText)findViewById(R.id.edit_add);
  mEditAdd.setOnEditorActionListener(new TextView.OnEditorActionListener(){
    @Override public boolean onEditorAction(    TextView v,    int actionId,    KeyEvent event){
      if (actionId == EditorInfo.IME_ACTION_DONE) {
        addCurrentEntry();
      }
      return false;
    }
  }
);
  mBtnAdd=(ImageButton)findViewById(R.id.btn_add);
  mBtnAdd.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      addCurrentEntry();
    }
  }
);
  if (savedInstanceState == null) {
    restorePreviousPage();
  }
  mViewPager.addOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener(){
    @Override public void onPageSelected(    int position){
      String pageTitle=(String)getPageAdapter().getPageTitle(position);
      AppPrefs.setReaderSubsPageTitle(pageTitle);
    }
  }
);
}
