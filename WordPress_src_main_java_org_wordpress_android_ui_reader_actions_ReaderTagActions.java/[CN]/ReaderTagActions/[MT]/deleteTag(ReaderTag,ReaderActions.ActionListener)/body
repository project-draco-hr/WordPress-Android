{
  if (tag == null || tag.tagType == ReaderTagType.DEFAULT) {
    ReaderActions.callActionListener(actionListener,false);
    return false;
  }
  final String tagNameForApi=ReaderUtils.sanitizeWithDashes(tag.getTagSlug());
  final String path="read/tags/" + tagNameForApi + "/mine/delete";
  ReaderTagTable.deleteTag(tag);
  com.wordpress.rest.RestRequest.Listener listener=new RestRequest.Listener(){
    @Override public void onResponse(    JSONObject jsonObject){
      AppLog.i(T.READER,"delete tag succeeded");
      ReaderActions.callActionListener(actionListener,true);
    }
  }
;
  RestRequest.ErrorListener errorListener=new RestRequest.ErrorListener(){
    @Override public void onErrorResponse(    VolleyError volleyError){
      String error=VolleyUtils.errStringFromVolleyError(volleyError);
      if (error.equals("not_subscribed")) {
        AppLog.w(T.READER,"delete tag succeeded with error " + error);
        ReaderActions.callActionListener(actionListener,true);
        return;
      }
      AppLog.w(T.READER," delete tag failed");
      AppLog.e(T.READER,volleyError);
      ReaderTagTable.addOrUpdateTag(tag);
      ReaderActions.callActionListener(actionListener,false);
    }
  }
;
  WordPress.getRestClientUtilsV1_1().post(path,listener,errorListener);
  return true;
}
