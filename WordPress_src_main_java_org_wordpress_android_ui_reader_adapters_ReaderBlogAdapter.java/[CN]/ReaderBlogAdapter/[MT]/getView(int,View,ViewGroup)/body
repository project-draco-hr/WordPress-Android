{
  final BlogViewHolder holder;
  if (convertView == null || !(convertView.getTag() instanceof BlogViewHolder)) {
    convertView=mInflater.inflate(R.layout.reader_listitem_blog,parent,false);
    holder=new BlogViewHolder(convertView);
    convertView.setTag(holder);
  }
 else {
    holder=(BlogViewHolder)convertView.getTag();
  }
  final boolean isFollowing;
switch (getBlogType()) {
case RECOMMENDED:
    final ReaderRecommendedBlog blog=(ReaderRecommendedBlog)getItem(position);
  isFollowing=ReaderBlogTable.isFollowedBlog(blog.blogId,blog.getBlogUrl());
holder.txtTitle.setText(blog.getTitle());
holder.txtDescription.setText(blog.getReason());
holder.txtUrl.setText(UrlUtils.getDomainFromUrl(blog.getBlogUrl()));
holder.imgBlog.setImageUrl(blog.getImageUrl(),WPNetworkImageView.ImageType.SITE_AVATAR);
break;
case FOLLOWED:
final ReaderBlog blogInfo=(ReaderBlog)getItem(position);
isFollowing=blogInfo.isFollowing;
String domain=UrlUtils.getDomainFromUrl(blogInfo.getUrl());
if (blogInfo.hasName()) {
holder.txtTitle.setText(blogInfo.getName());
}
 else {
holder.txtTitle.setText(domain);
}
holder.txtUrl.setText(domain);
holder.imgBlog.setImageUrl(blogInfo.getImageUrl(),WPNetworkImageView.ImageType.SITE_AVATAR);
break;
default :
isFollowing=false;
break;
}
ReaderUtils.showFollowStatus(holder.txtFollow,isFollowing);
holder.txtFollow.setOnClickListener(new View.OnClickListener(){
@Override public void onClick(View v){
boolean isAskingToFollow=!isFollowing;
TextView txtFollow=(TextView)v;
ReaderAnim.animateFollowButton(txtFollow,isAskingToFollow);
changeFollowStatus(txtFollow,position,isAskingToFollow);
}
}
);
return convertView;
}
