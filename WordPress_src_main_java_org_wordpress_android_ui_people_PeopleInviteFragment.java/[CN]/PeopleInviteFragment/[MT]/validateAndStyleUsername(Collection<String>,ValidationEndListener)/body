{
  List<String> usernamesToCheck=new ArrayList<>();
  for (  String username : usernames) {
    if (mUsernameResults.containsKey(username)) {
      String resultMessage=mUsernameResults.get(username);
      styleButton(username,resultMessage);
      updateUsernameError(username,resultMessage);
    }
 else {
      styleButton(username,null);
      updateUsernameError(username,null);
      usernamesToCheck.add(username);
    }
  }
  if (usernamesToCheck.size() > 0) {
    String dotComBlogId=getArguments().getString(ARG_BLOGID);
    PeopleUtils.validateUsernames(usernamesToCheck,mRole,dotComBlogId,new PeopleUtils.ValidateUsernameCallback(){
      @Override public void onUsernameValidation(      String username,      ValidationResult validationResult){
        if (!isAdded()) {
          return;
        }
        if (!isUserInInvitees(username)) {
          return;
        }
        final String usernameResultString=getValidationErrorString(username,validationResult);
        mUsernameResults.put(username,usernameResultString);
        styleButton(username,usernameResultString);
        updateUsernameError(username,usernameResultString);
      }
      @Override public void onValidationFinished(){
        if (validationEndListener != null) {
          validationEndListener.onValidationEnd();
        }
      }
      @Override public void onError(){
      }
    }
);
  }
 else {
    if (validationEndListener != null) {
      validationEndListener.onValidationEnd();
    }
  }
}
