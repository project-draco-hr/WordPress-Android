{
  final ViewGroup rootView=(ViewGroup)inflater.inflate(R.layout.people_invite_fragment,container,false);
  final ViewGroup usernamesView=(ViewGroup)rootView.findViewById(R.id.usernames);
  if (savedInstanceState != null) {
    ArrayList<String> usernames=savedInstanceState.getStringArrayList(KEY_USERNAMES);
    populateUsernameButtons(usernames,inflater,usernamesView);
    mRole=savedInstanceState.getString(KEY_ROLE);
  }
  if (mRole == null) {
    final String[] roles=getResources().getStringArray(R.array.roles);
    mRole=roles[roles.length - 1];
  }
  final EditText editText=(EditText)rootView.findViewById(R.id.invite_usernames);
  editText.addTextChangedListener(new TextWatcher(){
    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
      Log.d("INVITE","beforeTextChanged: " + count + " char(s): "+ s.toString());
    }
    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
      if (editText.getText().toString().endsWith(" ")) {
        addUsername(editText,inflater,usernamesView);
      }
    }
    @Override public void afterTextChanged(    Editable s){
    }
  }
);
  editText.setOnEditorActionListener(new TextView.OnEditorActionListener(){
    @Override public boolean onEditorAction(    TextView v,    int actionId,    KeyEvent event){
      if (actionId == EditorInfo.IME_ACTION_DONE || (event.getAction() == KeyEvent.ACTION_UP && event.getKeyCode() == KeyEvent.KEYCODE_ENTER)) {
        addUsername(editText,inflater,usernamesView);
      }
      return true;
    }
  }
);
  View roleContainer=rootView.findViewById(R.id.role_container);
  roleContainer.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      RoleChangeDialogFragment.show(PeopleInviteFragment.this,0,0,mRole,0);
    }
  }
);
  mRoleTextView=(TextView)rootView.findViewById(R.id.role);
  mRoleTextView.setText(mRole);
  return rootView;
}
