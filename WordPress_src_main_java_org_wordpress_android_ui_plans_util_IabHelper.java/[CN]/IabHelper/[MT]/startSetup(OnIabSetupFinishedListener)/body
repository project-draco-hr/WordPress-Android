{
  checkNotDisposed();
  if (mSetupDone)   throw new IllegalStateException("IAB helper is already set up.");
  logDebug("Starting in-app billing setup.");
  mServiceConn=new ServiceConnection(){
    @Override public void onServiceDisconnected(    ComponentName name){
      logDebug("Billing service disconnected.");
      mService=null;
    }
    @Override public void onServiceConnected(    ComponentName name,    IBinder service){
      if (mDisposed)       return;
      logDebug("Billing service connected.");
      mService=IInAppBillingService.Stub.asInterface(service);
      String packageName=mContext.getPackageName();
      try {
        logDebug("Checking for in-app billing 3 support.");
        int response=mService.isBillingSupported(3,packageName,ITEM_TYPE_INAPP);
        if (response != BILLING_RESPONSE_RESULT_OK) {
          if (listener != null)           listener.onIabSetupFinished(new IabResult(response,"Error checking for billing v3 support."));
          mSubscriptionsSupported=false;
          mSubscriptionUpdateSupported=false;
          return;
        }
 else {
          logDebug("In-app billing version 3 supported for " + packageName);
        }
        response=mService.isBillingSupported(5,packageName,ITEM_TYPE_SUBS);
        if (response == BILLING_RESPONSE_RESULT_OK) {
          logDebug("Subscription re-signup AVAILABLE.");
          mSubscriptionUpdateSupported=true;
        }
 else {
          logDebug("Subscription re-signup not available.");
          mSubscriptionUpdateSupported=false;
        }
        if (mSubscriptionUpdateSupported) {
          mSubscriptionsSupported=true;
        }
 else {
          response=mService.isBillingSupported(3,packageName,ITEM_TYPE_SUBS);
          if (response == BILLING_RESPONSE_RESULT_OK) {
            logDebug("Subscriptions AVAILABLE.");
            mSubscriptionsSupported=true;
          }
 else {
            logDebug("Subscriptions NOT AVAILABLE. Response: " + response);
            mSubscriptionsSupported=false;
            mSubscriptionUpdateSupported=false;
          }
        }
        mSetupDone=true;
      }
 catch (      RemoteException e) {
        if (listener != null) {
          listener.onIabSetupFinished(new IabResult(IABHELPER_REMOTE_EXCEPTION,"RemoteException while setting up in-app billing."));
        }
        e.printStackTrace();
        return;
      }
      if (listener != null) {
        listener.onIabSetupFinished(new IabResult(BILLING_RESPONSE_RESULT_OK,"Setup successful."));
      }
    }
  }
;
  Intent serviceIntent=new Intent("com.android.vending.billing.InAppBillingService.BIND");
  serviceIntent.setPackage("com.android.vending");
  if (!mContext.getPackageManager().queryIntentServices(serviceIntent,0).isEmpty()) {
    mContext.bindService(serviceIntent,mServiceConn,Context.BIND_AUTO_CREATE);
  }
 else {
    if (listener != null) {
      listener.onIabSetupFinished(new IabResult(BILLING_RESPONSE_RESULT_BILLING_UNAVAILABLE,"Billing service unavailable on device."));
    }
  }
}
