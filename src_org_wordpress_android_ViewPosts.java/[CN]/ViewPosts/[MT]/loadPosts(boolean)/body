{
  WordPressDB postStoreDB=new WordPressDB(this);
  Vector<?> loadedPosts;
  if (isPage) {
    loadedPosts=postStoreDB.loadUploadedPosts(ViewPosts.this,id,true);
  }
 else {
    loadedPosts=postStoreDB.loadUploadedPosts(ViewPosts.this,id,false);
  }
  if (loadedPosts != null) {
    titles=new String[loadedPosts.size()];
    postIDs=new String[loadedPosts.size()];
    dateCreated=new String[loadedPosts.size()];
    dateCreatedFormatted=new String[loadedPosts.size()];
  }
 else {
    titles=new String[0];
    postIDs=new String[0];
    dateCreated=new String[0];
    dateCreatedFormatted=new String[0];
    if (pla != null) {
      pla.notifyDataSetChanged();
    }
  }
  if (loadedPosts != null) {
    for (int i=0; i < loadedPosts.size(); i++) {
      HashMap<?,?> contentHash=(HashMap<?,?>)loadedPosts.get(i);
      titles[i]=EscapeUtils.unescapeHtml(contentHash.get("title").toString());
      postIDs[i]=contentHash.get("id").toString();
      dateCreated[i]=contentHash.get("date_created_gmt").toString();
      int flags=0;
      flags|=android.text.format.DateUtils.FORMAT_SHOW_DATE;
      flags|=android.text.format.DateUtils.FORMAT_ABBREV_MONTH;
      flags|=android.text.format.DateUtils.FORMAT_SHOW_YEAR;
      flags|=android.text.format.DateUtils.FORMAT_SHOW_TIME;
      long localTime=(Long)contentHash.get("date_created_gmt") + TimeZone.getDefault().getOffset((Long)contentHash.get("date_created_gmt"));
      dateCreatedFormatted[i]=DateUtils.formatDateTime(this,localTime,flags);
    }
    List<String> postIDList=Arrays.asList(postIDs);
    List<String> newPostIDList=new ArrayList<String>();
    newPostIDList.add("postsHeader");
    newPostIDList.addAll(postIDList);
    postIDs=(String[])newPostIDList.toArray(new String[newPostIDList.size()]);
    List<String> postTitleList=Arrays.asList(titles);
    List<CharSequence> newPostTitleList=new ArrayList<CharSequence>();
    newPostTitleList.add(getResources().getText((isPage) ? R.string.tab_pages : R.string.tab_posts));
    newPostTitleList.addAll(postTitleList);
    titles=(String[])newPostTitleList.toArray(new String[newPostTitleList.size()]);
    List<String> dateList=Arrays.asList(dateCreated);
    List<String> newDateList=new ArrayList<String>();
    newDateList.add("postsHeader");
    newDateList.addAll(dateList);
    dateCreated=(String[])newDateList.toArray(new String[newDateList.size()]);
    List<String> dateFormattedList=Arrays.asList(dateCreatedFormatted);
    List<String> newDateFormattedList=new ArrayList<String>();
    newDateFormattedList.add("postsHeader");
    newDateFormattedList.addAll(dateFormattedList);
    dateCreatedFormatted=(String[])newDateFormattedList.toArray(new String[newDateFormattedList.size()]);
  }
  boolean drafts=loadDrafts();
  if (drafts) {
    List<String> draftIDList=Arrays.asList(draftIDs);
    List<String> newDraftIDList=new ArrayList<String>();
    newDraftIDList.add("draftsHeader");
    newDraftIDList.addAll(draftIDList);
    draftIDs=(String[])newDraftIDList.toArray(new String[newDraftIDList.size()]);
    List<String> titleList=Arrays.asList(draftTitles);
    List<CharSequence> newTitleList=new ArrayList<CharSequence>();
    newTitleList.add(getResources().getText(R.string.local_drafts));
    newTitleList.addAll(titleList);
    draftTitles=(String[])newTitleList.toArray(new String[newTitleList.size()]);
    List<String> publishList=Arrays.asList(publish);
    List<String> newPublishList=new ArrayList<String>();
    newPublishList.add("draftsHeader");
    newPublishList.addAll(publishList);
    publish=(String[])newPublishList.toArray(new String[newPublishList.size()]);
    postIDs=StringHelper.mergeStringArrays(draftIDs,postIDs);
    titles=StringHelper.mergeStringArrays(draftTitles,titles);
    dateCreatedFormatted=StringHelper.mergeStringArrays(publish,dateCreatedFormatted);
  }
 else {
    if (pla != null) {
      pla.notifyDataSetChanged();
    }
  }
  if (loadedPosts != null || drafts == true) {
    ListView listView=(ListView)findViewById(android.R.id.list);
    if (!isPage) {
      listView.removeFooterView(switcher);
      if (loadedPosts != null) {
        if (loadedPosts.size() >= 30) {
          listView.addFooterView(switcher);
        }
      }
    }
    if (loadMore) {
      pla.notifyDataSetChanged();
    }
 else {
      pla=new PostListAdapter(ViewPosts.this);
      listView.setAdapter(pla);
      listView.setOnItemClickListener(new OnItemClickListener(){
        public void onItemClick(        AdapterView<?> arg0,        View arg1,        int arg2,        long arg3){
          if (arg1 != null) {
            arg1.performLongClick();
          }
        }
      }
);
      listView.setOnCreateContextMenuListener(new OnCreateContextMenuListener(){
        public void onCreateContextMenu(        ContextMenu menu,        View v,        ContextMenuInfo menuInfo){
          AdapterView.AdapterContextMenuInfo info;
          try {
            info=(AdapterView.AdapterContextMenuInfo)menuInfo;
          }
 catch (          ClassCastException e) {
            return;
          }
          Object[] args={R.id.row_post_id};
          try {
            Method m=android.view.View.class.getMethod("getTag");
            m.invoke(selectedID,args);
          }
 catch (          NoSuchMethodException e) {
            selectedID=info.targetView.getId();
          }
catch (          IllegalArgumentException e) {
            selectedID=info.targetView.getId();
          }
catch (          IllegalAccessException e) {
            selectedID=info.targetView.getId();
          }
catch (          InvocationTargetException e) {
            selectedID=info.targetView.getId();
          }
          rowID=info.position;
          if (totalDrafts > 0 && rowID <= totalDrafts && rowID != 0) {
            menu.clear();
            menu.setHeaderTitle(getResources().getText(R.string.draft_actions));
            menu.add(1,0,0,getResources().getText(R.string.edit_draft));
            menu.add(1,1,0,getResources().getText(R.string.upload));
            menu.add(1,2,0,getResources().getText(R.string.delete_draft));
          }
 else           if (rowID == 1 || ((rowID != (totalDrafts + 1)) && rowID != 0)) {
            menu.clear();
            if (isPage) {
              menu.setHeaderTitle(getResources().getText(R.string.page_actions));
              menu.add(2,0,0,getResources().getText(R.string.preview_page));
              menu.add(2,1,0,getResources().getText(R.string.view_comments));
              menu.add(2,2,0,getResources().getText(R.string.edit_page));
              menu.add(2,3,0,getResources().getText(R.string.delete_page));
              menu.add(2,4,0,getResources().getText(R.string.share_url));
            }
 else {
              menu.setHeaderTitle(getResources().getText(R.string.post_actions));
              menu.add(0,0,0,getResources().getText(R.string.preview_post));
              menu.add(0,1,0,getResources().getText(R.string.view_comments));
              menu.add(0,2,0,getResources().getText(R.string.edit_post));
              menu.add(0,3,0,getResources().getText(R.string.delete_post));
              menu.add(0,4,0,getResources().getText(R.string.share_url));
            }
          }
        }
      }
);
    }
    return true;
  }
 else {
    return false;
  }
}
