{
  if (!isAdded() || (!post.isLocalDraft() && !NetworkUtils.checkConnection(getActivity()))) {
    return;
  }
  final Post fullPost=WordPress.wpDB.getPostForLocalTablePostId(post.getPostId());
  if (fullPost == null) {
    ToastUtils.showToast(getActivity(),R.string.post_not_found);
    return;
  }
  getPostListAdapter().hidePost(post);
  mTrashedPosts.add(post);
  if (getPostListAdapter().getItemCount() == 0) {
    updateEmptyView(EmptyViewMessageType.NO_CONTENT);
  }
  View.OnClickListener undoListener=new View.OnClickListener(){
    @Override public void onClick(    View v){
      mTrashedPosts.remove(post);
      getPostListAdapter().unhidePost(post);
      hideEmptyView();
    }
  }
;
  String text;
  if (post.isLocalDraft()) {
    text=mIsPage ? getString(R.string.page_deleted) : getString(R.string.post_deleted);
  }
 else {
    text=mIsPage ? getString(R.string.page_trashed) : getString(R.string.post_trashed);
  }
  Snackbar snackbar=Snackbar.make(getView().findViewById(R.id.coordinator),text,Snackbar.LENGTH_LONG).setAction(R.string.undo,undoListener);
  snackbar.setCallback(new Snackbar.Callback(){
    @Override public void onDismissed(    Snackbar snackbar,    int event){
      super.onDismissed(snackbar,event);
      if (!mTrashedPosts.contains(post)) {
        return;
      }
      mTrashedPosts.remove(post);
      WordPress.wpDB.deletePost(fullPost);
      if (!post.isLocalDraft()) {
        new ApiHelper.DeleteSinglePostTask().execute(WordPress.getCurrentBlog(),fullPost.getRemotePostId(),mIsPage);
      }
    }
  }
);
  snackbar.show();
}
