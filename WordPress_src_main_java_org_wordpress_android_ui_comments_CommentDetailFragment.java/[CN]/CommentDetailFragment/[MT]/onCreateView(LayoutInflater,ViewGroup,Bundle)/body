{
  final View view=inflater.inflate(R.layout.comment_detail_fragment,container,false);
  mTxtStatus=(TextView)view.findViewById(R.id.text_status);
  mTxtContent=(TextView)view.findViewById(R.id.text_content);
  mLayoutButtons=(ViewGroup)inflater.inflate(R.layout.comment_action_footer,null,false);
  mBtnLikeComment=mLayoutButtons.findViewById(R.id.btn_like);
  mBtnLikeIcon=(ImageView)mLayoutButtons.findViewById(R.id.btn_like_icon);
  mBtnLikeTextView=(TextView)mLayoutButtons.findViewById(R.id.btn_like_text);
  mBtnModerateComment=mLayoutButtons.findViewById(R.id.btn_moderate);
  mBtnModerateIcon=(ImageView)mLayoutButtons.findViewById(R.id.btn_moderate_icon);
  mBtnModerateTextView=(TextView)mLayoutButtons.findViewById(R.id.btn_moderate_text);
  mBtnSpamComment=(TextView)mLayoutButtons.findViewById(R.id.text_btn_spam);
  mBtnTrashComment=(TextView)mLayoutButtons.findViewById(R.id.image_trash_comment);
  setTextDrawable(mBtnSpamComment,R.drawable.ic_action_spam);
  setTextDrawable(mBtnTrashComment,R.drawable.ic_action_trash);
  mLayoutReply=(ViewGroup)view.findViewById(R.id.layout_comment_box);
  mEditReply=(SuggestionAutoCompleteText)mLayoutReply.findViewById(R.id.edit_comment);
  mEditReply.getAutoSaveTextHelper().setUniqueId(String.format("%s%d%d",WordPress.getLoggedInUsername(WordPress.getCurrentBlog()),getRemoteBlogId(),getCommentId()));
  mImgSubmitReply=(ImageView)mLayoutReply.findViewById(R.id.image_post_comment);
  mBtnLikeComment.setVisibility(View.GONE);
  mLayoutButtons.setVisibility(View.GONE);
  mTxtContent.setLinksClickable(true);
  mTxtContent.setMovementMethod(WPLinkMovementMethod.getInstance());
  mEditReply.setHint(R.string.reader_hint_comment_on_comment);
  mEditReply.setOnEditorActionListener(new TextView.OnEditorActionListener(){
    @Override public boolean onEditorAction(    TextView v,    int actionId,    KeyEvent event){
      if (actionId == EditorInfo.IME_ACTION_DONE || actionId == EditorInfo.IME_ACTION_SEND)       submitReply();
      return false;
    }
  }
);
  if (!TextUtils.isEmpty(mRestoredReplyText)) {
    mEditReply.setText(mRestoredReplyText);
    mRestoredReplyText=null;
  }
  mImgSubmitReply.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      submitReply();
    }
  }
);
  mBtnSpamComment.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      moderateComment(CommentStatus.SPAM);
    }
  }
);
  mBtnTrashComment.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      moderateComment(CommentStatus.TRASH);
    }
  }
);
  mBtnLikeComment.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      likeComment();
    }
  }
);
  setupSuggestionServiceAndAdapter();
  return view;
}
