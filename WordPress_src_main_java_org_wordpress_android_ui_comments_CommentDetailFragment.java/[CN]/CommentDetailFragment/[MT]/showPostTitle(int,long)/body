{
  if (!isAdded())   return;
  final TextView txtPostTitle=(TextView)getView().findViewById(R.id.text_post_title);
  boolean postExists=ReaderPostTable.postExists(blogId,postId);
  boolean isDotComOrJetpack=WordPress.wpDB.isRemoteBlogIdDotComOrJetpack(mRemoteBlogId);
  boolean canRequestPost=isDotComOrJetpack && WordPress.hasDotComToken(getActivity());
  final String title;
  final boolean hasTitle;
  if (mComment.hasPostTitle()) {
    title=mComment.getPostTitle();
    hasTitle=true;
  }
 else   if (postExists) {
    title=ReaderPostTable.getPostTitle(blogId,postId);
    hasTitle=!TextUtils.isEmpty(title);
  }
 else {
    title=null;
    hasTitle=false;
  }
  if (hasTitle) {
    setPostTitle(txtPostTitle,title,canRequestPost);
  }
 else   if (canRequestPost) {
    txtPostTitle.setText(postExists ? R.string.untitled : R.string.loading);
  }
  if (canRequestPost) {
    if (!postExists) {
      AppLog.d(T.COMMENTS,"comment detail > retrieving post");
      ReaderPostActions.requestPost(blogId,postId,new ReaderActions.ActionListener(){
        @Override public void onActionResult(        boolean succeeded){
          if (!isAdded())           return;
          if (!hasTitle) {
            String postTitle=ReaderPostTable.getPostTitle(blogId,postId);
            if (!TextUtils.isEmpty(postTitle)) {
              setPostTitle(txtPostTitle,postTitle,true);
            }
 else {
              txtPostTitle.setText(R.string.untitled);
            }
          }
        }
      }
);
    }
    txtPostTitle.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        if (mOnPostClickListener != null) {
          mOnPostClickListener.onPostClicked(getNote(),mRemoteBlogId,(int)mComment.postID);
        }
 else {
          AppLog.i(T.COMMENTS,"comment detail > no post click listener");
          ReaderActivityLauncher.showReaderPostDetail(getActivity(),mRemoteBlogId,mComment.postID);
        }
      }
    }
);
  }
}
