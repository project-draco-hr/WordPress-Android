{
  if (!isAdded() || !hasComment())   return;
  final int statusTextResId;
  final int statusColor;
switch (mComment.getStatusEnum()) {
case APPROVED:
    statusTextResId=R.string.comment_status_approved;
  statusColor=getActivity().getResources().getColor(R.color.notification_status_unapproved_dark);
break;
case UNAPPROVED:
statusTextResId=R.string.comment_status_unapproved;
statusColor=getActivity().getResources().getColor(R.color.notification_status_unapproved_dark);
break;
case SPAM:
statusTextResId=R.string.comment_status_spam;
statusColor=getActivity().getResources().getColor(R.color.comment_status_spam);
break;
case TRASH:
default :
statusTextResId=R.string.comment_status_trash;
statusColor=getActivity().getResources().getColor(R.color.comment_status_spam);
break;
}
if (mNote != null && canLike()) {
mBtnLikeComment.setVisibility(View.VISIBLE);
toggleLikeButton(mNote.hasLikedComment());
}
 else {
mBtnLikeComment.setVisibility(View.GONE);
}
if (mIsUsersBlog && mComment.getStatusEnum() != CommentStatus.APPROVED) {
mTxtStatus.setText(getString(statusTextResId).toUpperCase());
mTxtStatus.setTextColor(statusColor);
if (mTxtStatus.getVisibility() != View.VISIBLE) {
mTxtStatus.clearAnimation();
AniUtils.fadeIn(mTxtStatus,AniUtils.Duration.LONG);
}
}
 else {
mTxtStatus.setVisibility(View.GONE);
}
if (canModerate()) {
setModerateButtonForStatus(mComment.getStatusEnum());
mBtnModerateComment.setOnClickListener(new View.OnClickListener(){
@Override public void onClick(View v){
if (!hasComment() || !isAdded() || !NetworkUtils.checkConnection(getActivity())) {
return;
}
CommentStatus newStatus=CommentStatus.APPROVED;
if (mComment.getStatusEnum() == CommentStatus.APPROVED) {
newStatus=CommentStatus.UNAPPROVED;
}
mComment.setStatus(newStatus.toString());
setModerateButtonForStatus(newStatus);
AniUtils.startAnimation(mBtnModerateIcon,R.anim.notifications_button_scale);
moderateComment(newStatus);
}
}
);
mBtnModerateComment.setVisibility(View.VISIBLE);
}
 else {
mBtnModerateComment.setVisibility(View.GONE);
}
if (canMarkAsSpam()) {
mBtnSpamComment.setVisibility(View.VISIBLE);
if (mComment.getStatusEnum() == CommentStatus.SPAM) {
mBtnSpamComment.setText(R.string.mnu_comment_unspam);
}
 else {
mBtnSpamComment.setText(R.string.mnu_comment_spam);
}
}
 else {
mBtnSpamComment.setVisibility(View.GONE);
}
if (canTrash()) {
mBtnTrashComment.setVisibility(View.VISIBLE);
if (mComment.getStatusEnum() == CommentStatus.TRASH) {
mBtnModerateIcon.setImageResource(R.drawable.ic_action_restore);
mBtnModerateTextView.setText(R.string.mnu_comment_untrash);
mBtnTrashComment.setText(R.string.mnu_comment_delete_permanently);
}
 else {
mBtnTrashComment.setText(R.string.mnu_comment_trash);
}
}
 else {
mBtnTrashComment.setVisibility(View.GONE);
}
mLayoutButtons.setVisibility(View.VISIBLE);
}
