{
  if (cursor.moveToFirst()) {
    do {
      int attachmentIdColumnIndex=cursor.getColumnIndex(WordPressDB.COLUMN_NAME_MEDIA_ID);
      int fileUrlColumnIndex=cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_URL);
      int fileNameColumnIndex=cursor.getColumnIndex(WordPressDB.COLUMN_NAME_FILE_NAME);
      int videoPressColumnIndex=cursor.getColumnIndex(WordPressDB.COLUMN_NAME_VIDEO_PRESS_SHORTCODE);
      String id="";
      if (attachmentIdColumnIndex != -1) {
        id=String.valueOf(cursor.getInt(attachmentIdColumnIndex));
      }
      MediaItem newContent=new MediaItem();
      newContent.setTag(id);
      newContent.setTitle("");
      if (fileUrlColumnIndex != -1) {
        String fileUrl=cursor.getString(fileUrlColumnIndex);
        if (fileUrl != null && MediaUtils.isVideo(fileUrl)) {
          newContent.setSource(Uri.parse(fileUrl));
        }
 else {
          continue;
        }
      }
      if (videoPressColumnIndex != -1 && fileNameColumnIndex != -1) {
        String videoPressCode=cursor.getString(videoPressColumnIndex);
        String fileName=cursor.getString(fileNameColumnIndex);
        if (videoPressCode != null && !videoPressCode.isEmpty() && fileName != null && !fileName.isEmpty()) {
          videoPressCode=extractVideoPressCode(videoPressCode);
          newContent.setPreviewSource(VIDEO_PRESS_HOST + videoPressCode + "/"+ fileName+ VIDEO_PRESS_THUMBNAIL_APPEND);
        }
      }
      mMediaItems.add(newContent);
    }
 while (cursor.moveToNext());
  }
  if (mListener != null) {
    mListener.onMediaLoaded(true);
  }
}
