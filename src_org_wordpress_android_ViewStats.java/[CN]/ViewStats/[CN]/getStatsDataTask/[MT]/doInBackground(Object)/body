{
  if (isFinishing()) {
    finish();
  }
  String apiKey=(String)args[0];
  String blogID=(String)args[1];
  reportType=(String)args[2];
  interval=(Integer)args[3];
  String DATE_FORMAT="yyyy-MM-dd";
  SimpleDateFormat sdf=new SimpleDateFormat(DATE_FORMAT);
  Calendar c1=Calendar.getInstance();
  String period="";
  if (interval == 90) {
    period="&period=week";
    interval=12;
  }
 else   if (interval == 365) {
    period="&period=month";
    interval=11;
  }
 else   if (interval == -1) {
    period="&period=month";
  }
  String uriString="https://ssl-stats.wordpress.com/csv.php" + "?api_key=" + apiKey + "&blog_id="+ blogID+ "&format=xml&table="+ reportType+ "&end="+ sdf.format(c1.getTime())+ "&days="+ interval+ "&limit=-1"+ period;
  vsoURI=uriString;
  if (!reportType.equals("views")) {
    uriString+="&summarize";
  }
  URI uri=URI.create(uriString);
  configureClient(uri,null,null);
  HttpResponse response;
  try {
    response=client.execute(postMethod);
    XmlPullParser pullParser=XmlPullParserFactory.newInstance().newPullParser();
    HttpEntity entity=response.getEntity();
    PushbackInputStream is=new PushbackInputStream(entity.getContent());
    int bomCheck=is.read();
    int stopper=0;
    while (bomCheck != 60 && stopper < 20) {
      bomCheck=is.read();
      stopper++;
    }
    is.unread(bomCheck);
    pullParser.setInput(is,"UTF-8");
    int eventType=pullParser.getEventType();
    boolean foundDataItem=false;
    int rowCount=0;
    while (eventType != XmlPullParser.END_DOCUMENT) {
      if (eventType == XmlPullParser.START_DOCUMENT) {
      }
 else       if (eventType == XmlPullParser.END_DOCUMENT) {
      }
 else       if (eventType == XmlPullParser.START_TAG) {
        String name=pullParser.getName();
        if (name.equals("views") || name.equals("postviews") || name.equals("referrers")|| name.equals("clicks")|| name.equals("searchterms")|| name.equals("videoplays")) {
        }
 else         if (pullParser.getName().equals("total")) {
          break;
        }
 else {
          foundDataItem=true;
          HashMap<String,String> dataRow=new HashMap<String,String>();
          for (int i=0; i < pullParser.getAttributeCount(); i++) {
            dataRow.put(pullParser.getAttributeName(i).toString(),pullParser.getAttributeValue(i).toString());
          }
          if (dataRow != null) {
            dataSet.add(rowCount,dataRow);
          }
        }
      }
 else       if (eventType == XmlPullParser.END_TAG) {
      }
 else       if (eventType == XmlPullParser.TEXT) {
        if (foundDataItem) {
          if (pullParser.getText().toString() == "") {
            numDataSet.add(rowCount,0);
          }
 else {
            int value=0;
            try {
              value=Integer.parseInt(pullParser.getText().toString());
            }
 catch (            NumberFormatException e) {
            }
            numDataSet.add(rowCount,value);
          }
          rowCount++;
          foundDataItem=false;
        }
      }
      eventType=pullParser.next();
    }
    return "OK";
  }
 catch (  ClientProtocolException e) {
    errorMsg=e.getMessage();
    return null;
  }
catch (  IOException e) {
    errorMsg=e.getMessage();
    return null;
  }
catch (  XmlPullParserException e) {
    errorMsg=e.getMessage();
    return null;
  }
}
