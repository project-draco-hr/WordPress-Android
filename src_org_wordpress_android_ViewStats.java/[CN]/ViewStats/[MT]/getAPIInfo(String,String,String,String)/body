{
  Vector<String> apiInfo=null;
  if (!WordPress.currentBlog.isDotcomFlag()) {
    XMLRPCClient xmlClient=new XMLRPCClient(url,WordPress.currentBlog.getHttpuser(),WordPress.currentBlog.getHttppassword(),this);
    Object[] params={WordPress.currentBlog.getUsername(),WordPress.currentBlog.getPassword()};
    try {
      Object[] result=(Object[])xmlClient.call("wp.getUsersBlogs",params);
      if (result != null) {
        if (result.length == 1) {
          HashMap<?,?> blog_info=(HashMap<?,?>)result[0];
          if (blog_info != null) {
            if (blog_info.get("url") != null) {
              String apiURL=blog_info.get("url").toString();
              URI apiURI=new URI(apiURL);
              String apiHost=apiURI.getHost().replace("www.","");
              URI localURI=new URI(url);
              String localHost=localURI.getHost().replace("www.","");
              if (localHost.equals(apiHost)) {
                url=apiURL;
              }
            }
          }
        }
 else {
          for (int i=0; i < result.length; i++) {
            HashMap<?,?> blog_info=(HashMap<?,?>)result[i];
            if (blog_info != null) {
              if (blog_info.get("url") != null) {
                String apiURL=blog_info.get("url").toString();
                URI apiURI=new URI(apiURL);
                String apiHost=apiURI.getHost().replace("www.","");
                URI localURI=new URI(url);
                String localHost=localURI.getHost().replace("www.","");
                String apiURIPath="", localURIPath="";
                if (apiURI.getPath() != null) {
                  apiURIPath=apiURI.getPath();
                }
                if (localURI.getPath() != null) {
                  if (localURI.getPath().lastIndexOf("/") > 0)                   localURIPath=localURI.getPath().substring(0,localURI.getPath().lastIndexOf("/") + 1);
                }
                if ((localHost + localURIPath).equals(apiHost + apiURIPath)) {
                  url=apiURL;
                  break;
                }
              }
            }
          }
        }
      }
    }
 catch (    XMLRPCException e) {
      url=url.replace("xmlrpc.php","");
    }
catch (    URISyntaxException e) {
      url=url.replace("xmlrpc.php","");
    }
  }
 else {
    url=url.replace("xmlrpc.php","");
  }
  String wwwURL="";
  if (url.indexOf("http://www.") >= 0) {
    wwwURL=url;
    url=url.replace("http://www.","http://");
  }
 else {
    wwwURL=url.replace("http://","http://www.");
  }
  if (!url.endsWith("/")) {
    url+="/";
    wwwURL+="/";
  }
  URI uri=URI.create("https://public-api.wordpress.com/getuserblogs.php");
  configureClient(uri,username,password);
  HttpResponse response;
  try {
    response=client.execute(postMethod);
    int statusCode=response.getStatusLine().getStatusCode();
    if (statusCode != HttpStatus.SC_OK) {
      throw new IOException("HTTP status code: " + statusCode + " was returned. "+ response.getStatusLine().getReasonPhrase());
    }
    try {
      XmlPullParser pullParser=XmlPullParserFactory.newInstance().newPullParser();
      HttpEntity entity=response.getEntity();
      PushbackInputStream is=new PushbackInputStream(entity.getContent());
      int bomCheck=is.read();
      int stopper=0;
      while (bomCheck != 60 && stopper < 20) {
        bomCheck=is.read();
        stopper++;
      }
      is.unread(bomCheck);
      pullParser.setInput(is,"UTF-8");
      int eventType=pullParser.getEventType();
      String apiKey="";
      String blogID="";
      boolean foundKey=false;
      boolean foundID=false;
      boolean foundURL=false;
      String curBlogID="";
      String curBlogURL="";
      while (eventType != XmlPullParser.END_DOCUMENT) {
        if (eventType == XmlPullParser.START_DOCUMENT) {
        }
 else         if (eventType == XmlPullParser.END_DOCUMENT) {
        }
 else         if (eventType == XmlPullParser.START_TAG) {
          if (pullParser.getName().equals("apikey")) {
            foundKey=true;
          }
 else           if (pullParser.getName().equals("id")) {
            foundID=true;
          }
 else           if (pullParser.getName().equals("url")) {
            foundURL=true;
          }
        }
 else         if (eventType == XmlPullParser.END_TAG) {
        }
 else         if (eventType == XmlPullParser.TEXT) {
          if (foundKey) {
            apiKey=pullParser.getText();
            foundKey=false;
          }
 else           if (foundID) {
            curBlogID=pullParser.getText();
            foundID=false;
          }
 else           if (foundURL) {
            curBlogURL=pullParser.getText();
            foundURL=false;
            if (!curBlogURL.endsWith("/"))             curBlogURL+="/";
            if (((curBlogURL.equals(url) || (curBlogURL.equals(wwwURL))) || storedBlogID.equals(curBlogID)) && !curBlogID.equals("1")) {
              blogID=curBlogID;
              apiInfo=new Vector<String>();
              apiInfo.add(apiKey);
              apiInfo.add(blogID);
              return apiInfo;
            }
          }
        }
        eventType=pullParser.next();
      }
    }
 catch (    XmlPullParserException e) {
      e.printStackTrace();
    }
  }
 catch (  ClientProtocolException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  return apiInfo;
}
