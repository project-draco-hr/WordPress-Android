{
  super.onCreate(savedInstanceState);
  requestWindowFeature(Window.FEATURE_NO_TITLE);
  setContentView(R.layout.view_stats);
  titleBar=(WPTitleBar)findViewById(R.id.actionBar);
  initStats();
  Button saveStatsLogin=(Button)findViewById(R.id.saveDotcom);
  saveStatsLogin.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      EditText dotcomUsername=(EditText)findViewById(R.id.dotcomUsername);
      EditText dotcomPassword=(EditText)findViewById(R.id.dotcomPassword);
      String dcUsername=dotcomUsername.getText().toString();
      String dcPassword=dotcomPassword.getText().toString();
      if (dcUsername.equals("") || dcPassword.equals("")) {
        AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(ViewStats.this);
        dialogBuilder.setTitle(getResources().getText(R.string.required_fields));
        dialogBuilder.setMessage(getResources().getText(R.string.username_password_required));
        dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int whichButton){
          }
        }
);
        dialogBuilder.setCancelable(true);
        if (!isFinishing()) {
          dialogBuilder.create().show();
        }
      }
 else {
        WordPress.currentBlog.setDotcom_username(dcUsername);
        WordPress.currentBlog.setDotcom_password(dcPassword);
        WordPress.currentBlog.save(ViewStats.this,WordPress.currentBlog.getUsername());
        showOrHideLoginForm();
        initStats();
      }
    }
  }
);
  final Button go=(Button)findViewById(R.id.go);
  go.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      Spinner reportType=(Spinner)findViewById(R.id.reportType);
      Spinner reportInterval=(Spinner)findViewById(R.id.reportInterval);
      final String type=parseType(reportType.getSelectedItemPosition());
      final int interval=parseInterval(reportInterval.getSelectedItemPosition());
      final String apiKey=WordPress.currentBlog.getApi_key();
      final String apiBlogID=WordPress.currentBlog.getApi_blogid();
      if (!isFinishing())       titleBar.startRotatingRefreshIcon();
      new getStatsDataTask().execute(apiKey,apiBlogID,type,interval);
    }
  }
);
  titleBar.refreshButton.setOnClickListener(new ImageButton.OnClickListener(){
    public void onClick(    View v){
      go.performClick();
    }
  }
);
  titleBar.setOnBlogChangedListener(new OnBlogChangedListener(){
    @Override public void OnBlogChanged(){
      ImageView iv=(ImageView)findViewById(R.id.chart);
      iv.setVisibility(View.GONE);
      RelativeLayout filters=(RelativeLayout)findViewById(R.id.filters);
      filters.setVisibility(View.GONE);
      TableLayout tl=(TableLayout)findViewById(R.id.dataTable);
      tl.removeAllViews();
      RelativeLayout moderationBar=(RelativeLayout)findViewById(R.id.dotcomLogin);
      moderationBar.setVisibility(View.GONE);
      TextView reportTitle=(TextView)findViewById(R.id.chartTitle);
      reportTitle.setVisibility(View.GONE);
      initStats();
    }
  }
);
  TextView wpcomHelp=(TextView)findViewById(R.id.wpcomHelp);
  wpcomHelp.setOnClickListener(new TextView.OnClickListener(){
    public void onClick(    View v){
      Intent intent1=new Intent(Intent.ACTION_VIEW);
      intent1.setData(Uri.parse("http://en.support.wordpress.com/stats/"));
      startActivity(intent1);
    }
  }
);
  Spinner reportInterval=(Spinner)findViewById(R.id.reportInterval);
  reportInterval.setSelection(1);
}
