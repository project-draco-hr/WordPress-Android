{
  if (!isAdded()) {
    return null;
  }
  final Blog blog=WordPress.getCurrentBlog();
  if (blog == null) {
    mErrorType=ErrorType.INVALID_CURRENT_BLOG;
    return null;
  }
  Map<String,Object> hPost=new HashMap<>();
  if (mIsLoadingMore) {
    int numExisting=getAdapter().getItemCount();
    hPost.put("offset",numExisting);
    hPost.put("number",COMMENTS_PER_PAGE);
  }
 else {
    hPost.put("number",COMMENTS_PER_PAGE);
  }
  if (mStatusFilter != null) {
    if (!mStatusFilter.equals(CommentStatus.UNKNOWN)) {
      hPost.put("status",CommentStatus.toString(mStatusFilter));
    }
  }
  Object[] params={blog.getRemoteBlogId(),blog.getUsername(),blog.getPassword(),hPost};
  try {
    return ApiHelper.refreshComments(blog,params,new ApiHelper.DatabasePersistCallback(){
      @Override public void onDataReadyToSave(      List list){
        int localBlogId=blog.getLocalTableBlogId();
        if (!mIsLoadingMore) {
          CommentTable.deleteCommentsForBlogWithFilter(localBlogId,mStatusFilter);
        }
        CommentTable.saveComments(localBlogId,(CommentList)list);
      }
    }
);
  }
 catch (  XMLRPCFault xmlrpcFault) {
    mErrorType=ErrorType.UNKNOWN_ERROR;
    if (xmlrpcFault.getFaultCode() == 401) {
      mErrorType=ErrorType.UNAUTHORIZED;
    }
  }
catch (  Exception e) {
    mErrorType=ErrorType.UNKNOWN_ERROR;
  }
  return null;
}
