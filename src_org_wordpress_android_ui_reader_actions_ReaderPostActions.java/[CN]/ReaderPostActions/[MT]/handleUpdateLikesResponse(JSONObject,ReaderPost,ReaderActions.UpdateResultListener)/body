{
  if (jsonObject == null)   return;
  final Handler handler=new Handler();
  new Thread(){
    @Override public void run(){
      ReaderUserList serverUsers=ReaderUserList.fromJsonLikes(jsonObject);
      ReaderUserIdList localLikeIDs=ReaderLikeTable.getLikesForPost(post);
      ReaderUserIdList serverLikeIDs=serverUsers.getUserIds();
      final boolean hasChanges=!localLikeIDs.isSameList(serverLikeIDs);
      if (hasChanges) {
        AppLog.d(T.READER,"new likes found");
        post.numLikes=jsonObject.optInt("found");
        post.isLikedByCurrentUser=JSONUtil.getBool(jsonObject,"i_like");
        ReaderPostTable.addOrUpdatePost(post);
        ReaderUserTable.addOrUpdateUsers(serverUsers);
        ReaderLikeTable.setLikesForPost(post,serverLikeIDs);
      }
      if (resultListener != null) {
        handler.post(new Runnable(){
          public void run(){
            resultListener.onUpdateResult(hasChanges ? ReaderActions.UpdateResult.CHANGED : ReaderActions.UpdateResult.UNCHANGED);
          }
        }
);
      }
    }
  }
.start();
}
