{
  if (jsonObject == null) {
    if (resultListener != null)     resultListener.onUpdateResult(ReaderActions.UpdateResult.FAILED,-1);
    return;
  }
  final Handler handler=new Handler();
  new Thread(){
    @Override public void run(){
      ReaderPostList serverPosts=ReaderPostList.fromJson(jsonObject);
      final boolean responseHasPosts=(serverPosts.size() > 0);
      if (updateAction == ReaderActions.RequestDataAction.LOAD_NEWER) {
        ReaderTagTable.setTagLastUpdated(tagName,DateTimeUtils.javaDateToIso8601(new Date()));
      }
      JSONObject jsonDateRange=jsonObject.optJSONObject("date_range");
      if (responseHasPosts && jsonDateRange != null) {
switch (updateAction) {
case LOAD_NEWER:
          String newest=jsonDateRange.has("before") ? JSONUtil.getString(jsonDateRange,"before") : JSONUtil.getString(jsonDateRange,"newest");
        if (!TextUtils.isEmpty(newest))         ReaderTagTable.setTagNewestDate(tagName,newest);
      break;
case LOAD_OLDER:
    String oldest=jsonDateRange.has("after") ? JSONUtil.getString(jsonDateRange,"after") : JSONUtil.getString(jsonDateRange,"oldest");
  if (!TextUtils.isEmpty(oldest))   ReaderTagTable.setTagOldestDate(tagName,oldest);
break;
}
}
if (!responseHasPosts) {
AppLog.d(T.READER,String.format("no new posts in topic %s",tagName));
if (resultListener != null) {
handler.post(new Runnable(){
public void run(){
  resultListener.onUpdateResult(ReaderActions.UpdateResult.UNCHANGED,0);
}
}
);
}
return;
}
final int numNewPosts=ReaderPostTable.getNumNewPostsWithTag(tagName,serverPosts);
ReaderPostTable.addOrUpdatePosts(tagName,serverPosts);
AppLog.d(T.READER,String.format("retrieved %d posts (%d new) in topic %s",serverPosts.size(),numNewPosts,tagName));
if (resultListener != null) {
handler.post(new Runnable(){
public void run(){
resultListener.onUpdateResult(ReaderActions.UpdateResult.CHANGED,numNewPosts);
}
}
);
}
}
}
.start();
}
