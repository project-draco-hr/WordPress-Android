{
  final ReaderPost originalPost=ReaderPostTable.getPost(post.blogId,post.postId);
  if (originalPost != null && originalPost.isFollowedByCurrentUser == isAskingToFollow) {
    return true;
  }
  post.isFollowedByCurrentUser=isAskingToFollow;
  ReaderPostTable.addOrUpdatePost(post);
  ReaderPostTable.setFollowStatusForPostsInBlog(post.blogId,isAskingToFollow);
  final String actionName=isAskingToFollow ? "follow" : "unfollow";
  String path="sites/" + post.blogId + "/follows/";
  if (isAskingToFollow) {
    path+="new";
  }
 else {
    path+="mine/delete";
  }
  if (post.hasBlogUrl()) {
    ReaderBlogTable.setIsFollowedBlogUrl(post.getBlogUrl(),isAskingToFollow);
  }
  com.wordpress.rest.RestRequest.Listener listener=new RestRequest.Listener(){
    @Override public void onResponse(    JSONObject jsonObject){
      AppLog.d(T.READER,String.format("post %s succeeded",actionName));
    }
  }
;
  RestRequest.ErrorListener errorListener=new RestRequest.ErrorListener(){
    @Override public void onErrorResponse(    VolleyError volleyError){
      String error=VolleyUtils.errStringFromVolleyError(volleyError);
      if (TextUtils.isEmpty(error)) {
        AppLog.w(T.READER,String.format("post %s failed",actionName));
      }
 else {
        AppLog.w(T.READER,String.format("post %s failed (%s)",actionName,error));
      }
      AppLog.e(T.READER,volleyError);
      if (originalPost != null) {
        ReaderPostTable.addOrUpdatePost(originalPost);
        ReaderPostTable.setFollowStatusForPostsInBlog(originalPost.blogId,originalPost.isFollowedByCurrentUser);
        if (originalPost.hasBlogUrl()) {
          ReaderBlogTable.setIsFollowedBlogUrl(post.getBlogUrl(),originalPost.isFollowedByCurrentUser);
        }
      }
    }
  }
;
  WordPress.getRestClientUtils().post(path,listener,errorListener);
  return true;
}
