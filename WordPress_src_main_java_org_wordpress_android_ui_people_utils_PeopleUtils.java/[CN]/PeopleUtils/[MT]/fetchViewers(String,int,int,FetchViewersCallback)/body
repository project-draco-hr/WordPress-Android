{
  com.wordpress.rest.RestRequest.Listener listener=new RestRequest.Listener(){
    @Override public void onResponse(    JSONObject jsonObject){
      if (jsonObject != null && callback != null) {
        try {
          JSONArray jsonArray=jsonObject.getJSONArray("viewers");
          List<Person> people=peopleListFromJSON(jsonArray,localTableBlogId,false,false,true);
          int numberOfUsers=jsonObject.optInt("found");
          boolean isEndOfList=(people.size() + offset) >= numberOfUsers;
          callback.onSuccess(people,isEndOfList);
        }
 catch (        JSONException e) {
          AppLog.e(T.API,"JSON exception occurred while parsing the response for " + "sites/%s/viewers: " + e);
          callback.onError();
        }
      }
    }
  }
;
  RestRequest.ErrorListener errorListener=new RestRequest.ErrorListener(){
    @Override public void onErrorResponse(    VolleyError volleyError){
      AppLog.e(T.API,volleyError);
      if (callback != null) {
        callback.onError();
      }
    }
  }
;
  int page=(int)Math.floor(offset / FETCH_LIMIT) + 1;
  Map<String,String> params=new HashMap<>();
  params.put("number",Integer.toString(FETCH_LIMIT));
  params.put("page",Integer.toString(page));
  String path=String.format("sites/%s/viewers",blogId);
  WordPress.getRestClientUtilsV1_1().get(path,params,null,listener,errorListener);
}
