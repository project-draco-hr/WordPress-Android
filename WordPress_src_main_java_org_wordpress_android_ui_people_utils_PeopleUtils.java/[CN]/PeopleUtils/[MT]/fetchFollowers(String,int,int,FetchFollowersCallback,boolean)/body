{
  com.wordpress.rest.RestRequest.Listener listener=new RestRequest.Listener(){
    @Override public void onResponse(    JSONObject jsonObject){
      if (jsonObject != null && callback != null) {
        try {
          JSONArray jsonArray=jsonObject.getJSONArray("subscribers");
          List<Person> people=peopleListFromJSON(jsonArray,blogId,localTableBlogId,!isEmailFollower,isEmailFollower);
          int pageFetched=jsonObject.optInt("page");
          int numberOfPages=jsonObject.optInt("pages");
          boolean isEndOfList=page >= numberOfPages || page >= FOLLOWER_PAGE_LIMIT;
          callback.onSuccess(people,pageFetched,isEndOfList);
        }
 catch (        JSONException e) {
          AppLog.e(T.API,"JSON exception occurred while parsing the response for " + "sites/%s/stats/followers: " + e);
          callback.onError();
        }
      }
    }
  }
;
  RestRequest.ErrorListener errorListener=new RestRequest.ErrorListener(){
    @Override public void onErrorResponse(    VolleyError volleyError){
      AppLog.e(T.API,volleyError);
      if (callback != null) {
        callback.onError();
      }
    }
  }
;
  Map<String,String> params=new HashMap<>();
  params.put("max",Integer.toString(FETCH_LIMIT));
  params.put("page",Integer.toString(page));
  params.put("type",isEmailFollower ? "email" : "wp_com");
  String path=String.format("sites/%s/stats/followers",blogId);
  WordPress.getRestClientUtilsV1_1().get(path,params,null,listener,errorListener);
}
