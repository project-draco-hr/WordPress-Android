{
  EditText titleET=(EditText)findViewById(R.id.title);
  String title=titleET.getText().toString();
  EditText contentET=(EditText)findViewById(R.id.content);
  String content=contentET.getText().toString();
  CheckBox publishCB=(CheckBox)findViewById(R.id.publish);
  Boolean publishThis=false;
  String imageContent="";
  for (int it=0; it < selectedImageCtr; it++) {
    imageContent+=uploadImage(selectedImageIDs.get(it).toString());
  }
  Integer blogID=1;
  Vector<Object> myPostVector=new Vector<Object>();
  String res=null;
  boolean enteredSettings=checkSettings();
  if (!enteredSettings) {
    res="invalidSettings";
  }
 else   if (title.equals("") || content.equals("")) {
    res="emptyFields";
  }
 else {
    settingsDB settingsDB=new settingsDB(this);
    Vector categoriesVector=settingsDB.loadSettings(this,id);
    String sURL="";
    if (categoriesVector.get(0).toString().contains("xmlrpc.php")) {
      sURL=categoriesVector.get(0).toString();
    }
 else {
      sURL=categoriesVector.get(0).toString() + "xmlrpc.php";
    }
    String sUsername=categoriesVector.get(2).toString();
    String sPassword=categoriesVector.get(3).toString();
    String sImagePlacement=categoriesVector.get(4).toString();
    String sCenterThumbnailString=categoriesVector.get(5).toString();
    String sFullSizeImageString=categoriesVector.get(6).toString();
    boolean sFullSizeImage=false;
    if (sFullSizeImageString.equals("1")) {
      sFullSizeImage=true;
    }
    boolean centerThumbnail=false;
    if (sCenterThumbnailString.equals("1")) {
      centerThumbnail=true;
    }
    if (publishCB.isChecked()) {
      publishThis=true;
    }
    Map<String,Object> contentStruct=new HashMap<String,Object>();
    if (imageContent != "") {
      if (sImagePlacement.equals("Above Text")) {
        content=imageContent + content;
      }
 else {
        content=content + imageContent;
      }
    }
    contentStruct.put("post_type","page");
    contentStruct.put("title",escapeUtils.escapeHtml(title));
    contentStruct.put("description",escapeUtils.escapeHtml(content));
    client=new XMLRPCClient(sURL);
    Object[] params={postID,sUsername,sPassword,contentStruct,publishThis};
    Object result=null;
    try {
      result=(Object)client.call("metaWeblog.editPost",params);
    }
 catch (    XMLRPCException e) {
      e.printStackTrace();
    }
    newID=result.toString();
    res="OK";
  }
  return res;
}
