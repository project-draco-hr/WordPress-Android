{
  RestRequest.Listener listener=new RestRequest.Listener(){
    @Override public void onResponse(    JSONObject jsonObject){
      if (jsonObject != null) {
        loadAvatar(AccountHelper.getDefaultAccount(),true,new WPNetworkImageView.ImageLoadListener(){
          @Override public void onLoaded(){
            mProgressBar.setVisibility(View.GONE);
          }
          @Override public void onError(){
            mProgressBar.setVisibility(View.GONE);
          }
        }
);
        try {
          AppLog.d(AppLog.T.API,jsonObject.toString(2));
        }
 catch (        JSONException e) {
          AppLog.e(AppLog.T.API,e);
        }
      }
    }
  }
;
  RestRequest.ErrorListener errorListener=new RestRequest.ErrorListener(){
    @Override public void onErrorResponse(    VolleyError volleyError){
      AppLog.e(AppLog.T.API,volleyError);
      AppLog.d(AppLog.T.API,"reponse: " + new String(volleyError.networkResponse.data));
    }
  }
;
  File file=new File(filePath);
  if (!file.exists()) {
    return;
  }
  mProgressBar.setVisibility(View.VISIBLE);
  RestClientUtils gravatarRestClientUtils=WordPress.getGravatarRestClientUtilsV1();
  MultipartRequest multipartRequest;
  try {
    multipartRequest=new MultipartRequestBuilder().setResponseListener(listener).setResponseErrorListener(errorListener).addPart("filedata",file).addPart("account",AccountHelper.getDefaultAccount().getEmail()).build(gravatarRestClientUtils.pathToUrl("upload-image"));
  }
 catch (  IOException e) {
    AppLog.e(AppLog.T.API,"Cannot make the Gravatar upload request!",e);
    return;
  }
  if (multipartRequest != null) {
    WordPress.getGravatarRestClientUtilsV1().post(multipartRequest,null,errorListener);
  }
}
