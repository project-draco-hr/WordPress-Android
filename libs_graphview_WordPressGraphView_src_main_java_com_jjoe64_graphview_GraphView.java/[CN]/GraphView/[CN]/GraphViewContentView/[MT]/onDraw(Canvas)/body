{
  onBeforeDrawSeries();
  paint.setAntiAlias(true);
  paint.setStrokeWidth(0);
  float border=GraphViewConfig.BORDER;
  float horstart=0;
  float height=getHeight();
  float width=getWidth() - 1;
  double maxY=getMaxY();
  double minY=getMinY();
  double maxX=getMaxX(false);
  double minX=getMinX(false);
  double diffX=maxX - minX;
  if (labelTextHeight == null || horLabelTextWidth == null) {
    paint.setTextSize(getGraphViewStyle().getTextSize());
    double testX=((getMaxX(true) - getMinX(true)) * 0.783) + getMinX(true);
    String testLabel=formatLabel(testX,true);
    paint.getTextBounds(testLabel,0,testLabel.length(),textBounds);
    labelTextHeight=(textBounds.height());
    horLabelTextWidth=(textBounds.width());
  }
  border+=labelTextHeight;
  float graphheight=height - (2 * border);
  graphwidth=width;
  if (horlabels == null) {
    horlabels=generateHorlabels(graphwidth);
  }
  if (verlabels == null) {
    verlabels=generateVerlabels(graphheight);
  }
  paint.setTextAlign(Align.LEFT);
  int vers=verlabels.length - 1;
  for (int i=0; i < verlabels.length; i++) {
    paint.setColor(graphViewStyle.getGridYColor());
    float y=((graphheight / vers) * i) + border;
    canvas.drawLine(horstart,y,width,y,paint);
  }
  float colWidth=graphwidth / horlabels.length;
  int maxColumnSize=getGraphViewStyle().getMaxColumnWidth();
  if (maxColumnSize > 0 && colWidth > maxColumnSize) {
    colWidth=maxColumnSize;
    float diffSingleColumn=graphwidth / horlabels.length - colWidth;
    diffSingleColumn*=horlabels.length;
    horstart=diffSingleColumn / 2;
  }
  int hors=horlabels.length;
  int horLabelsToShow=getGraphViewStyle().getNumHorizontalLabels();
  for (int i=0; i < horlabels.length; i++) {
    paint.setColor(graphViewStyle.getGridXColor());
    float x=(colWidth * i) + horstart + (colWidth / 2);
    canvas.drawLine(x,height - border,x,border,paint);
    paint.setColor(graphViewStyle.getHorizontalLabelsBackgroundColor(i));
    paint.setAlpha(50);
    canvas.drawRect((colWidth * i) + horstart,height - border,(colWidth * i) + horstart + colWidth,height,paint);
    paint.setTextAlign(Align.CENTER);
    paint.setColor(graphViewStyle.getHorizontalLabelsColor(i));
    if (horLabelsToShow > 0 && (hors / horLabelsToShow) > 0) {
      canvas.drawText(horlabels[i],x,height - (GraphViewConfig.BORDER / 2),paint);
    }
  }
  paint.setTextAlign(Align.CENTER);
  canvas.drawText(title,(graphwidth / 2) + horstart,border - 4,paint);
  if (maxY == minY) {
    if (maxY == 0) {
      maxY=1.0d;
      minY=0.0d;
    }
 else {
      maxY=maxY * 1.05d;
      minY=minY * 0.95d;
    }
  }
  double diffY=maxY - minY;
  paint.setStrokeCap(Paint.Cap.ROUND);
  for (int i=0; i < graphSeries.size(); i++) {
    drawSeries(canvas,_values(i),graphwidth,graphheight,border,minX,minY,diffX,diffY,horstart,graphSeries.get(i).style);
  }
  if (showLegend)   drawLegend(canvas,height,width);
}
