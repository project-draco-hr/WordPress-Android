{
  if (isFullScreenSupported()) {
    getWindow().requestFeature(Window.FEATURE_ACTION_BAR_OVERLAY);
  }
  super.onCreate(savedInstanceState);
  setContentView(R.layout.reader_activity_post_pager);
  mViewPager=(ViewPager)findViewById(R.id.viewpager);
  ActionBar actionBar=getActionBar();
  if (actionBar != null) {
    actionBar.setDisplayShowTitleEnabled(true);
    actionBar.setDisplayHomeAsUpEnabled(true);
  }
  final int position;
  final String title;
  final Serializable serializedList;
  if (savedInstanceState != null) {
    position=savedInstanceState.getInt(ARG_POSITION,0);
    title=savedInstanceState.getString(ARG_TITLE);
    serializedList=savedInstanceState.getSerializable(ARG_BLOG_POST_ID_LIST);
  }
 else {
    position=getIntent().getIntExtra(ARG_POSITION,0);
    title=getIntent().getStringExtra(ARG_TITLE);
    serializedList=getIntent().getSerializableExtra(ARG_BLOG_POST_ID_LIST);
  }
  if (!TextUtils.isEmpty(title)) {
    this.setTitle(title);
  }
  final ReaderBlogIdPostIdList idList;
  if (serializedList != null) {
    idList=new ReaderBlogIdPostIdList((ArrayList<ReaderBlogIdPostId>)serializedList);
  }
 else {
    idList=new ReaderBlogIdPostIdList();
  }
  mPageAdapter=new PostPagerAdapter(getFragmentManager(),idList);
  mViewPager.setAdapter(mPageAdapter);
  if (position >= 0 || position < mPageAdapter.getCount()) {
    mViewPager.setCurrentItem(position);
  }
  mViewPager.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener(){
    @Override public void onPageSelected(    int position){
      super.onPageSelected(position);
      onRequestFullScreen(false);
    }
  }
);
}
