{
  Vector<Object> myPictureVector=new Vector<Object>();
  String returnedImageURL=null;
  String imageRes=null;
  String content="";
  int thumbWidth=0, thumbHeight=0, finalHeight=0;
  String finalThumbnailUrl=null;
  String finalImageUrl=null;
  String uploadImagePath="";
  settingsDB settingsDB=new settingsDB(this);
  Vector categoriesVector=settingsDB.loadSettings(this,id);
  String sURL="";
  if (categoriesVector.get(0).toString().contains("xmlrpc.php")) {
    sURL=categoriesVector.get(0).toString();
  }
 else {
    sURL=categoriesVector.get(0).toString() + "xmlrpc.php";
  }
  String sBlogName=categoriesVector.get(1).toString();
  String sUsername=categoriesVector.get(2).toString();
  String sPassword=categoriesVector.get(3).toString();
  String sImagePlacement=categoriesVector.get(4).toString();
  String sCenterThumbnailString=categoriesVector.get(5).toString();
  String sFullSizeImageString=categoriesVector.get(6).toString();
  boolean sFullSizeImage=false;
  if (sFullSizeImageString.equals("1")) {
    sFullSizeImage=true;
  }
  boolean centerThumbnail=false;
  if (sCenterThumbnailString.equals("1")) {
    centerThumbnail=true;
  }
  String sMaxImageWidth=categoriesVector.get(7).toString();
  String thumbnailURL="";
  for (int it=0; it < selectedImageCtr; it++) {
    if (imageUrl.get(it) != null) {
      client=new XMLRPCClient(sURL);
      String sXmlRpcMethod="wp.uploadFile";
      String curImagePath="";
      for (int i=0; i < 2; i++) {
        curImagePath=imageUrl.get(it).toString();
        if (i == 0 || sFullSizeImage) {
          Uri imageUri=Uri.parse(curImagePath);
          File jpeg=null;
          String mimeType="";
          if (imageUri.toString().contains("content:")) {
            String imgID=imageUri.getLastPathSegment();
            long imgID2=Long.parseLong(imgID);
            String[] projection;
            projection=new String[]{Images.Media._ID,Images.Media.DATA,Images.Media.MIME_TYPE};
            Uri imgPath;
            imgPath=ContentUris.withAppendedId(Images.Media.EXTERNAL_CONTENT_URI,imgID2);
            Cursor cur=this.managedQuery(imgPath,projection,null,null,null);
            String thumbData="";
            if (cur.moveToFirst()) {
              int nameColumn, dataColumn, heightColumn, widthColumn, mimeTypeColumn;
              nameColumn=cur.getColumnIndex(Images.Media._ID);
              dataColumn=cur.getColumnIndex(Images.Media.DATA);
              mimeTypeColumn=cur.getColumnIndex(Images.Media.MIME_TYPE);
              String imgPath4=imgPath.getEncodedPath();
              thumbData=cur.getString(dataColumn);
              mimeType=cur.getString(mimeTypeColumn);
              jpeg=new File(thumbData);
            }
          }
 else {
            jpeg=new File(imageUri.toString().replace("file://",""));
          }
          imageTitle=jpeg.getName();
          byte[] bytes=new byte[(int)jpeg.length()];
          byte[] finalBytes;
          DataInputStream in=null;
          try {
            in=new DataInputStream(new FileInputStream(jpeg));
          }
 catch (          FileNotFoundException e) {
            e.printStackTrace();
          }
          try {
            in.readFully(bytes);
          }
 catch (          IOException e) {
            e.printStackTrace();
          }
          try {
            in.close();
          }
 catch (          IOException e) {
            e.printStackTrace();
          }
          if (i == 0) {
            finalBytes=imageHelper.createThumbnail(bytes,sMaxImageWidth);
          }
 else {
            finalBytes=bytes;
          }
          Map<String,Object> m=new HashMap<String,Object>();
          HashMap hPost=new HashMap();
          m.put("name",imageTitle);
          m.put("type",mimeType);
          m.put("bits",finalBytes);
          m.put("overwrite",true);
          Object[] params={1,sUsername,sPassword,m};
          Object result=null;
          try {
            result=(Object)client.call("wp.uploadFile",params);
          }
 catch (          XMLRPCException e) {
            e.printStackTrace();
            e.getMessage();
            xmlrpcError=true;
            break;
          }
          HashMap contentHash=new HashMap();
          contentHash=(HashMap)result;
          String resultURL=contentHash.get("url").toString();
          if (i == 0) {
            finalThumbnailUrl=resultURL;
          }
 else {
            if (sFullSizeImage) {
              finalImageUrl=resultURL;
            }
 else {
              finalImageUrl="";
            }
          }
          int finalWidth=500;
          if (sMaxImageWidth.equals("Original Size")) {
            finalWidth=thumbWidth;
            finalHeight=thumbHeight;
          }
 else {
            finalWidth=Integer.parseInt(sMaxImageWidth);
            if (finalWidth > thumbWidth) {
              finalWidth=thumbWidth;
              finalHeight=thumbHeight;
            }
 else {
              float percentage=(float)finalWidth / thumbWidth;
              float proportionateHeight=thumbHeight * percentage;
              finalHeight=(int)Math.rint(proportionateHeight);
            }
          }
          String centerCSS=" ";
          if (centerThumbnail) {
            centerCSS="style=\"display:block;margin-right:auto;margin-left:auto;\" ";
          }
          if (i != 0 && sFullSizeImage) {
            if (resultURL != null) {
              if (sImagePlacement.equals("Above Text")) {
                content=content + "<a alt=\"image\" href=\"" + finalImageUrl+ "\"><img "+ centerCSS+ "alt=\"image\" src=\""+ finalThumbnailUrl+ "\" /></a><br /><br />";
              }
 else {
                content=content + "<br /><a alt=\"image\" href=\"" + finalImageUrl+ "\"><img "+ centerCSS+ "alt=\"image\" src=\""+ finalThumbnailUrl+ "\" /></a>";
              }
            }
          }
 else {
            if (i == 0 && sFullSizeImage == false && resultURL != null) {
              if (sImagePlacement.equals("Above Text")) {
                content=content + "<img " + centerCSS+ "alt=\"image\" src=\""+ finalThumbnailUrl+ "\" /><br /><br />";
              }
 else {
                content=content + "<br /><img " + centerCSS+ "alt=\"image\" src=\""+ finalThumbnailUrl+ "\" />";
              }
            }
          }
        }
      }
    }
  }
  return content;
}
