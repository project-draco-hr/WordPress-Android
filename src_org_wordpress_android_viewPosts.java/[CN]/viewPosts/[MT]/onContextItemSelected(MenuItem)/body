{
  if (item.getGroupId() == 0) {
switch (item.getItemId()) {
case 0:
      Intent i0=new Intent(viewPosts.this,viewPost.class);
    i0.putExtra("postID",String.valueOf(selectedID));
  i0.putExtra("id",id);
i0.putExtra("accountName",accountName);
startActivity(i0);
return true;
case 1:
Intent i=new Intent(viewPosts.this,viewComments.class);
i.putExtra("postID",String.valueOf(selectedID));
i.putExtra("id",id);
i.putExtra("accountName",accountName);
startActivity(i);
return true;
case 2:
Intent i2=new Intent(viewPosts.this,editPost.class);
i2.putExtra("postID",String.valueOf(selectedID));
i2.putExtra("id",id);
i2.putExtra("accountName",accountName);
startActivityForResult(i2,1);
return true;
case 3:
AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(viewPosts.this);
dialogBuilder.setTitle(getResources().getText(R.string.delete_post));
dialogBuilder.setMessage(getResources().getText(R.string.delete_sure_post) + " '" + titles[rowID]+ "'?");
dialogBuilder.setPositiveButton(getResources().getText(R.string.yes),new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int whichButton){
showDialog(ID_DIALOG_DELETING);
new Thread(){
public void run(){
deletePost();
}
}
.start();
}
}
);
dialogBuilder.setNegativeButton(getResources().getText(R.string.no),new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int whichButton){
}
}
);
dialogBuilder.setCancelable(true);
dialogBuilder.create().show();
return true;
}
}
 else if (item.getGroupId() == 2) {
switch (item.getItemId()) {
case 0:
Intent i0=new Intent(viewPosts.this,viewPost.class);
i0.putExtra("postID",String.valueOf(selectedID));
i0.putExtra("id",id);
i0.putExtra("accountName",accountName);
i0.putExtra("isPage",true);
startActivity(i0);
return true;
case 1:
Intent i=new Intent(viewPosts.this,viewComments.class);
i.putExtra("postID",String.valueOf(selectedID));
i.putExtra("id",id);
i.putExtra("accountName",accountName);
startActivity(i);
return true;
case 2:
Intent i2=new Intent(viewPosts.this,editPost.class);
i2.putExtra("postID",String.valueOf(selectedID));
i2.putExtra("id",id);
i2.putExtra("accountName",accountName);
i2.putExtra("isPage",true);
startActivityForResult(i2,1);
return true;
case 3:
AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(viewPosts.this);
dialogBuilder.setTitle(getResources().getText(R.string.delete_page));
dialogBuilder.setMessage(getResources().getText(R.string.delete_sure_page) + " '" + titles[rowID]+ "'?");
dialogBuilder.setPositiveButton(getResources().getText(R.string.yes),new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int whichButton){
showDialog(ID_DIALOG_DELETING);
new Thread(){
public void run(){
deletePost();
}
}
.start();
}
}
);
dialogBuilder.setNegativeButton(getResources().getText(R.string.no),new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int whichButton){
}
}
);
dialogBuilder.setCancelable(true);
dialogBuilder.create().show();
return true;
}
}
 else {
switch (item.getItemId()) {
case 0:
Intent i2=new Intent(viewPosts.this,editPost.class);
i2.putExtra("postID",String.valueOf(selectedID));
i2.putExtra("id",id);
if (isPage) {
i2.putExtra("isPage",true);
}
i2.putExtra("accountName",accountName);
i2.putExtra("localDraft",true);
startActivityForResult(i2,0);
return true;
case 1:
showDialog(ID_DIALOG_POSTING);
new Thread(){
public void run(){
try {
submitResult=submitPost();
}
 catch (IOException e) {
e.printStackTrace();
}
}
}
.start();
return true;
case 2:
AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(viewPosts.this);
dialogBuilder.setTitle(getResources().getText(R.string.delete_draft));
dialogBuilder.setMessage(getResources().getText(R.string.delete_sure) + " '" + titles[rowID]+ "'?");
dialogBuilder.setPositiveButton(getResources().getText(R.string.yes),new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int whichButton){
WordPressDB lDraftsDB=new WordPressDB(viewPosts.this);
if (isPage) {
lDraftsDB.deletePageDraft(viewPosts.this,String.valueOf(selectedID));
}
 else {
lDraftsDB.deletePost(viewPosts.this,String.valueOf(selectedID));
}
loadPosts(false);
}
}
);
dialogBuilder.setNegativeButton(getResources().getText(R.string.no),new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int whichButton){
}
}
);
dialogBuilder.setCancelable(true);
dialogBuilder.create().show();
}
}
return false;
}
