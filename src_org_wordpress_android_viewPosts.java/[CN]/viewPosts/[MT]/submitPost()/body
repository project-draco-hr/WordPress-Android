{
  final localDraftsDB lDraftsDB=new localDraftsDB(this);
  Vector post=lDraftsDB.loadPost(this,String.valueOf(selectedID));
  HashMap postHashMap=(HashMap)post.get(0);
  String title=postHashMap.get("title").toString();
  String content=postHashMap.get("content").toString();
  String picturePaths=postHashMap.get("picturePaths").toString();
  if (!picturePaths.equals("")) {
    String[] pPaths=picturePaths.split(",");
    for (int i=0; i < pPaths.length; i++) {
      Uri imagePath=Uri.parse(pPaths[i]);
      selectedImageIDs.add(selectedImageCtr,imagePath);
      imageUrl.add(selectedImageCtr,pPaths[i]);
      selectedImageCtr++;
    }
  }
  String categories=postHashMap.get("categories").toString();
  if (!categories.equals("")) {
    String[] aCategories=categories.split(",");
    for (int i=0; i < aCategories.length; i++) {
      selectedCategories.add(aCategories[i]);
    }
  }
  String tags=postHashMap.get("tags").toString();
  int publish=Integer.valueOf(postHashMap.get("publish").toString());
  Boolean publishThis=false;
  if (publish == 1) {
    publishThis=true;
  }
  String imageContent="";
  for (int it=0; it < selectedImageCtr; it++) {
    imageContent+=uploadImage(selectedImageIDs.get(it).toString());
  }
  Integer blogID=1;
  Vector<Object> myPostVector=new Vector<Object>();
  String res=null;
  boolean enteredSettings=checkSettings();
  if (!enteredSettings) {
    res="invalidSettings";
  }
 else   if (title.equals("") || content.equals("")) {
    res="emptyFields";
  }
 else {
    String[] theCategories=new String[selectedCategories.size()];
    int catSize=selectedCategories.size();
    for (int i=0; i < selectedCategories.size(); i++) {
      theCategories[i]=selectedCategories.get(i).toString();
    }
    settingsDB settingsDB=new settingsDB(this);
    Vector categoriesVector=settingsDB.loadSettings(this,id);
    String sURL="";
    if (categoriesVector.get(0).toString().contains("xmlrpc.php")) {
      sURL=categoriesVector.get(0).toString();
    }
 else {
      sURL=categoriesVector.get(0).toString() + "xmlrpc.php";
    }
    String sUsername=categoriesVector.get(2).toString();
    String sPassword=categoriesVector.get(3).toString();
    String sImagePlacement=categoriesVector.get(4).toString();
    String sCenterThumbnailString=categoriesVector.get(5).toString();
    String sFullSizeImageString=categoriesVector.get(6).toString();
    boolean sFullSizeImage=false;
    if (sFullSizeImageString.equals("1")) {
      sFullSizeImage=true;
    }
    boolean centerThumbnail=false;
    if (sCenterThumbnailString.equals("1")) {
      centerThumbnail=true;
    }
    Map<String,Object> contentStruct=new HashMap<String,Object>();
    if (imageContent != "") {
      if (sImagePlacement.equals("Above Text")) {
        content=imageContent + content;
      }
 else {
        content=content + imageContent;
      }
    }
    contentStruct.put("post_type","post");
    contentStruct.put("title",escapeUtils.escapeHtml(title));
    contentStruct.put("description",escapeUtils.escapeHtml(content));
    if (tags != "") {
      contentStruct.put("mt_keywords",escapeUtils.escapeHtml(tags));
    }
    if (theCategories.length > 0) {
      contentStruct.put("categories",theCategories);
    }
    client=new XMLRPCClient(sURL);
    Object[] params={1,sUsername,sPassword,contentStruct,publishThis};
    Object result=null;
    try {
      result=(Object)client.call("metaWeblog.newPost",params);
    }
 catch (    XMLRPCException e) {
      e.printStackTrace();
    }
    newID=result.toString();
    res="OK";
    dismissDialog(ID_DIALOG_POSTING);
    Thread action=new Thread(){
      public void run(){
        AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(viewPosts.this);
        dialogBuilder.setTitle("Success");
        dialogBuilder.setMessage("Post #" + newID + " added successfully");
        dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int whichButton){
            boolean isInteger=false;
            try {
              int i=Integer.parseInt(newID);
              isInteger=true;
            }
 catch (            NumberFormatException e) {
            }
            if (isInteger) {
              selectedImageIDs.clear();
              imageUrl.clear();
              selectedImageCtr=0;
              selectedCategories.clear();
              lDraftsDB.deletePost(viewPosts.this,String.valueOf(selectedID));
              refreshPosts();
            }
          }
        }
);
        dialogBuilder.setCancelable(true);
        dialogBuilder.create().show();
      }
    }
;
    this.runOnUiThread(action);
  }
  return res;
}
