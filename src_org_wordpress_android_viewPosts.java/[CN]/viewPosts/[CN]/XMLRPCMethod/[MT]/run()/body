{
  try {
    final long t0=System.currentTimeMillis();
    final Object[] result=(Object[])client.call(method,params);
    final long t1=System.currentTimeMillis();
    handler.post(new Runnable(){
      public void run(){
        callBack.callFinished(result);
      }
    }
);
  }
 catch (  final XMLRPCFault e) {
    handler.post(new Runnable(){
      public void run(){
        closeProgressBar();
        if (e.getFaultCode() != 500) {
          AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(viewPosts.this);
          dialogBuilder.setTitle(getResources().getText(R.string.connection_error));
          String msg=e.getMessage();
          dialogBuilder.setMessage(e.getFaultString());
          if (msg.contains("403")) {
            dialogBuilder.setMessage(e.getFaultString() + " " + getResources().getString(R.string.load_settings));
            dialogBuilder.setPositiveButton(getResources().getString(R.string.yes),new DialogInterface.OnClickListener(){
              public void onClick(              DialogInterface dialog,              int whichButton){
                Intent i=new Intent(viewPosts.this,settings.class);
                i.putExtra("id",id);
                i.putExtra("accountName",accountName);
                startActivity(i);
              }
            }
);
            dialogBuilder.setNegativeButton(getResources().getString(R.string.no),new DialogInterface.OnClickListener(){
              public void onClick(              DialogInterface dialog,              int whichButton){
              }
            }
);
          }
 else {
            dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
              public void onClick(              DialogInterface dialog,              int whichButton){
              }
            }
);
          }
          dialogBuilder.setCancelable(true);
          dialogBuilder.create().show();
        }
 else {
          WordPressDB postStoreDB=new WordPressDB(viewPosts.this);
          postStoreDB.clearPosts(viewPosts.this,id);
          loadPosts(false);
        }
      }
    }
);
  }
catch (  final XMLRPCException e) {
    handler.post(new Runnable(){
      public void run(){
        closeProgressBar();
        AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(viewPosts.this);
        dialogBuilder.setTitle(getResources().getText(R.string.connection_error));
        dialogBuilder.setMessage(e.getMessage());
        dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int whichButton){
          }
        }
);
        dialogBuilder.setCancelable(true);
        dialogBuilder.create().show();
      }
    }
);
  }
}
