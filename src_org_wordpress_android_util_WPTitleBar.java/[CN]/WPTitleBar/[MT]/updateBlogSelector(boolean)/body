{
  int blogCount=accounts.size();
  if (accounts.size() >= 1 && isDashboard)   blogCount++;
  blogNames=new CharSequence[blogCount];
  blogIDs=new int[blogCount];
  for (int i=0; i < blogCount; i++) {
    if ((blogCount - 1) == i && isDashboard) {
      blogNames[i]="+ " + getResources().getText(R.string.add_account);
      blogIDs[i]=-1;
    }
 else {
      HashMap<?,?> accountHash=(HashMap<?,?>)accounts.get(i);
      String curBlogName=accountHash.get("url").toString();
      if (accountHash.get("blogName") != null)       curBlogName=EscapeUtils.unescapeHtml(accountHash.get("blogName").toString());
      blogNames[i]=curBlogName;
      blogIDs[i]=Integer.valueOf(accountHash.get("id").toString());
      blogTitleTextView=(TextView)findViewById(R.id.blog_title);
    }
  }
  setupCurrentBlog();
  if (WordPress.currentBlog != null) {
    WordPress.wpDB.updateLastBlogID(WordPress.currentBlog.getId());
    updateBlavatarImage();
    updateCommentBadge();
    refreshButton=(Button)findViewById(R.id.action_refresh);
    blogTitleTextView.setText(EscapeUtils.unescapeHtml(WordPress.currentBlog.getBlogName()));
    rl=(RelativeLayout)findViewById(R.id.blogSelector);
    rl.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        dialogBuilder=new AlertDialog.Builder(context);
        dialogBuilder.setTitle(getResources().getText(R.string.choose_blog));
        dialogBuilder.setItems(blogNames,new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int pos){
            if (blogIDs[pos] == -1) {
              Intent i=new Intent(context,NewAccount.class);
              ((Dashboard)context).startActivityForResult(i,0);
            }
 else {
              blogTitleTextView.setText(EscapeUtils.unescapeHtml(blogNames[pos].toString()));
              try {
                WordPress.currentBlog=new Blog(blogIDs[pos],context);
              }
 catch (              Exception e) {
                e.printStackTrace();
              }
              WordPress.wpDB.updateLastBlogID(blogIDs[pos]);
              updateBlavatarImage();
              updateCommentBadge();
              updateReadButton();
              if (onBlogChangedListener != null) {
                onBlogChangedListener.OnBlogChanged();
              }
            }
          }
        }
);
        dialogBuilder.show();
      }
    }
);
    final ImageButton showDashboard=(ImageButton)findViewById(R.id.home_small);
    showDashboard.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        if (dashboard.getVisibility() == View.GONE) {
          showDashboardOverlay(0);
          isShowingDashboard=true;
        }
 else {
          hideDashboardOverlay();
        }
      }
    }
);
    setupDashboardButtons();
  }
}
