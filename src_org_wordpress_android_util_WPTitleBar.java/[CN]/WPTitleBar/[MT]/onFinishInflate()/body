{
  super.onFinishInflate();
  final WordPressDB settingsDB=new WordPressDB(context);
  accounts=settingsDB.getAccounts(context);
  dashboard=(LinearLayout)findViewById(R.id.dashboard);
  commentBadge=(TextView)findViewById(R.id.comment_badge);
  blogNames=new CharSequence[accounts.size()];
  blogIDs=new int[accounts.size()];
  for (int i=0; i < accounts.size(); i++) {
    HashMap<?,?> defHash=(HashMap<?,?>)accounts.get(i);
    String curBlogName=EscapeUtils.unescapeHtml(defHash.get("blogName").toString());
    blogNames[i]=curBlogName;
    blogIDs[i]=Integer.valueOf(defHash.get("id").toString());
    blogTitle=(TextView)findViewById(R.id.blog_title);
  }
  int lastBlogID=settingsDB.getLastBlogID(context);
  if (lastBlogID != -1) {
    try {
      boolean matchedID=false;
      for (int i=0; i < blogIDs.length; i++) {
        if (blogIDs[i] == lastBlogID) {
          matchedID=true;
          WordPress.currentBlog=new Blog(blogIDs[i],context);
        }
      }
      if (!matchedID) {
        WordPress.currentBlog=new Blog(blogIDs[0],context);
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
 else {
    if (blogIDs.length > 0)     WordPress.currentBlog=new Blog(blogIDs[0],context);
  }
  if (WordPress.currentBlog != null) {
    updateBlavatarImage();
    updateCommentBadge();
    refreshButton=(Button)findViewById(R.id.action_refresh);
    blogTitle.setText(EscapeUtils.unescapeHtml(WordPress.currentBlog.getBlogName()));
    rl=(RelativeLayout)findViewById(R.id.blogSelector);
    rl.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        dialogBuilder=new AlertDialog.Builder(context);
        dialogBuilder.setTitle(getResources().getText(R.string.choose_blog));
        dialogBuilder.setItems(blogNames,new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int pos){
            blogTitle.setText(blogNames[pos]);
            WordPress.currentBlog=new Blog(blogIDs[pos],context);
            settingsDB.updateLastBlogID(context,blogIDs[pos]);
            updateBlavatarImage();
            updateCommentBadge();
            if (onBlogChangedListener != null) {
              onBlogChangedListener.OnBlogChanged();
            }
          }
        }
);
        dialogBuilder.show();
      }
    }
);
    ImageButton showDashboard=(ImageButton)findViewById(R.id.home_small);
    showDashboard.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        if (dashboard.getVisibility() == View.GONE) {
          showDashboardOverlay();
          isShowingDashboard=true;
        }
 else {
          hideDashboardOverlay();
        }
      }
    }
);
    LinearLayout writeButton=(LinearLayout)findViewById(R.id.dashboard_newpost_btn);
    writeButton.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        Intent i=new Intent(context,EditPost.class);
        i.putExtra("id",WordPress.currentBlog.getId());
        i.putExtra("isNew",true);
        context.startActivity(i);
      }
    }
);
    LinearLayout newPageButton=(LinearLayout)findViewById(R.id.dashboard_newpage_btn);
    newPageButton.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        Intent i=new Intent(context,EditPost.class);
        i.putExtra("id",WordPress.currentBlog.getId());
        i.putExtra("isNew",true);
        i.putExtra("isPage",true);
        context.startActivity(i);
      }
    }
);
    LinearLayout postsButton=(LinearLayout)findViewById(R.id.dashboard_posts_btn);
    postsButton.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        Intent i=new Intent(context,Posts.class);
        context.startActivity(i);
      }
    }
);
    LinearLayout pagesButton=(LinearLayout)findViewById(R.id.dashboard_pages_btn);
    pagesButton.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        Intent i=new Intent(context,Posts.class);
        i.putExtra("id",WordPress.currentBlog.getId());
        i.putExtra("isNew",true);
        i.putExtra("viewPages",true);
        context.startActivity(i);
      }
    }
);
    LinearLayout commentsButton=(LinearLayout)findViewById(R.id.dashboard_comments_btn);
    commentsButton.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        Intent i=new Intent(context,Comments.class);
        i.putExtra("id",WordPress.currentBlog.getId());
        i.putExtra("isNew",true);
        context.startActivity(i);
      }
    }
);
    LinearLayout statsButton=(LinearLayout)findViewById(R.id.dashboard_stats_btn);
    statsButton.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        Intent i=new Intent(context,ViewStats.class);
        i.putExtra("id",WordPress.currentBlog.getId());
        i.putExtra("isNew",true);
        context.startActivity(i);
      }
    }
);
    LinearLayout settingsButton=(LinearLayout)findViewById(R.id.dashboard_settings_btn);
    settingsButton.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        Intent i=new Intent(context,Settings.class);
        i.putExtra("id",WordPress.currentBlog.getId());
        i.putExtra("isNew",true);
        context.startActivity(i);
      }
    }
);
    LinearLayout subsButton=(LinearLayout)findViewById(R.id.dashboard_subs_btn);
    subsButton.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        Intent i=new Intent(context,Read.class);
        i.putExtra("id",WordPress.currentBlog.getId());
        i.putExtra("loadReader",true);
        context.startActivity(i);
      }
    }
);
    LinearLayout picButton=(LinearLayout)findViewById(R.id.dashboard_quickphoto_btn);
    picButton.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        PackageManager pm=context.getPackageManager();
        if (pm.hasSystemFeature(PackageManager.FEATURE_CAMERA)) {
          Intent i=new Intent(context,EditPost.class);
          i.putExtra("option","newphoto");
          i.putExtra("isNew",true);
          context.startActivity(i);
        }
 else {
          Toast.makeText(context,getResources().getText(R.string.no_camera_found),Toast.LENGTH_LONG);
        }
      }
    }
);
    LinearLayout videoButton=(LinearLayout)findViewById(R.id.dashboard_quickvideo_btn);
    videoButton.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        PackageManager pm=context.getPackageManager();
        if (pm.hasSystemFeature(PackageManager.FEATURE_CAMERA)) {
          Intent i=new Intent(context,EditPost.class);
          i.putExtra("option","newvideo");
          i.putExtra("isNew",true);
          context.startActivity(i);
        }
 else {
          Toast.makeText(context,getResources().getText(R.string.no_camera_found),Toast.LENGTH_LONG);
        }
      }
    }
);
  }
}
