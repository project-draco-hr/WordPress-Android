{
  final DrawerLayout drawerLayout=(DrawerLayout)findViewById(R.id.drawer_layout);
  mDrawerListView=(ListView)findViewById(R.id.left_drawer);
  mAdapter=new MenuAdapter(this);
  String[] blogNames=getBlogNames();
  if (blogNames.length > 1) {
    addBlogSpinner(blogNames);
  }
  mDrawerListView.setAdapter(mAdapter);
  mDrawerListView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      int menuPosition=position - mDrawerListView.getHeaderViewsCount();
      if (menuPosition < 0 || menuPosition >= mAdapter.getCount())       return;
      MenuDrawerItem item=mAdapter.getItem(menuPosition);
      if (item.hasItemId()) {
        ActivityId.trackLastActivity(WPActionBarActivity.this,item.getItemId());
      }
      if (!item.isSelected())       item.selectItem();
      drawerLayout.closeDrawer(Gravity.LEFT);
    }
  }
);
  mDrawerToggle=new ActionBarDrawerToggle(this,drawerLayout,mToolbar,R.string.open_drawer,R.string.close_drawer){
    public void onDrawerClosed(    View view){
      invalidateOptionsMenu();
    }
    public void onDrawerOpened(    View drawerView){
      invalidateOptionsMenu();
    }
  }
;
  drawerLayout.setDrawerListener(mDrawerToggle);
  ActionBar actionBar=getSupportActionBar();
  actionBar.setDisplayHomeAsUpEnabled(true);
  actionBar.setHomeButtonEnabled(true);
  mDrawerToggle.syncState();
  if (blogSelection != -1 && mBlogSpinner != null) {
    mBlogSpinner.setSelection(blogSelection);
  }
  updateMenuDrawer();
}
