{
  String blogId=(String)params[0];
  JSONObject response=(JSONObject)params[1];
  Context context=WordPress.getContext();
  if (response != null) {
    try {
      String date=response.getString("date");
      long dateMs=StatUtils.toMs(date);
      ArrayList<ContentProviderOperation> operations=new ArrayList<ContentProviderOperation>();
      ContentProviderOperation delete_group=ContentProviderOperation.newDelete(StatsContentProvider.STATS_CLICK_GROUP_URI).withSelection("blogId=? AND (date=? OR date<=?)",new String[]{blogId,dateMs + "",(dateMs - TWO_DAYS) + ""}).build();
      ContentProviderOperation delete_child=ContentProviderOperation.newDelete(StatsContentProvider.STATS_CLICKS_URI).withSelection("blogId=? AND (date=? OR date<=?)",new String[]{blogId,dateMs + "",(dateMs - TWO_DAYS) + ""}).build();
      operations.add(delete_group);
      operations.add(delete_child);
      JSONArray groups=response.getJSONArray("clicks");
      int groupsCount=groups.length();
      for (int i=0; i < groupsCount; i++) {
        JSONObject group=groups.getJSONObject(i);
        StatsClickGroup statGroup=new StatsClickGroup(blogId,date,group);
        ContentValues values=StatsClickGroupsTable.getContentValues(statGroup);
        ContentProviderOperation insert_group=ContentProviderOperation.newInsert(StatsContentProvider.STATS_CLICK_GROUP_URI).withValues(values).build();
        operations.add(insert_group);
        JSONArray clicks=group.getJSONArray("results");
        int count=clicks.length();
        if (count > 1) {
          for (int j=0; j < count; j++) {
            StatsClick stat=new StatsClick(blogId,date,statGroup.getGroupId(),clicks.getJSONArray(j));
            ContentValues v=StatsClicksTable.getContentValues(stat);
            ContentProviderOperation insert_child=ContentProviderOperation.newInsert(StatsContentProvider.STATS_CLICKS_URI).withValues(v).build();
            operations.add(insert_child);
          }
        }
      }
      ContentResolver resolver=context.getContentResolver();
      resolver.applyBatch(BuildConfig.STATS_PROVIDER_AUTHORITY,operations);
      resolver.notifyChange(StatsContentProvider.STATS_CLICK_GROUP_URI,null);
      resolver.notifyChange(StatsContentProvider.STATS_CLICKS_URI,null);
    }
 catch (    JSONException e) {
      e.printStackTrace();
    }
catch (    RemoteException e) {
      e.printStackTrace();
    }
catch (    OperationApplicationException e) {
      e.printStackTrace();
    }
  }
  updateRefreshMap(StatsViewType.CLICKS,-1);
  return null;
}
