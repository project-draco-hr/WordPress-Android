{
  updateUIExecutor.submit(new Thread(){
    @Override public void run(){
      AppLog.d(T.STATS,"TopPostsAndPages Call " + date + " responded");
      numberOfFinishedNetworkCalls++;
      if (response == null || !response.has("top-posts")) {
        notifyResponseReceived();
        return;
      }
      try {
        JSONArray results=response.getJSONArray("top-posts");
        int count=Math.min(results.length(),StatsActivity.STATS_GROUP_MAX_ITEMS);
        String date=response.getString("date");
        long dateMs=StatUtils.toMs(date);
        ArrayList<ContentProviderOperation> operations=new ArrayList<ContentProviderOperation>();
        ContentProviderOperation delete_op=ContentProviderOperation.newDelete(StatsContentProvider.STATS_TOP_POSTS_AND_PAGES_URI).withSelection("blogId=? AND (date=? OR date<=?)",new String[]{mBlogId,dateMs + "",(dateMs - TWO_DAYS) + ""}).build();
        operations.add(delete_op);
        for (int i=0; i < count; i++) {
          JSONObject result=results.getJSONObject(i);
          StatsTopPostsAndPages stat=new StatsTopPostsAndPages(mBlogId,result);
          ContentValues values=StatsTopPostsAndPagesTable.getContentValues(stat);
          ContentProviderOperation op=ContentProviderOperation.newInsert(StatsContentProvider.STATS_TOP_POSTS_AND_PAGES_URI).withValues(values).build();
          operations.add(op);
        }
        getContentResolver().applyBatch(BuildConfig.STATS_PROVIDER_AUTHORITY,operations);
        getContentResolver().notifyChange(StatsContentProvider.STATS_TOP_POSTS_AND_PAGES_URI,null);
      }
 catch (      JSONException e) {
        AppLog.e(AppLog.T.STATS,e);
      }
catch (      RemoteException e) {
        AppLog.e(AppLog.T.STATS,e);
      }
catch (      OperationApplicationException e) {
        AppLog.e(AppLog.T.STATS,e);
      }
      notifyResponseReceived();
    }
  }
);
}
