{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.reader_activity_tags);
  if (savedInstanceState != null) {
    mTagsChanged=savedInstanceState.getBoolean(KEY_TAGS_CHANGED);
    mLastAddedTag=savedInstanceState.getString(KEY_LAST_ADDED_TAG);
    mAlreadyUpdatedTagList=savedInstanceState.getBoolean(KEY_TAG_LIST_UPDATED);
    mIsShowingFollowedTags=savedInstanceState.getBoolean(KEY_SHOWING_FOLLOWED,true);
  }
  mTxtTitle=(TextView)findViewById(R.id.text_title);
  mTxtTitle.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      toggleTopics();
    }
  }
);
  mTxtMessageBar=(TextView)findViewById(R.id.text_message_bar);
  mLayoutAddTag=(ViewGroup)findViewById(R.id.layout_add_topic);
  mEditAddTag=(EditText)findViewById(R.id.edit_add);
  mEditAddTag.setOnEditorActionListener(new TextView.OnEditorActionListener(){
    @Override public boolean onEditorAction(    TextView v,    int actionId,    KeyEvent event){
      if (actionId == EditorInfo.IME_ACTION_DONE)       addCurrentTopic();
      return false;
    }
  }
);
  final ImageButton btnAddTopic=(ImageButton)findViewById(R.id.btn_add);
  btnAddTopic.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      addCurrentTopic();
    }
  }
);
  updateTitle();
  getListView().setAdapter(getTagAdapter());
  getTagAdapter().setTopicType(mIsShowingFollowedTags ? ReaderTag.ReaderTagType.SUBSCRIBED : ReaderTag.ReaderTagType.RECOMMENDED);
  if (!mAlreadyUpdatedTagList) {
    updateTagList();
    mAlreadyUpdatedTagList=true;
  }
}
