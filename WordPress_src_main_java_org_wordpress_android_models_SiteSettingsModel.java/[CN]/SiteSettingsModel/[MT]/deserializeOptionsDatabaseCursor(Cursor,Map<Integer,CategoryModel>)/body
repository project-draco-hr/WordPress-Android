{
  if (cursor == null || !cursor.moveToFirst() || cursor.getCount() == 0)   return;
  localTableId=cursor.getInt(cursor.getColumnIndex(ID_COLUMN_NAME));
  address=cursor.getString(cursor.getColumnIndex(ADDRESS_COLUMN_NAME));
  username=cursor.getString(cursor.getColumnIndex(USERNAME_COLUMN_NAME));
  password=cursor.getString(cursor.getColumnIndex(PASSWORD_COLUMN_NAME));
  title=cursor.getString(cursor.getColumnIndex(TITLE_COLUMN_NAME));
  tagline=cursor.getString(cursor.getColumnIndex(TAGLINE_COLUMN_NAME));
  languageId=cursor.getInt(cursor.getColumnIndex(LANGUAGE_COLUMN_NAME));
  privacy=cursor.getInt(cursor.getColumnIndex(PRIVACY_COLUMN_NAME));
  defaultCategory=cursor.getInt(cursor.getColumnIndex(DEF_CATEGORY_COLUMN_NAME));
  defaultPostFormat=cursor.getString(cursor.getColumnIndex(DEF_POST_FORMAT_COLUMN_NAME));
  String cachedCategories=cursor.getString(cursor.getColumnIndex(CATEGORIES_COLUMN_NAME));
  String cachedFormats=cursor.getString(cursor.getColumnIndex(POST_FORMATS_COLUMN_NAME));
  if (models != null && !TextUtils.isEmpty(cachedCategories)) {
    String[] split=cachedCategories.split(",");
    categories=new CategoryModel[split.length];
    for (int i=0; i < split.length; ++i) {
      int catId=Integer.parseInt(split[i]);
      categories[i]=models.get(catId);
    }
  }
  if (!TextUtils.isEmpty(cachedFormats)) {
    String[] split=cachedFormats.split(";");
    postFormats=new HashMap<>();
    for (    String format : split) {
      String[] kvp=format.split(",");
      postFormats.put(kvp[0],kvp[1]);
    }
  }
  isInLocalTable=true;
}
