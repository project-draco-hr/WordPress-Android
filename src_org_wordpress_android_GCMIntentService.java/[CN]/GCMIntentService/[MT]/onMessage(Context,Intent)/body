{
  Log.v("WORDPRESS","Received Message");
  if (!WordPress.hasValidWPComCredentials(context))   return;
  Bundle extras=intent.getExtras();
  if (extras == null) {
    Log.v("WORDPRESS","Hrm. No notification message content received. Aborting.");
    return;
  }
  long wpcomUserID=ReaderPrefs.getCurrentUserId();
  if (wpcomUserID <= 0) {
    Log.v("WORDPRESS","Hrm. No wpcom userId found in the app. Aborting.");
    return;
  }
  String userIDFromPN=extras.getString("user");
  if (!String.valueOf(wpcomUserID).equals(userIDFromPN)) {
    Log.v("WORDPRESS","Hrm. wpcom userId found in the app doesn't match with the ID in the PN. Aborting.");
    return;
  }
  String title=extras.getString("title");
  if (title == null)   title="WordPress";
  String message=StringUtils.unescapeHTML(extras.getString("msg"));
  String note_id=extras.getString("note_id");
  Note note=null;
  if (extras.getString("note_full_data") != null) {
    byte[] decode=Base64.decode(intent.getStringExtra("note_full_data"),Base64.DEFAULT);
    String unzippedString=NotificationUtils.unzipString(decode);
    JSONObject jsonObject=null;
    try {
      jsonObject=new JSONObject(unzippedString);
      JSONArray notesJSON=jsonObject.getJSONArray("notes");
      note=new Note(notesJSON.getJSONObject(0));
      WordPress.wpDB.addNote(note,false);
    }
 catch (    JSONException e) {
      Log.e(WordPress.TAG,"Can't parse restRequest JSON response, notifications: " + e);
    }
  }
 else {
    note=new Note(extras);
    WordPress.wpDB.addNote(note,true);
    refreshNotes();
  }
  boolean md5GeneratedNoteId=false;
  if (note_id == null && note != null) {
    note_id=String.valueOf(WordPressDB.generateIdFor(note));
    md5GeneratedNoteId=true;
  }
  long thisTime=System.currentTimeMillis();
  if (mPreviousNoteId != null && mPreviousNoteId.equals(note_id)) {
    long seconds=TimeUnit.MILLISECONDS.toSeconds(thisTime - mPreviousNoteTime);
    if (seconds <= 1) {
      Log.w("WORDPRESS","skipped potential duplicate notification");
      return;
    }
  }
  mPreviousNoteId=note_id;
  mPreviousNoteTime=thisTime;
  if (note_id != null) {
    if (!activeNotificationsMap.containsKey(note_id))     activeNotificationsMap.put(note_id,extras);
  }
  String iconURL=extras.getString("icon");
  Bitmap largeIconBitmap=null;
  if (iconURL != null) {
    try {
      iconURL=URLDecoder.decode(iconURL,"UTF-8");
    }
 catch (    UnsupportedEncodingException e) {
      e.printStackTrace();
    }
    float screenDensity=getResources().getDisplayMetrics().densityDpi;
    int size=Math.round(64 * (screenDensity / 160));
    String resizedURL=iconURL.replaceAll("(?<=[?&;])s=[0-9]*","s=" + size);
    largeIconBitmap=ImageHelper.downloadBitmap(resizedURL);
  }
  SharedPreferences prefs=PreferenceManager.getDefaultSharedPreferences(context);
  boolean sound, vibrate, light;
  sound=prefs.getBoolean("wp_pref_notification_sound",false);
  vibrate=prefs.getBoolean("wp_pref_notification_vibrate",false);
  light=prefs.getBoolean("wp_pref_notification_light",false);
  NotificationCompat.Builder mBuilder;
  Intent resultIntent=new Intent(this,PostsActivity.class);
  resultIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK | IntentCompat.FLAG_ACTIVITY_CLEAR_TASK);
  resultIntent.setAction("android.intent.action.MAIN");
  resultIntent.addCategory("android.intent.category.LAUNCHER");
  resultIntent.putExtra(NotificationsActivity.FROM_NOTIFICATION_EXTRA,true);
  if (activeNotificationsMap.size() <= 1) {
    mBuilder=new NotificationCompat.Builder(this).setSmallIcon(R.drawable.notification_icon).setContentTitle(title).setContentText(message).setTicker(message).setAutoCancel(true).setStyle(new NotificationCompat.BigTextStyle().bigText(message));
    if (md5GeneratedNoteId)     resultIntent.putExtra(NotificationsActivity.MD5_NOTE_ID_EXTRA,note_id);
    if (note_id != null)     resultIntent.putExtra(NotificationsActivity.NOTE_ID_EXTRA,note_id);
    String noteType=extras.getString("type");
    if (noteType != null && noteType.equals("c")) {
      Intent commentReplyIntent=new Intent(this,PostsActivity.class);
      commentReplyIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK | IntentCompat.FLAG_ACTIVITY_CLEAR_TASK);
      commentReplyIntent.setAction("android.intent.action.MAIN");
      commentReplyIntent.addCategory("android.intent.category.LAUNCHER");
      commentReplyIntent.addCategory("comment-reply");
      commentReplyIntent.putExtra(NotificationsActivity.FROM_NOTIFICATION_EXTRA,true);
      commentReplyIntent.putExtra(NotificationsActivity.NOTE_INSTANT_REPLY_EXTRA,true);
      if (note_id != null)       commentReplyIntent.putExtra(NotificationsActivity.NOTE_ID_EXTRA,note_id);
      PendingIntent commentReplyPendingIntent=PendingIntent.getActivity(context,0,commentReplyIntent,PendingIntent.FLAG_CANCEL_CURRENT);
      mBuilder.addAction(R.drawable.ab_icon_reply,getResources().getText(R.string.reply),commentReplyPendingIntent);
    }
    if (largeIconBitmap != null) {
      mBuilder.setLargeIcon(largeIconBitmap);
    }
  }
 else {
    NotificationCompat.InboxStyle inboxStyle=new NotificationCompat.InboxStyle();
    int noteCtr=1;
    for (    Bundle wpNotification : activeNotificationsMap.values()) {
      if (noteCtr > 5)       break;
      if (wpNotification.getString("msg") != null) {
        if (wpNotification.getString("type").equals("c"))         inboxStyle.addLine(wpNotification.getString("title") + ": " + wpNotification.getString("msg"));
 else         inboxStyle.addLine(wpNotification.getString("msg"));
        noteCtr++;
      }
    }
    if (activeNotificationsMap.size() > 5)     inboxStyle.setSummaryText(String.format(getString(R.string.more_notifications),activeNotificationsMap.size() - 5));
    String subject=String.format(getString(R.string.new_notifications),activeNotificationsMap.size());
    mBuilder=new NotificationCompat.Builder(this).setLargeIcon(BitmapFactory.decodeResource(getResources(),R.drawable.notification_multi)).setSmallIcon(R.drawable.notification_icon).setContentTitle("WordPress").setContentText(subject).setTicker(message).setAutoCancel(true).setStyle(inboxStyle);
  }
  if (sound)   mBuilder.setSound(Uri.parse("android.resource://" + getPackageName() + "/"+ R.raw.notification));
  if (vibrate)   mBuilder.setVibrate(new long[]{500,500,500});
  if (light)   mBuilder.setLights(0xff0000ff,1000,5000);
  PendingIntent pendingIntent=PendingIntent.getActivity(context,0,resultIntent,PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_UPDATE_CURRENT);
  mBuilder.setContentIntent(pendingIntent);
  NotificationManager mNotificationManager=(NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);
  mNotificationManager.notify(notificationId,mBuilder.build());
  broadcastNewNotification();
}
