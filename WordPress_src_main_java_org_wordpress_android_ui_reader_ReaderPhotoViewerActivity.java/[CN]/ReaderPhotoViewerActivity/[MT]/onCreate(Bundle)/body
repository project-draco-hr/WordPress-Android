{
  super.onCreate(savedInstanceState);
  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
  setContentView(R.layout.reader_activity_photo_viewer);
  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
    getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_FULLSCREEN);
  }
  mViewPager=(ReaderViewPager)findViewById(R.id.viewpager);
  mTxtTitle=(TextView)findViewById(R.id.text_title);
  mTxtTitle.setVisibility(View.GONE);
  if (savedInstanceState != null) {
    mInitialImageUrl=savedInstanceState.getString(ReaderConstants.ARG_IMAGE_URL);
    mIsPrivate=savedInstanceState.getBoolean(ReaderConstants.ARG_IS_PRIVATE);
    mContent=savedInstanceState.getString(ReaderConstants.ARG_CONTENT);
  }
 else   if (getIntent() != null) {
    mInitialImageUrl=getIntent().getStringExtra(ReaderConstants.ARG_IMAGE_URL);
    mIsPrivate=getIntent().getBooleanExtra(ReaderConstants.ARG_IS_PRIVATE,false);
    mContent=getIntent().getStringExtra(ReaderConstants.ARG_CONTENT);
  }
  mViewPager.setPageTransformer(false,new ReaderViewPagerTransformer(TransformType.FLOW));
  mViewPager.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener(){
    @Override public void onPageSelected(    int position){
      updateTitle(position);
    }
  }
);
  loadImageList();
}
