{
  mVisitsData=visitsData;
  final JSONArray dataJSON=visitsData.getDataJSON();
  if (dataJSON == null || dataJSON.length() == 0) {
    setupEmptyGraph();
    return;
  }
  final VisitModel[] dataToShowOnGraph=getDataToShowOnGraph(visitsData);
  final String[] horLabels=new String[dataToShowOnGraph.length];
  mStatsDate=new String[dataToShowOnGraph.length];
  GraphView.GraphViewData[] views=new GraphView.GraphViewData[dataToShowOnGraph.length];
  boolean isEmptyGraph=true;
  OverviewLabel selectedStatsType=overviewItems[mSelectedButtonIndex];
  for (int i=0; i < dataToShowOnGraph.length; i++) {
    int currentItemValue=0;
switch (selectedStatsType) {
case VIEWS:
      currentItemValue=dataToShowOnGraph[i].getViews();
    break;
case VISITORS:
  currentItemValue=dataToShowOnGraph[i].getVisitors();
break;
case REBLOGS:
currentItemValue=dataToShowOnGraph[i].getReblogs();
break;
case LIKES:
currentItemValue=dataToShowOnGraph[i].getLikes();
break;
case COMMENTS:
currentItemValue=dataToShowOnGraph[i].getComments();
break;
}
views[i]=new GraphView.GraphViewData(i,currentItemValue);
String currentItemStatsDate=dataToShowOnGraph[i].getPeriod();
horLabels[i]=getDateLabel(currentItemStatsDate);
mStatsDate[i]=currentItemStatsDate;
if (currentItemValue > 0) {
isEmptyGraph=false;
}
}
mCurrentSeriesOnScreen=new GraphViewSeries(views);
mCurrentSeriesOnScreen.getStyle().color=getResources().getColor(R.color.stats_bar_graph_views);
mCurrentSeriesOnScreen.getStyle().padding=DisplayUtils.dpToPx(getActivity(),1);
if (isEmptyGraph) {
setupEmptyGraph();
}
 else {
if (mGraphContainer.getChildCount() >= 1 && mGraphContainer.getChildAt(0) instanceof GraphView) {
mGraphView=(StatsBarGraph)mGraphContainer.getChildAt(0);
}
 else {
mGraphContainer.removeAllViews();
mGraphView=new StatsBarGraph(getActivity());
mGraphContainer.addView(mGraphView);
}
if (mGraphView != null) {
mGraphView.removeAllSeries();
mGraphView.addSeries(mCurrentSeriesOnScreen);
mGraphView.getGraphViewStyle().setNumHorizontalLabels(dataToShowOnGraph.length);
mGraphView.setHorizontalLabels(horLabels);
mGraphView.setGestureListener(this);
if (barToHighlight != -1) {
mGraphView.highlightBar(barToHighlight);
}
 else {
mGraphView.highlightBar(dataToShowOnGraph.length - 1);
}
}
}
int barSelectedOnGraph=barToHighlight != -1 ? barToHighlight : dataToShowOnGraph.length - 1;
updateOverviewAreaBelowTheGraph(barSelectedOnGraph);
}
