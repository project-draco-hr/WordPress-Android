{
  final JSONArray dataJSON=visitsData.getDataJSON();
  if (dataJSON == null) {
    return null;
  }
  if (dataJSON.length() == 0) {
    return new VisitModel[0];
  }
  HashMap<String,Integer> columnsMapping=new HashMap<String,Integer>(6);
  final JSONArray fieldsJSON=visitsData.getFieldsJSON();
  if (visitsData == null || fieldsJSON == null) {
    return new VisitModel[0];
  }
  try {
    for (int i=0; i < fieldsJSON.length(); i++) {
      final String field=fieldsJSON.getString(i);
      columnsMapping.put(field,i);
    }
  }
 catch (  JSONException e) {
    AppLog.e(AppLog.T.STATS,"Cannot read the fields indexes from the JSON response",e);
    return new VisitModel[0];
  }
  int viewsColumnIndex=columnsMapping.get(OverviewLabel.VIEWS.getRestApiFieldName());
  int visitorsColumnIndex=columnsMapping.get(OverviewLabel.VISITORS.getRestApiFieldName());
  int likesColumnIndex=columnsMapping.get(OverviewLabel.LIKES.getRestApiFieldName());
  int reblogsColumnIndex=columnsMapping.get(OverviewLabel.REBLOGS.getRestApiFieldName());
  int commentsColumnIndex=columnsMapping.get(OverviewLabel.COMMENTS.getRestApiFieldName());
  int periodColumnIndex=columnsMapping.get("period");
  int numPoints=Math.min(getNumOfPoints(),dataJSON.length());
  int currentPointIndex=numPoints - 1;
  VisitModel[] visitModels=new VisitModel[numPoints];
  for (int i=dataJSON.length() - 1; i >= 0 && currentPointIndex >= 0; i--) {
    try {
      JSONArray currentDayData=dataJSON.getJSONArray(i);
      VisitModel currentVisitModel=new VisitModel();
      currentVisitModel.setPeriod(currentDayData.getString(periodColumnIndex));
      currentVisitModel.setViews(currentDayData.getInt(viewsColumnIndex));
      currentVisitModel.setVisitors(currentDayData.getInt(visitorsColumnIndex));
      currentVisitModel.setComments(currentDayData.getInt(commentsColumnIndex));
      currentVisitModel.setLikes(currentDayData.getInt(likesColumnIndex));
      currentVisitModel.setReblogs(currentDayData.getInt(reblogsColumnIndex));
      visitModels[currentPointIndex]=currentVisitModel;
    }
 catch (    JSONException e) {
      AppLog.e(AppLog.T.STATS,"Cannot draw the bar at index " + currentPointIndex,e);
    }
    currentPointIndex--;
  }
  return visitModels;
}
