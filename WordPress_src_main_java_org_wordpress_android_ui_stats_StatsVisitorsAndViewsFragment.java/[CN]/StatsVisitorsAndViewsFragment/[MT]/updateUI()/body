{
  if (!isAdded()) {
    return;
  }
  if (mVisitsData == null) {
    setupNoResultsUI(false);
    return;
  }
  if (mVisitsData instanceof VolleyError || mVisitsData instanceof StatsError) {
    setupNoResultsUI(false);
    return;
  }
  final VisitModel[] dataToShowOnGraph=getDataToShowOnGraph((VisitsModel)mVisitsData);
  if (dataToShowOnGraph == null || dataToShowOnGraph.length == 0) {
    setupNoResultsUI(false);
    return;
  }
  OverviewLabel selectedStatsType=overviewItems[mSelectedOverviewItemIndex];
switch (selectedStatsType) {
case VIEWS:
    mVisitorsAndViewsCheckBoxesContainer.setVisibility(View.VISIBLE);
  mViewsCheckbox.setEnabled(false);
mViewsCheckbox.setChecked(false);
mVisitorsCheckbox.setEnabled(true);
mVisitorsCheckbox.setChecked(mIsCheckboxChecked);
mLegendViews.setBackgroundResource(R.color.stats_bar_graph_views);
mLegendVisitors.setBackgroundResource(R.color.stats_bar_graph_views_inner);
break;
case VISITORS:
mVisitorsAndViewsCheckBoxesContainer.setVisibility(View.VISIBLE);
mViewsCheckbox.setEnabled(true);
mViewsCheckbox.setChecked(mIsCheckboxChecked);
mVisitorsCheckbox.setEnabled(false);
mVisitorsCheckbox.setChecked(false);
mLegendViews.setBackgroundResource(R.color.stats_bar_graph_views_inner);
mLegendVisitors.setBackgroundResource(R.color.stats_bar_graph_views);
break;
default :
mVisitorsAndViewsCheckBoxesContainer.setVisibility(View.GONE);
break;
}
final String[] horLabels=new String[dataToShowOnGraph.length];
mStatsDate=new String[dataToShowOnGraph.length];
GraphView.GraphViewData[] mainSeriesItems=new GraphView.GraphViewData[dataToShowOnGraph.length];
GraphView.GraphViewData[] secondarySeriesItems=null;
if (mIsCheckboxChecked) {
secondarySeriesItems=new GraphView.GraphViewData[dataToShowOnGraph.length];
}
for (int i=0; i < dataToShowOnGraph.length; i++) {
int currentItemValue=0;
switch (selectedStatsType) {
case VIEWS:
currentItemValue=dataToShowOnGraph[i].getViews();
break;
case VISITORS:
currentItemValue=dataToShowOnGraph[i].getVisitors();
break;
case LIKES:
currentItemValue=dataToShowOnGraph[i].getLikes();
break;
case COMMENTS:
currentItemValue=dataToShowOnGraph[i].getComments();
break;
}
mainSeriesItems[i]=new GraphView.GraphViewData(i,currentItemValue);
if (mIsCheckboxChecked && secondarySeriesItems != null) {
switch (selectedStatsType) {
case VIEWS:
secondarySeriesItems[i]=new GraphView.GraphViewData(i,dataToShowOnGraph[i].getVisitors());
break;
case VISITORS:
secondarySeriesItems[i]=new GraphView.GraphViewData(i,dataToShowOnGraph[i].getViews());
break;
}
}
String currentItemStatsDate=dataToShowOnGraph[i].getPeriod();
horLabels[i]=getDateLabelForBarInGraph(currentItemStatsDate);
mStatsDate[i]=currentItemStatsDate;
}
if (mGraphContainer.getChildCount() >= 1 && mGraphContainer.getChildAt(0) instanceof GraphView) {
mGraphView=(StatsBarGraph)mGraphContainer.getChildAt(0);
}
 else {
mGraphContainer.removeAllViews();
mGraphView=new StatsBarGraph(getActivity());
mGraphContainer.addView(mGraphView);
}
mGraphView.removeAllSeries();
GraphViewSeries mainSeriesOnScreen=new GraphViewSeries(mainSeriesItems);
if (secondarySeriesItems != null) {
GraphViewSeries secondarySeries=new GraphViewSeries(secondarySeriesItems);
if (selectedStatsType == OverviewLabel.VIEWS) {
mainSeriesOnScreen.getStyle().padding=DisplayUtils.dpToPx(getActivity(),5);
mainSeriesOnScreen.getStyle().highlightColor=getResources().getColor(R.color.calypso_orange_dark);
mainSeriesOnScreen.getStyle().color=getResources().getColor(R.color.stats_bar_graph_views);
secondarySeries.getStyle().padding=DisplayUtils.dpToPx(getActivity(),8);
secondarySeries.getStyle().color=getResources().getColor(R.color.stats_bar_graph_views_inner);
secondarySeries.getStyle().highlightColor=getResources().getColor(R.color.stats_bar_graph_views_inner_highlight);
mGraphView.addSeries(mainSeriesOnScreen);
mGraphView.addSeries(secondarySeries);
}
 else {
secondarySeries.getStyle().padding=DisplayUtils.dpToPx(getActivity(),5);
secondarySeries.getStyle().highlightColor=getResources().getColor(R.color.stats_bar_graph_views_inner_highlight);
secondarySeries.getStyle().color=getResources().getColor(R.color.stats_bar_graph_views_inner);
mainSeriesOnScreen.getStyle().padding=DisplayUtils.dpToPx(getActivity(),8);
mainSeriesOnScreen.getStyle().highlightColor=getResources().getColor(R.color.calypso_orange_dark);
mainSeriesOnScreen.getStyle().color=getResources().getColor(R.color.stats_bar_graph_views);
mGraphView.addSeries(secondarySeries);
mGraphView.addSeries(mainSeriesOnScreen);
}
}
 else {
mainSeriesOnScreen.getStyle().color=getResources().getColor(R.color.stats_bar_graph_views);
mainSeriesOnScreen.getStyle().highlightColor=getResources().getColor(R.color.calypso_orange_dark);
mainSeriesOnScreen.getStyle().padding=DisplayUtils.dpToPx(getActivity(),5);
mGraphView.addSeries(mainSeriesOnScreen);
}
mGraphView.getGraphViewStyle().setNumHorizontalLabels(dataToShowOnGraph.length);
mGraphView.setHorizontalLabels(horLabels);
mGraphView.setGestureListener(this);
int barSelectedOnGraph;
if (mSelectedBarGraphBarIndex == -1) {
barSelectedOnGraph=dataToShowOnGraph.length - 1;
}
 else if (mSelectedBarGraphBarIndex < dataToShowOnGraph.length) {
barSelectedOnGraph=mSelectedBarGraphBarIndex;
}
 else {
barSelectedOnGraph=dataToShowOnGraph.length - 1;
mSelectedBarGraphBarIndex=barSelectedOnGraph;
}
updateUIBelowTheGraph(barSelectedOnGraph);
mGraphView.highlightBar(barSelectedOnGraph);
}
