{
  if (!isAdded()) {
    return;
  }
  if (mVisitsData == null) {
    setupNoResultsUI(false);
    return;
  }
  if (mVisitsData instanceof VolleyError) {
    setupNoResultsUI(false);
    return;
  }
  final VisitModel[] dataToShowOnGraph=getDataToShowOnGraph((VisitsModel)mVisitsData);
  if (dataToShowOnGraph.length == 0) {
    return;
  }
  if (dataToShowOnGraph.length <= itemPosition || itemPosition == -1) {
    itemPosition=dataToShowOnGraph.length - 1;
  }
  String date=mStatsDate[itemPosition];
  if (date == null) {
    AppLog.w(AppLog.T.STATS,"Cannot update the area below the graph if a null date is passed!!");
    return;
  }
  mDateTextView.setText(getDateForDisplayInLabels(date,getTimeframe()));
  VisitModel modelTapped=dataToShowOnGraph[itemPosition];
  for (int i=0; i < mModuleButtonsContainer.getChildCount(); i++) {
    View o=mModuleButtonsContainer.getChildAt(i);
    if (o instanceof LinearLayout && o.getTag() instanceof TabViewHolder) {
      TabViewHolder tabViewHolder=(TabViewHolder)o.getTag();
      int currentValue=0;
switch (tabViewHolder.labelItem) {
case VIEWS:
        currentValue=modelTapped.getViews();
      break;
case VISITORS:
    currentValue=modelTapped.getVisitors();
  break;
case LIKES:
currentValue=modelTapped.getLikes();
break;
case COMMENTS:
currentValue=modelTapped.getComments();
break;
}
tabViewHolder.value.setText(FormatUtils.formatDecimal(currentValue));
tabViewHolder.updateBackGroundAndIcon(currentValue);
}
}
}
