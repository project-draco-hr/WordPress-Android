{
  EditText urlET=(EditText)findViewById(R.id.url);
  if (wpcom) {
    blogURL="http://wordpress.com";
  }
 else {
    blogURL=urlET.getText().toString().trim();
  }
  EditText usernameET=(EditText)findViewById(R.id.username);
  final String username=usernameET.getText().toString().trim();
  EditText passwordET=(EditText)findViewById(R.id.password);
  final String password=passwordET.getText().toString().trim();
  boolean invalidURL=false;
  try {
    URI.create(blogURL);
  }
 catch (  Exception e1) {
    invalidURL=true;
  }
  if (blogURL.equals("") || username.equals("") || password.equals("")) {
    pd.dismiss();
    AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(AddAccount.this);
    dialogBuilder.setTitle(getResources().getText(R.string.required_fields));
    dialogBuilder.setMessage(getResources().getText(R.string.url_username_password_required));
    dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
      public void onClick(      DialogInterface dialog,      int whichButton){
      }
    }
);
    dialogBuilder.setCancelable(true);
    dialogBuilder.create().show();
  }
 else   if (invalidURL) {
    pd.dismiss();
    AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(AddAccount.this);
    dialogBuilder.setTitle(getResources().getText(R.string.invalid_url));
    dialogBuilder.setMessage(getResources().getText(R.string.invalid_url_message));
    dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
      public void onClick(      DialogInterface dialog,      int whichButton){
      }
    }
);
    dialogBuilder.setCancelable(true);
    dialogBuilder.create().show();
  }
 else {
    if (!(blogURL.toLowerCase().contains("http://")) && !(blogURL.toLowerCase().contains("https://"))) {
      blogURL="http://" + blogURL;
    }
    String rsdUrl=getRSDMetaTagHrefRegEx(blogURL);
    if (rsdUrl == null) {
      rsdUrl=getRSDMetaTagHref(blogURL);
    }
    if (rsdUrl != null) {
      xmlrpcURL=getXMLRPCUrl(rsdUrl);
      if (xmlrpcURL == null)       xmlrpcURL=rsdUrl.replace("?rsd","");
    }
 else {
      isCustomURL=false;
      client=new XMLRPCClient(blogURL,httpuser,httppassword);
      try {
        client.call("system.listMethods");
        xmlrpcURL=blogURL;
        isCustomURL=true;
      }
 catch (      XMLRPCException e) {
        String guessURL=blogURL;
        if (guessURL.substring(guessURL.length() - 1,guessURL.length()).equals("/")) {
          guessURL=guessURL.substring(0,guessURL.length() - 1);
        }
        guessURL+="/xmlrpc.php";
        client=new XMLRPCClient(guessURL,httpuser,httppassword);
        try {
          client.call("system.listMethods");
          xmlrpcURL=guessURL;
        }
 catch (        XMLRPCException ex) {
        }
      }
    }
    if (xmlrpcURL == null) {
      pd.dismiss();
      AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(AddAccount.this);
      dialogBuilder.setTitle(getResources().getText(R.string.error));
      dialogBuilder.setMessage(getResources().getText(R.string.no_site_error));
      dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
        public void onClick(        DialogInterface dialog,        int whichButton){
        }
      }
);
      dialogBuilder.setCancelable(true);
      dialogBuilder.create().show();
    }
 else {
      client=new XMLRPCClient(xmlrpcURL,httpuser,httppassword);
      XMLRPCMethod method=new XMLRPCMethod("wp.getUsersBlogs",new XMLRPCMethodCallback(){
        @SuppressWarnings("unchecked") public void callFinished(        Object[] result){
          final String[] blogNames=new String[result.length];
          final String[] urls=new String[result.length];
          final int[] blogIds=new int[result.length];
          final boolean[] wpcoms=new boolean[result.length];
          final String[] wpVersions=new String[result.length];
          HashMap<Object,Object> contentHash=new HashMap<Object,Object>();
          for (int ctr=0; ctr < result.length; ctr++) {
            contentHash=(HashMap<Object,Object>)result[ctr];
            boolean match=false;
            String matchBlogName=contentHash.get("blogName").toString();
            if (matchBlogName.length() == 0) {
              matchBlogName=contentHash.get("url").toString();
            }
            match=WordPress.wpDB.checkMatch(matchBlogName,contentHash.get("xmlrpc").toString(),username);
            if (!match) {
              blogNames[blogCtr]=matchBlogName;
              if (isCustomURL)               urls[blogCtr]=blogURL;
 else               urls[blogCtr]=contentHash.get("xmlrpc").toString();
              blogIds[blogCtr]=Integer.parseInt(contentHash.get("blogid").toString());
              String blogURL=urls[blogCtr];
              aBlogNames.add(EscapeUtils.unescapeHtml(blogNames[blogCtr]));
              boolean wpcomFlag=false;
              if (blogURL.toLowerCase().contains("wordpress.com")) {
                wpcomFlag=true;
              }
              wpcoms[blogCtr]=wpcomFlag;
              String wpVersion="";
              if (!wpcomFlag) {
                HashMap<String,String> hPost=new HashMap<String,String>();
                hPost.put("software_version","software_version");
                Object[] vParams={1,username,password,hPost};
                Object versionResult=new Object();
                try {
                  versionResult=(Object)client.call("wp.getOptions",vParams);
                }
 catch (                XMLRPCException e) {
                }
                if (versionResult != null) {
                  try {
                    contentHash=(HashMap<Object,Object>)versionResult;
                    HashMap<?,?> sv=(HashMap<?,?>)contentHash.get("software_version");
                    wpVersion=sv.get("value").toString();
                  }
 catch (                  Exception e) {
                  }
                }
              }
 else {
                wpVersion="3.4";
              }
              wpVersions[blogCtr]=wpVersion;
              blogCtr++;
            }
          }
          pd.dismiss();
          if (blogCtr == 0) {
            AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(AddAccount.this);
            dialogBuilder.setTitle("No Blogs Found");
            String additionalText="";
            if (result.length > 0) {
              additionalText=" additional ";
            }
            dialogBuilder.setMessage("No " + additionalText + "blogs were found for that account.");
            dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
              public void onClick(              DialogInterface dialog,              int whichButton){
              }
            }
);
            dialogBuilder.setCancelable(true);
            dialogBuilder.create().show();
          }
 else {
            if (blogCtr > 1) {
              LayoutInflater inflater=(LayoutInflater)AddAccount.this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
              final ListView lv=(ListView)inflater.inflate(R.layout.select_blogs_list,null);
              lv.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
              lv.setItemsCanFocus(false);
              ArrayAdapter<CharSequence> blogs=new ArrayAdapter<CharSequence>(AddAccount.this,R.layout.blogs_row,aBlogNames);
              lv.setAdapter(blogs);
              AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(AddAccount.this);
              dialogBuilder.setTitle("Select Blogs");
              dialogBuilder.setView(lv);
              dialogBuilder.setNegativeButton("Add Selected",new DialogInterface.OnClickListener(){
                public void onClick(                DialogInterface dialog,                int whichButton){
                  SparseBooleanArray selectedItems=lv.getCheckedItemPositions();
                  for (int i=0; i < selectedItems.size(); i++) {
                    if (selectedItems.get(selectedItems.keyAt(i)) == true) {
                      int rowID=selectedItems.keyAt(i);
                      long blogID=WordPress.wpDB.addAccount(urls[rowID],blogNames[rowID],username,password,httpuser,httppassword,"Above Text",true,false,"500",5,false,blogIds[rowID],wpcoms[rowID],wpVersions[rowID]);
                      success=blogID > 0;
                    }
                  }
                  Bundle bundle=new Bundle();
                  bundle.putString("returnStatus","SAVE");
                  Intent mIntent=new Intent();
                  mIntent.putExtras(bundle);
                  setResult(RESULT_OK,mIntent);
                  finish();
                }
              }
);
              dialogBuilder.setPositiveButton("Add All",new DialogInterface.OnClickListener(){
                public void onClick(                DialogInterface dialog,                int whichButton){
                  for (int i=0; i < blogCtr; i++) {
                    long blogID=WordPress.wpDB.addAccount(urls[i],blogNames[i],username,password,httpuser,httppassword,"Above Text",true,false,"500",5,false,blogIds[i],wpcoms[i],wpVersions[i]);
                    success=blogID > 0;
                  }
                  Bundle bundle=new Bundle();
                  bundle.putString("returnStatus","SAVE");
                  Intent mIntent=new Intent();
                  mIntent.putExtras(bundle);
                  setResult(RESULT_OK,mIntent);
                  finish();
                }
              }
);
              dialogBuilder.setCancelable(true);
              AlertDialog ad=dialogBuilder.create();
              ad.setInverseBackgroundForced(true);
              ad.show();
              final Button addSelected=ad.getButton(AlertDialog.BUTTON_NEGATIVE);
              addSelected.setEnabled(false);
              lv.setOnItemClickListener(new OnItemClickListener(){
                public void onItemClick(                AdapterView<?> arg0,                View arg1,                int arg2,                long arg3){
                  SparseBooleanArray selectedItems=lv.getCheckedItemPositions();
                  boolean isChecked=false;
                  for (int i=0; i < selectedItems.size(); i++) {
                    if (selectedItems.get(selectedItems.keyAt(i)) == true) {
                      isChecked=true;
                    }
                  }
                  if (!isChecked) {
                    addSelected.setEnabled(false);
                  }
 else {
                    addSelected.setEnabled(true);
                  }
                }
              }
);
            }
 else {
              long blogID=WordPress.wpDB.addAccount(urls[0],blogNames[0],username,password,httpuser,httppassword,"Above Text",true,false,"500",5,false,blogIds[0],wpcoms[0],wpVersions[0]);
              success=blogID > 0;
              Bundle bundle=new Bundle();
              bundle.putString("returnStatus","SAVE");
              Intent mIntent=new Intent();
              mIntent.putExtras(bundle);
              setResult(RESULT_OK,mIntent);
              finish();
            }
          }
        }
      }
);
      Object[] params={username,password};
      method.call(params);
    }
  }
}
