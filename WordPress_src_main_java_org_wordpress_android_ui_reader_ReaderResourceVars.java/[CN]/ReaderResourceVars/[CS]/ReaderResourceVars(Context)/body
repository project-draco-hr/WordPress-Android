{
  Resources resources=context.getResources();
  displayWidthPx=DisplayUtils.getDisplayPixelWidth(context);
  likeAvatarSizePx=resources.getDimensionPixelSize(R.dimen.avatar_sz_small);
  headerAvatarSizePx=resources.getDimensionPixelSize(R.dimen.avatar_sz_medium);
  featuredImageHeightPx=resources.getDimensionPixelSize(R.dimen.reader_featured_image_height);
  marginLargePx=resources.getDimensionPixelSize(R.dimen.margin_large);
  marginSmallPx=resources.getDimensionPixelSize(R.dimen.margin_small);
  marginExtraSmallPx=resources.getDimensionPixelSize(R.dimen.margin_extra_small);
  detailMarginWidthPx=resources.getDimensionPixelOffset(R.dimen.reader_detail_margin);
  colorGreyExtraLight=resources.getColor(R.color.grey_extra_light);
  mediumAnimTime=resources.getInteger(android.R.integer.config_mediumAnimTime);
  linkColorStr=HtmlUtils.colorResToHtmlColor(context,R.color.reader_hyperlink);
  greyMediumDarkStr=HtmlUtils.colorResToHtmlColor(context,R.color.grey_medium_dark);
  greyLightStr=HtmlUtils.colorResToHtmlColor(context,R.color.grey_light);
  greyExtraLightStr=HtmlUtils.colorResToHtmlColor(context,R.color.grey_extra_light);
  int listPadding=resources.getDimensionPixelOffset(R.dimen.margin_large);
  int imageWidth=displayWidthPx - (detailMarginWidthPx * 2) - (listPadding * 2);
  boolean hasStaticMenuDrawer=(context instanceof WPDrawerActivity) && (((WPDrawerActivity)context).isStaticMenuDrawer());
  if (hasStaticMenuDrawer) {
    int drawerWidth=resources.getDimensionPixelOffset(R.dimen.drawer_width_static);
    imageWidth-=drawerWidth;
  }
  fullSizeImageWidthPx=imageWidth;
  videoWidthPx=fullSizeImageWidthPx - (marginLargePx * 2);
  videoHeightPx=(int)(videoWidthPx * 0.5625f);
}
