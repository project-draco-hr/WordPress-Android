{
  mResultContainer.removeAllViews();
  if (isDataEmpty(0) || !(mDatamodels[0] instanceof InsightsPopularModel)) {
    showErrorUI(null);
    return;
  }
  InsightsPopularModel data=(InsightsPopularModel)mDatamodels[0];
  LinearLayout ll=(LinearLayout)getActivity().getLayoutInflater().inflate(R.layout.stats_insights_most_popular_item,(ViewGroup)mResultContainer.getRootView(),false);
  final MarkView markView=(MarkView)ll.findViewById(R.id.stats_most_popular_day_percent);
  TextView mostPopularDayLabelText=(TextView)ll.findViewById(R.id.stats_most_popular_day_label);
  Double mostPopularDayValue=data.getHighestDayPercent();
  int dayOfTheWeek=data.getHighestDayOfWeek();
  Calendar c=Calendar.getInstance();
  c.setFirstDayOfWeek(Calendar.MONDAY);
  c.setTimeInMillis(System.currentTimeMillis());
switch (dayOfTheWeek) {
case 0:
    c.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
  break;
case 1:
c.set(Calendar.DAY_OF_WEEK,Calendar.TUESDAY);
break;
case 2:
c.set(Calendar.DAY_OF_WEEK,Calendar.WEDNESDAY);
break;
case 3:
c.set(Calendar.DAY_OF_WEEK,Calendar.THURSDAY);
break;
case 4:
c.set(Calendar.DAY_OF_WEEK,Calendar.FRIDAY);
break;
case 5:
c.set(Calendar.DAY_OF_WEEK,Calendar.SATURDAY);
break;
case 6:
c.set(Calendar.DAY_OF_WEEK,Calendar.SUNDAY);
break;
}
DateFormat formatter;
formatter=new SimpleDateFormat("EEEE");
ValueAnimator animator=new ValueAnimator();
animator.setObjectValues(0,mostPopularDayValue.intValue());
animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
public void onAnimationUpdate(ValueAnimator animation){
String sValue=String.valueOf(animation.getAnimatedValue());
markView.setMark(Integer.parseInt(sValue));
}
}
);
animator.setEvaluator(new TypeEvaluator<Integer>(){
public Integer evaluate(float fraction,Integer startValue,Integer endValue){
return Math.round((endValue - startValue) * fraction);
}
}
);
animator.setDuration(1500);
animator.setInterpolator(new DecelerateInterpolator());
animator.start();
mostPopularDayLabelText.setText(getString(R.string.stats_insights_happen_on_a,formatter.format(c.getTime())));
TextView mostPopularHourValue=(TextView)ll.findViewById(R.id.stats_most_popular_hour);
formatter=new SimpleDateFormat("ha");
c.set(Calendar.HOUR_OF_DAY,data.getHighestHour());
mostPopularHourValue.setText(formatter.format(c.getTime()));
mResultContainer.addView(ll);
}
