{
  SSLSocketFactory mSslSocketFactory=null;
  try {
    TrustManager[] trustAllowedCerts=new TrustManager[]{new WPTrustManager(SelfSignedSSLCertsManager.getIstance(ctx).getLocalKeyStore())};
    SSLContext context=SSLContext.getInstance("SSL");
    context.init(null,trustAllowedCerts,new SecureRandom());
    mSslSocketFactory=context.getSocketFactory();
  }
 catch (  NoSuchAlgorithmException e) {
    AppLog.e(T.API,e);
  }
catch (  KeyManagementException e) {
    AppLog.e(T.API,e);
  }
catch (  GeneralSecurityException e) {
    AppLog.e(T.API,e);
  }
catch (  IOException e) {
    AppLog.e(T.API,e);
  }
  HurlStack stack=new HurlStack(null,mSslSocketFactory){
    @Override public HttpResponse performRequest(    Request<?> request,    Map<String,String> headers) throws IOException, AuthFailureError {
      if (request.getUrl() != null) {
        if (!StringUtils.getHost(request.getUrl()).endsWith("wordpress.com") && currentBlog != null && currentBlog.hasValidHTTPAuthCredentials()) {
          HashMap<String,String> authParams=new HashMap<String,String>();
          String creds=String.format("%s:%s",currentBlog.getHttpuser(),currentBlog.getHttppassword());
          String auth="Basic " + Base64.encodeToString(creds.getBytes(),Base64.DEFAULT);
          authParams.put("Authorization",auth);
          headers.putAll(authParams);
        }
        if (StringUtils.getHost(request.getUrl()).endsWith("files.wordpress.com") && ctx != null && WordPress.getWPComAuthToken(ctx) != null) {
          HashMap<String,String> authParams=new HashMap<String,String>();
          authParams.put("Authorization","Bearer " + WordPress.getWPComAuthToken(ctx));
          headers.putAll(authParams);
        }
      }
      HashMap<String,String> defaultHeaders=new HashMap<String,String>();
      defaultHeaders.put("User-Agent",WordPress.getUserAgent());
      headers.putAll(defaultHeaders);
      return super.performRequest(request,headers);
    }
  }
;
  return stack;
}
