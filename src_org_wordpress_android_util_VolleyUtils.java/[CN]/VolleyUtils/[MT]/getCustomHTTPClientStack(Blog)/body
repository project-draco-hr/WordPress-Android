{
  SSLSocketFactory mSslSocketFactory=null;
  try {
    TrustManager[] trustAllowedCerts=new TrustManager[]{new WPTrustManager()};
    SSLContext context=SSLContext.getInstance("SSL");
    context.init(null,trustAllowedCerts,new SecureRandom());
    mSslSocketFactory=context.getSocketFactory();
  }
 catch (  NoSuchAlgorithmException e) {
    AppLog.e(T.API,e);
  }
catch (  KeyManagementException e) {
    AppLog.e(T.API,e);
  }
  HurlStack stack=new HurlStack(null,mSslSocketFactory){
    @Override public HttpResponse performRequest(    Request<?> request,    Map<String,String> headers) throws IOException, AuthFailureError {
      addDefaultHeaders(request,headers,currentBlog);
      return super.performRequest(request,headers);
    }
  }
;
  return stack;
}
