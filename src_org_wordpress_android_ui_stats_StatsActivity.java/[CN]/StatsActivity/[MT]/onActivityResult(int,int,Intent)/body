{
  super.onActivityResult(requestCode,resultCode,data);
  if (requestCode == WPComLoginActivity.REQUEST_CODE) {
    mResultCode=resultCode;
    if (resultCode == RESULT_OK && !WordPress.getCurrentBlog().isDotcomFlag()) {
      if (getBlogId() == null) {
        final Blog currentBlog=WordPress.getCurrentBlog();
        XMLRPCClient xmlrpcClient=new XMLRPCClient(currentBlog.getUrl(),"","");
        Map<String,String> args=new HashMap<String,String>();
        args.put("jetpack_client_id","jetpack_client_id");
        Object[] params={currentBlog.getRemoteBlogId(),currentBlog.getUsername(),currentBlog.getPassword(),args};
        xmlrpcClient.callAsync(new XMLRPCCallback(){
          @Override public void onSuccess(          long id,          Object result){
            if (result != null && (result instanceof HashMap)) {
              Map<?,?> blogOptions=(HashMap<?,?>)result;
              if (blogOptions.containsKey("jetpack_client_id")) {
                String apiBlogId=((HashMap<?,?>)blogOptions.get("jetpack_client_id")).get("value").toString();
                if (apiBlogId != null && (currentBlog.getApi_blogid() == null || !currentBlog.getApi_blogid().equals(apiBlogId))) {
                  currentBlog.setApi_blogid(apiBlogId);
                  currentBlog.save();
                  if (!isFinishing())                   refreshStats();
                }
              }
            }
          }
          @Override public void onFailure(          long id,          XMLRPCException error){
            Log.e("StatsActivity","Cannot load blog options (wp.getOptions failed and no jetpack_client_id is then available",error);
          }
        }
,"wp.getOptions",params);
      }
      refreshStats();
    }
  }
}
