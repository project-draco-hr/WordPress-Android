{
  super.onActivityResult(requestCode,resultCode,data);
  if (requestCode == WPComLoginActivity.REQUEST_CODE) {
    mResultCode=resultCode;
    if (resultCode == RESULT_OK && !WordPress.getCurrentBlog().isDotcomFlag()) {
      if (getBlogId() == null) {
        final Blog currentBlog=WordPress.getCurrentBlog();
        XMLRPCClient xmlrpcClient=new XMLRPCClient(currentBlog.getUrl(),"","");
        Map<String,String> args=ApiHelper.blogOptionsXMLRPCParameters;
        Object[] params={currentBlog.getRemoteBlogId(),currentBlog.getUsername(),currentBlog.getPassword(),args};
        ApiHelper.addAuthorizationHeaderIfNeeded(currentBlog,xmlrpcClient);
        xmlrpcClient.callAsync(new XMLRPCCallback(){
          @Override public void onSuccess(          long id,          Object result){
            if (result != null && (result instanceof HashMap)) {
              Map<?,?> blogOptions=(HashMap<?,?>)result;
              ApiHelper.updateBlogOptions(currentBlog,blogOptions);
              if (!isFinishing())               refreshStats();
            }
          }
          @Override public void onFailure(          long id,          XMLRPCException error){
            AppLog.e(T.STATS,"Cannot load blog options (wp.getOptions failed and no jetpack_client_id is then available",error);
          }
        }
,"wp.getOptions",params);
      }
      refreshStats();
    }
  }
}
