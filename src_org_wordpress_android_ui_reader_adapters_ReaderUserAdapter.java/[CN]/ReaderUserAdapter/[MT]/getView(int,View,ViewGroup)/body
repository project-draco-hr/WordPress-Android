{
  final ReaderUser user=mUsers.get(position);
  final UserViewHolder holder;
  if (convertView == null) {
    convertView=mInflater.inflate(R.layout.reader_listitem_user,parent,false);
    holder=new UserViewHolder(convertView);
    convertView.setTag(holder);
  }
 else {
    holder=(UserViewHolder)convertView.getTag();
  }
  holder.txtName.setText(user.getDisplayName());
  if (user.hasUrl()) {
    holder.txtUrl.setVisibility(View.VISIBLE);
    holder.txtUrl.setText(user.getUrlDomain());
    convertView.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        if (user.hasBlogId()) {
          ReaderActivityLauncher.showReaderBlogPreview(v.getContext(),user.blogId,user.getUrl());
        }
      }
    }
);
    ReaderUtils.showFollowStatus(holder.txtFollow,user.isFollowed);
    holder.txtFollow.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        AniUtils.zoomAction(holder.txtFollow);
        toggleFollowUser(user,holder.txtFollow);
      }
    }
);
    holder.txtFollow.setVisibility(View.VISIBLE);
  }
 else {
    holder.txtUrl.setVisibility(View.GONE);
    holder.txtFollow.setVisibility(View.GONE);
    convertView.setOnClickListener(null);
  }
  holder.imgAvatar.setImageUrl(user.getAvatarUrl(),WPNetworkImageView.ImageType.AVATAR);
  return convertView;
}
