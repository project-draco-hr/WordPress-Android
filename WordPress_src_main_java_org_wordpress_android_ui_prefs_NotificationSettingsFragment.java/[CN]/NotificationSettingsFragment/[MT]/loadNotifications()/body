{
  AppLog.d(T.NOTIFS,"Preferences > loading notification settings");
  PreferenceCategory notificationTypesCategory=(PreferenceCategory)findPreference("wp_pref_notification_types");
  notificationTypesCategory.removeAll();
  SharedPreferences settings=PreferenceManager.getDefaultSharedPreferences(getActivity());
  String settingsJson=settings.getString(NotificationsUtils.WPCOM_PUSH_DEVICE_NOTIFICATION_SETTINGS,null);
  if (settingsJson == null) {
    return;
  }
  try {
    Gson gson=new Gson();
    mNotificationSettings=gson.fromJson(settingsJson,HashMap.class);
    StringMap<?> mutedBlogsMap=(StringMap<?>)mNotificationSettings.get("muted_blogs");
    mMutedBlogsList=(ArrayList<StringMap<Double>>)mutedBlogsMap.get("value");
    Collections.sort(mMutedBlogsList,BlogNameComparatorForMutedBlogsList);
    Object[] mTypeList=mNotificationSettings.keySet().toArray();
    for (    Object aMTypeList : mTypeList) {
      if (!aMTypeList.equals("muted_blogs") && !aMTypeList.equals("mute_until")) {
        StringMap<?> typeMap=(StringMap<?>)mNotificationSettings.get(aMTypeList.toString());
        CheckBoxPreference typePreference=new CheckBoxPreference(getActivity());
        typePreference.setKey(aMTypeList.toString());
        typePreference.setChecked(MapUtils.getMapBool(typeMap,"value"));
        typePreference.setTitle(typeMap.get("desc").toString());
        typePreference.setOnPreferenceChangeListener(mTypeChangeListener);
        notificationTypesCategory.addPreference(typePreference);
      }
    }
    PreferenceCategory selectBlogsCategory=(PreferenceCategory)findPreference("wp_pref_notification_blogs");
    selectBlogsCategory.removeAll();
    for (int i=0; i < mMutedBlogsList.size(); i++) {
      StringMap<?> blogMap=mMutedBlogsList.get(i);
      String blogName=(String)blogMap.get("blog_name");
      if (blogName == null || blogName.trim().equals(""))       blogName=(String)blogMap.get("url");
      CheckBoxPreference blogPreference=new CheckBoxPreference(getActivity());
      blogPreference.setChecked(!MapUtils.getMapBool(blogMap,"value"));
      blogPreference.setTitle(StringUtils.unescapeHTML(blogName));
      blogPreference.setOnPreferenceChangeListener(mMuteBlogChangeListener);
      blogPreference.setOrder(i);
      selectBlogsCategory.addPreference(blogPreference);
    }
  }
 catch (  JsonSyntaxException e) {
    AppLog.v(T.NOTIFS,"Notification Settings Json could not be parsed.");
    return;
  }
catch (  Exception e) {
    AppLog.v(T.NOTIFS,"Failed to load notification settings.");
    return;
  }
  CheckBoxPreference notificationsEnabledCheckBox=(CheckBoxPreference)findPreference("wp_pref_notifications_enabled");
  notificationsEnabledCheckBox.setOnPreferenceChangeListener(mNotificationsEnabledChangeListener);
}
