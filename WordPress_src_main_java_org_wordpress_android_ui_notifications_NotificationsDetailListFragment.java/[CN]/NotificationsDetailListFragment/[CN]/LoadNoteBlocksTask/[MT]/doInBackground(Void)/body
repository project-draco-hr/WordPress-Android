{
  JSONArray bodyArray=mNote.getBody();
  mNoteBlockArray.clear();
  if (mNote.getHeader() != null) {
    HeaderUserNoteBlock headerNoteBlock=new HeaderUserNoteBlock(mNote.getHeader(),mOnNoteBlockTextClickListener,mOnGravatarClickedListener);
    headerNoteBlock.setIsComment(mNote.isCommentType());
    mNoteBlockArray.add(headerNoteBlock);
  }
  boolean isBadgeView=false;
  if (bodyArray != null && bodyArray.length() > 0) {
    for (int i=0; i < bodyArray.length(); i++) {
      try {
        JSONObject noteObject=bodyArray.getJSONObject(i);
        NoteBlock noteBlock;
        String noteBlockTypeString=JSONUtil.queryJSON(noteObject,"type","");
        if (NoteBlockIdType.fromString(noteBlockTypeString) == NoteBlockIdType.USER) {
          if (mNote.isCommentType()) {
            if (i + 1 < bodyArray.length()) {
              JSONObject commentTextBlock=bodyArray.getJSONObject(i + 1);
              noteObject.put("comment_text",commentTextBlock);
              i++;
            }
            noteBlock=new CommentUserNoteBlock(noteObject,mOnNoteBlockTextClickListener,mOnGravatarClickedListener);
          }
 else {
            noteBlock=new UserNoteBlock(noteObject,mOnNoteBlockTextClickListener,mOnGravatarClickedListener);
          }
        }
 else {
          noteBlock=new NoteBlock(noteObject,mOnNoteBlockTextClickListener);
        }
        if (isAdded() && noteBlock.containsBadgeMediaType()) {
          isBadgeView=true;
          mBackgroundColor=getActivity().getResources().getColor(R.color.transparent);
        }
        mNoteBlockArray.add(noteBlock);
      }
 catch (      JSONException e) {
        AppLog.e(AppLog.T.NOTIFS,"Invalid note data, could not parse.");
      }
    }
  }
  return isBadgeView;
}
