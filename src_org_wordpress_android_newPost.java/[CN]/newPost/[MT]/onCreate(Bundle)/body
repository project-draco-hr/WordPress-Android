{
  super.onCreate(icicle);
  final Bundle extras=getIntent().getExtras();
  if (extras != null) {
    id=extras.getString("id");
    accountName=escapeUtils.unescapeHtml(extras.getString("accountName"));
    isPage=extras.getBoolean("isPage",false);
  }
  Display display=((WindowManager)getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
  int width=display.getWidth();
  int height=display.getHeight();
  if (height > width) {
    width=height;
  }
  if (width > 480) {
    isLargeScreen=true;
  }
  if (isPage) {
    setContentView(R.layout.main_page);
  }
 else {
    setContentView(R.layout.main);
  }
  String action=getIntent().getAction();
  if (Intent.ACTION_SEND.equals(action) || Intent.ACTION_SEND_MULTIPLE.equals(action)) {
    isAction=true;
    WordPressDB settingsDB=new WordPressDB(this);
    Vector accounts=settingsDB.getAccounts(this);
    if (accounts.size() > 0) {
      final String blogNames[]=new String[accounts.size()];
      final String accountIDs[]=new String[accounts.size()];
      for (int i=0; i < accounts.size(); i++) {
        HashMap curHash=(HashMap)accounts.get(i);
        try {
          blogNames[i]=escapeUtils.unescapeHtml(curHash.get("blogName").toString());
        }
 catch (        Exception e) {
          blogNames[i]="(No Blog Title)";
        }
        accountIDs[i]=curHash.get("id").toString();
      }
      if (accounts.size() != 1) {
        AlertDialog.Builder builder=new AlertDialog.Builder(this);
        builder.setTitle(getResources().getText(R.string.select_a_blog));
        builder.setItems(blogNames,new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int item){
            id=accountIDs[item];
            accountName=blogNames[item];
            setTitle(accountName + " - " + getResources().getText((isPage) ? R.string.new_page : R.string.new_post));
            setContent();
            lbsCheck();
          }
        }
);
        AlertDialog alert=builder.create();
        alert.show();
      }
 else {
        id=accountIDs[0];
        accountName=blogNames[0];
        setTitle(accountName + " - " + getResources().getText((isPage) ? R.string.new_page : R.string.new_post));
        setContent();
      }
    }
 else {
      Intent i=new Intent(this,wpAndroid.class);
      Toast.makeText(getApplicationContext(),getResources().getText(R.string.no_account),Toast.LENGTH_LONG).show();
      startActivity(i);
      finish();
    }
  }
 else {
    selectedImageIDs.clear();
    selectedImageCtr=0;
    if (!isPage) {
      lbsCheck();
    }
  }
  if (accountName != null) {
    this.setTitle(accountName + " - " + getResources().getText((isPage) ? R.string.new_page : R.string.new_post));
  }
 else {
    this.setTitle(getResources().getText((isPage) ? R.string.new_page : R.string.new_post));
  }
  if (!isPage) {
    final Button selectCategories=(Button)findViewById(R.id.selectCategories);
    selectCategories.setOnClickListener(new Button.OnClickListener(){
      public void onClick(      View v){
        Bundle bundle=new Bundle();
        bundle.putString("id",id);
        if (checkedCategories != null) {
          bundle.putLongArray("checkedCategories",checkedCategories);
        }
        Intent i=new Intent(newPost.this,selectCategories.class);
        i.putExtras(bundle);
        startActivityForResult(i,5);
      }
    }
);
    final Button viewMap=(Button)findViewById(R.id.viewMap);
    viewMap.setOnClickListener(new TextView.OnClickListener(){
      public void onClick(      View v){
        Double latitude=0.0;
        try {
          latitude=curLocation.getLatitude();
        }
 catch (        Exception e) {
          e.printStackTrace();
        }
        if (latitude != 0.0) {
          String uri="geo:" + latitude + ","+ curLocation.getLongitude();
          startActivity(new Intent(android.content.Intent.ACTION_VIEW,Uri.parse(uri)));
        }
 else {
          Toast.makeText(newPost.this,getResources().getText(R.string.location_toast),Toast.LENGTH_SHORT).show();
        }
      }
    }
);
  }
  final Button postButton=(Button)findViewById(R.id.post);
  postButton.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      boolean result=savePost();
      if (result) {
        Toast.makeText(newPost.this,getResources().getText(R.string.saved_to_local_drafts),Toast.LENGTH_SHORT).show();
        if (isAction) {
          Bundle bundle=new Bundle();
          Intent mIntent=new Intent(newPost.this,tabView.class);
          bundle.putString("activateTab","posts");
          bundle.putString("id",id);
          bundle.putString("accountName",accountName);
          bundle.putString("action","save");
          mIntent.putExtras(bundle);
          startActivity(mIntent);
          finish();
        }
 else {
          Bundle bundle=new Bundle();
          bundle.putString("returnStatus","OK");
          Intent mIntent=new Intent();
          mIntent.putExtras(bundle);
          setResult(RESULT_OK,mIntent);
          finish();
        }
      }
    }
  }
);
  final Button uploadButton=(Button)findViewById(R.id.upload);
  uploadButton.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      boolean result=savePost();
      if (result) {
        WordPressDB lddb=new WordPressDB(newPost.this);
        int newID=-1;
        if (isPage) {
          newID=lddb.getLatestPageDraftID(newPost.this,id);
        }
 else {
          newID=lddb.getLatestDraftID(newPost.this,id);
        }
        Bundle bundle=new Bundle();
        if (newID != -1) {
          if (isAction) {
            Intent mIntent=new Intent(newPost.this,tabView.class);
            bundle.putString("activateTab","posts");
            bundle.putString("id",id);
            bundle.putInt("uploadID",newID);
            bundle.putString("accountName",accountName);
            bundle.putString("action","upload");
            mIntent.putExtras(bundle);
            startActivity(mIntent);
          }
 else {
            bundle.putString("returnStatus","OK");
            bundle.putBoolean("upload",true);
            bundle.putInt("newID",newID);
            Intent mIntent=new Intent();
            mIntent.putExtras(bundle);
            setResult(RESULT_OK,mIntent);
          }
          finish();
        }
      }
    }
  }
);
  final Button addPictureButton=(Button)findViewById(R.id.addPictureButton);
  registerForContextMenu(addPictureButton);
  addPictureButton.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      addPictureButton.performLongClick();
    }
  }
);
  final EditText contentEdit=(EditText)findViewById(R.id.content);
  contentEdit.addTextChangedListener(new TextWatcher(){
    public void afterTextChanged(    Editable s){
      ToggleButton boldButton=(ToggleButton)findViewById(R.id.bold);
      ToggleButton emButton=(ToggleButton)findViewById(R.id.em);
      ToggleButton bquoteButton=(ToggleButton)findViewById(R.id.bquote);
      ToggleButton underlineButton=(ToggleButton)findViewById(R.id.underline);
      ToggleButton strikeButton=(ToggleButton)findViewById(R.id.strike);
      int position=Selection.getSelectionStart(contentEdit.getText());
      if (position < 0 || (position + 1) == cursorLoc) {
        position=0;
      }
      if (position > 0) {
        if (styleStart > position || position > (cursorLoc + 1)) {
          if (position - cursorLoc > 1) {
            styleStart=cursorLoc;
          }
 else {
            styleStart=position - 1;
          }
        }
        if (boldButton.isChecked()) {
          StyleSpan[] ss=s.getSpans(styleStart,position,StyleSpan.class);
          for (int i=0; i < ss.length; i++) {
            if (ss[i].getStyle() == android.graphics.Typeface.BOLD) {
              s.removeSpan(ss[i]);
            }
          }
          s.setSpan(new StyleSpan(android.graphics.Typeface.BOLD),styleStart,position,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }
        if (emButton.isChecked()) {
          StyleSpan[] ss=s.getSpans(styleStart,position,StyleSpan.class);
          boolean exists=false;
          for (int i=0; i < ss.length; i++) {
            if (ss[i].getStyle() == android.graphics.Typeface.ITALIC) {
              s.removeSpan(ss[i]);
            }
          }
          s.setSpan(new StyleSpan(android.graphics.Typeface.ITALIC),styleStart,position,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }
        if (bquoteButton.isChecked()) {
          QuoteSpan[] ss=s.getSpans(styleStart,position,QuoteSpan.class);
          for (int i=0; i < ss.length; i++) {
            s.removeSpan(ss[i]);
          }
          s.setSpan(new QuoteSpan(),styleStart,position,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }
        if (underlineButton.isChecked()) {
          UnderlineSpan[] ss=s.getSpans(styleStart,position,UnderlineSpan.class);
          for (int i=0; i < ss.length; i++) {
            s.removeSpan(ss[i]);
          }
          s.setSpan(new UnderlineSpan(),styleStart,position,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }
        if (strikeButton.isChecked()) {
          StrikethroughSpan[] ss=s.getSpans(styleStart,position,StrikethroughSpan.class);
          for (int i=0; i < ss.length; i++) {
            s.removeSpan(ss[i]);
          }
          s.setSpan(new StrikethroughSpan(),styleStart,position,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }
      }
      cursorLoc=Selection.getSelectionStart(contentEdit.getText());
    }
    public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
    }
  }
);
  final ToggleButton boldButton=(ToggleButton)findViewById(R.id.bold);
  boldButton.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      formatBtnClick(boldButton,"strong");
    }
  }
);
  final Button linkButton=(Button)findViewById(R.id.link);
  linkButton.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      TextView contentText=(TextView)findViewById(R.id.content);
      int selectionStart=contentText.getSelectionStart();
      styleStart=selectionStart;
      int selectionEnd=contentText.getSelectionEnd();
      if (selectionStart > selectionEnd) {
        int temp=selectionEnd;
        selectionEnd=selectionStart;
        selectionStart=temp;
      }
      if (selectionStart == -1 || selectionStart == contentText.getText().toString().length() || (selectionStart == selectionEnd)) {
        AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(newPost.this);
        dialogBuilder.setTitle(getResources().getText(R.string.no_text_selected));
        dialogBuilder.setMessage(getResources().getText(R.string.select_text_to_link) + " " + getResources().getText(R.string.howto_select_text));
        dialogBuilder.setPositiveButton("OK",new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int whichButton){
          }
        }
);
        dialogBuilder.setCancelable(true);
        dialogBuilder.create().show();
      }
 else {
        Intent i=new Intent(newPost.this,link.class);
        startActivityForResult(i,2);
      }
    }
  }
);
  final ToggleButton emButton=(ToggleButton)findViewById(R.id.em);
  emButton.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      formatBtnClick(emButton,"em");
    }
  }
);
  final ToggleButton underlineButton=(ToggleButton)findViewById(R.id.underline);
  underlineButton.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      formatBtnClick(underlineButton,"u");
    }
  }
);
  final ToggleButton strikeButton=(ToggleButton)findViewById(R.id.strike);
  strikeButton.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      formatBtnClick(strikeButton,"strike");
    }
  }
);
  final ToggleButton bquoteButton=(ToggleButton)findViewById(R.id.bquote);
  bquoteButton.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      formatBtnClick(bquoteButton,"blockquote");
    }
  }
);
  final Button clearPictureButton=(Button)findViewById(R.id.clearPicture);
  clearPictureButton.setOnClickListener(new Button.OnClickListener(){
    public void onClick(    View v){
      imageUrl.clear();
      imgThumbs.clear();
      thumbnailUrl.clear();
      selectedImageIDs.clear();
      selectedImageCtr=0;
      Gallery gallery=(Gallery)findViewById(R.id.gallery);
      gallery.setAdapter(null);
      gallery.setVisibility(View.GONE);
      clearPictureButton.setVisibility(View.GONE);
    }
  }
);
}
