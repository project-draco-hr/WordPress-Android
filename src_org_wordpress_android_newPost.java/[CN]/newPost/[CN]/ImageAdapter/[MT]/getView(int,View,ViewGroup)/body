{
  ImageView imageView;
  if (convertView == null) {
    imageView=new ImageView(mContext);
    imageView.setLayoutParams(new GridView.LayoutParams(85,85));
    imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
    imageView.setPadding(8,8,8,8);
  }
 else {
    imageView=(ImageView)convertView;
  }
  Uri tempURI=(Uri)selectedImageIDs.get(position);
  String[] projection=new String[]{Images.Thumbnails._ID,Images.Thumbnails.DATA};
  Cursor cur=managedQuery(tempURI,projection,null,null,null);
  File jpeg=null;
  if (cur != null) {
    String thumbData="";
    if (cur.moveToFirst()) {
      int nameColumn, dataColumn, heightColumn, widthColumn;
      nameColumn=cur.getColumnIndex(Images.Media._ID);
      dataColumn=cur.getColumnIndex(Images.Media.DATA);
      thumbData=cur.getString(dataColumn);
    }
    jpeg=new File(thumbData);
  }
 else {
    jpeg=new File(tempURI.toString().replace("file://",""));
  }
  imageTitle=jpeg.getName();
  byte[] bytes=new byte[(int)jpeg.length()];
  DataInputStream in=null;
  try {
    in=new DataInputStream(new FileInputStream(jpeg));
  }
 catch (  FileNotFoundException e) {
    e.printStackTrace();
  }
  try {
    in.readFully(bytes);
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  try {
    in.close();
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  BitmapFactory.Options opts=new BitmapFactory.Options();
  opts.inJustDecodeBounds=true;
  Bitmap bm=BitmapFactory.decodeByteArray(bytes,0,bytes.length,opts);
  int width=opts.outHeight;
  int height=opts.outWidth;
  float percentage=(float)100 / width;
  float proportionateHeight=height * percentage;
  int finalHeight=(int)Math.rint(proportionateHeight);
  float scaleWidth=((float)100) / width;
  float scaleHeight=((float)finalHeight) / height;
  float finWidth=200;
  int sample=0;
  float fWidth=width;
  sample=new Double(Math.ceil(fWidth / finWidth)).intValue();
  if (sample == 3) {
    sample=4;
  }
 else   if (sample > 4 && sample < 8) {
    sample=8;
  }
  opts.inSampleSize=sample;
  opts.inJustDecodeBounds=false;
  Bitmap resizedBitmap=BitmapFactory.decodeByteArray(bytes,0,bytes.length,opts);
  imageView.setImageBitmap(resizedBitmap);
  return imageView;
}
