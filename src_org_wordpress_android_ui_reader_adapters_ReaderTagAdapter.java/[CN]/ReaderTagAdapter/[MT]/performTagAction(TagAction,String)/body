{
  if (!NetworkUtils.checkConnection(getContext())) {
    return;
  }
  ReaderActions.ActionListener actionListener=new ReaderActions.ActionListener(){
    @Override public void onActionResult(    boolean succeeded){
      if (!succeeded && hasContext()) {
switch (action) {
case ADD:
          ToastUtils.showToast(getContext(),R.string.reader_toast_err_add_tag);
        break;
case DELETE:
      ToastUtils.showToast(getContext(),R.string.reader_toast_err_remove_tag);
    break;
}
refresh();
}
}
}
;
final boolean success;
ReaderTag tag=new ReaderTag(tagName,ReaderTagType.FOLLOWED);
switch (action) {
case ADD:
success=ReaderTagActions.performTagAction(TagAction.ADD,tag,actionListener);
break;
case DELETE:
success=ReaderTagActions.performTagAction(TagAction.DELETE,tag,actionListener);
break;
default :
success=false;
break;
}
if (success && mTagListener != null) {
mTagListener.onTagAction(action,tagName);
}
}
