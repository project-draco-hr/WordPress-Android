{
  mPost=((EditPostActivity)getActivity()).getPost();
  mRootView=(ViewGroup)inflater.inflate(R.layout.edit_post_settings_fragment,container,false);
  if (mRootView == null || mPost == null) {
    return null;
  }
  Calendar c=Calendar.getInstance();
  mYear=c.get(Calendar.YEAR);
  mMonth=c.get(Calendar.MONTH);
  mDay=c.get(Calendar.DAY_OF_MONTH);
  mHour=c.get(Calendar.HOUR_OF_DAY);
  mMinute=c.get(Calendar.MINUTE);
  mCategories=new ArrayList<String>();
  mExcerptEditText=(EditText)mRootView.findViewById(R.id.postExcerpt);
  mPasswordEditText=(EditText)mRootView.findViewById(R.id.post_password);
  mPubDateText=(TextView)mRootView.findViewById(R.id.pubDate);
  mPubDateText.setOnClickListener(this);
  mStatusSpinner=(Spinner)mRootView.findViewById(R.id.status);
  mStatusSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener(){
    @Override public void onItemSelected(    AdapterView<?> parent,    View view,    int position,    long id){
      updatePostSettingsAndSaveButton();
    }
    @Override public void onNothingSelected(    AdapterView<?> parent){
    }
  }
);
  mTagsEditText=(EditText)mRootView.findViewById(R.id.tags);
  mSectionCategories=((ViewGroup)mRootView.findViewById(R.id.sectionCategories));
  mFeaturedImageView=(NetworkImageView)mRootView.findViewById(R.id.featuredImage);
  mFeaturedImageButton=(Button)mRootView.findViewById(R.id.addFeaturedImage);
  registerForContextMenu(mFeaturedImageView);
  mFeaturedImageView.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
      view.showContextMenu();
    }
  }
);
  mFeaturedImageButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
      launchMediaGalleryActivity();
    }
  }
);
  if (mPost.isPage()) {
    mExcerptEditText.setVisibility(View.GONE);
    mRootView.findViewById(R.id.sectionTags).setVisibility(View.GONE);
    mRootView.findViewById(R.id.sectionCategories).setVisibility(View.GONE);
    mRootView.findViewById(R.id.postFormatLabel).setVisibility(View.GONE);
    mRootView.findViewById(R.id.postFormat).setVisibility(View.GONE);
  }
 else {
    mPostFormatTitles=getResources().getStringArray(R.array.post_formats_array);
    mPostFormats=new String[]{"aside","audio","chat","gallery","image","link","quote","standard","status","video"};
    if (WordPress.getCurrentBlog().getPostFormats().equals("")) {
      new ApiHelper.GetPostFormatsTask().execute(WordPress.getCurrentBlog());
    }
 else {
      try {
        Gson gson=new Gson();
        Type type=new TypeToken<Map<String,String>>(){
        }
.getType();
        Map<String,String> jsonPostFormats=gson.fromJson(WordPress.getCurrentBlog().getPostFormats(),type);
        mPostFormats=new String[jsonPostFormats.size()];
        mPostFormatTitles=new String[jsonPostFormats.size()];
        int i=0;
        for (        Map.Entry<String,String> entry : jsonPostFormats.entrySet()) {
          String key=entry.getKey();
          String val=entry.getValue();
          mPostFormats[i]=key;
          mPostFormatTitles[i]=StringEscapeUtils.unescapeHtml(val);
          i++;
        }
      }
 catch (      RuntimeException e) {
        AppLog.e(T.POSTS,e);
      }
    }
    mPostFormatSpinner=(Spinner)mRootView.findViewById(R.id.postFormat);
    ArrayAdapter<String> pfAdapter=new ArrayAdapter<>(getActivity(),R.layout.simple_spinner_item,mPostFormatTitles);
    pfAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    mPostFormatSpinner.setAdapter(pfAdapter);
    String activePostFormat="standard";
    if (!TextUtils.isEmpty(mPost.getPostFormat())) {
      activePostFormat=mPost.getPostFormat();
    }
    for (int i=0; i < mPostFormats.length; i++) {
      if (mPostFormats[i].equals(activePostFormat))       mPostFormatSpinner.setSelection(i);
    }
    mPostFormatSpinner.setOnTouchListener(new View.OnTouchListener(){
      @Override public boolean onTouch(      View view,      MotionEvent motionEvent){
        return false;
      }
    }
);
  }
  initSettingsFields();
  populateSelectedCategories();
  initLocation();
  return mRootView;
}
