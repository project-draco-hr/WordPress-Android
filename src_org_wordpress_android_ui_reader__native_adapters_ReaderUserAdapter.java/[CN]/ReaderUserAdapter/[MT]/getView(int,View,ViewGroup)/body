{
  final ReaderUser user=mUsers.get(position);
  final UserViewHolder holder;
  if (convertView == null) {
    convertView=mInflater.inflate(R.layout.reader_listitem_user,parent,false);
    holder=new UserViewHolder();
    holder.txtName=(TextView)convertView.findViewById(R.id.text_name);
    holder.txtUrl=(TextView)convertView.findViewById(R.id.text_url);
    holder.txtFollow=(TextView)convertView.findViewById(R.id.text_follow);
    holder.imgAvatar=(NetworkImageView)convertView.findViewById(R.id.image_avatar);
    holder.imgAvatar.setDefaultImageResId(R.drawable.reader_photo_default);
    convertView.setTag(holder);
  }
 else {
    holder=(UserViewHolder)convertView.getTag();
  }
  holder.txtName.setText(user.getDisplayName());
  if (user.hasUrl()) {
    holder.txtUrl.setVisibility(View.VISIBLE);
    holder.txtUrl.setText(user.getUrlDomain());
    convertView.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        ReaderActivityLauncher.openUrl(v.getContext(),user.getUrl());
      }
    }
);
    if (holder.txtFollow.isSelected() != user.isFollowed)     showFollowStatus(holder.txtFollow,user.isFollowed);
    holder.txtFollow.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        ReaderAniUtils.zoomAction(holder.txtFollow);
        toggleFollowUser(user,holder.txtFollow);
      }
    }
);
    holder.txtFollow.setVisibility(View.VISIBLE);
  }
 else {
    holder.txtUrl.setVisibility(View.GONE);
    holder.txtFollow.setVisibility(View.GONE);
    convertView.setOnClickListener(null);
  }
  holder.imgAvatar.setImageUrl(user.getAvatarUrl(),WordPress.imageLoader);
  return convertView;
}
