{
  if (textView == null || subject == null || spannableStringBuilder == null)   return;
  Context context=textView.getContext();
  JSONArray mediaArray=subject.optJSONArray("media");
  if (context == null || mediaArray == null) {
    return;
  }
  Drawable loading=context.getResources().getDrawable(R.drawable.dashicon_format_image_big_grey);
  Drawable failed=context.getResources().getDrawable(R.drawable.noticon_warning_big_grey);
  WPImageGetter imageGetter=new WPImageGetter(textView,context.getResources().getDimensionPixelSize(R.dimen.notifications_max_image_size),WordPress.imageLoader,loading,failed);
  int indexAdjustment=0;
  String imagePlaceholder;
  for (int i=0; i < mediaArray.length(); i++) {
    JSONObject mediaObject=mediaArray.optJSONObject(i);
    if (mediaObject == null) {
      continue;
    }
    final Drawable remoteDrawable=imageGetter.getDrawable(mediaObject.optString("url",""));
    ImageSpan noteImageSpan=new ImageSpan(remoteDrawable,mediaObject.optString("url",""));
    int startIndex=JSONUtil.queryJSON(mediaObject,"indices[0]",-1);
    int endIndex=JSONUtil.queryJSON(mediaObject,"indices[1]",-1);
    if (startIndex >= 0) {
      startIndex+=indexAdjustment;
      endIndex+=indexAdjustment;
      if (startIndex > spannableStringBuilder.length()) {
        continue;
      }
      if (endIndex > startIndex && endIndex <= spannableStringBuilder.length()) {
        spannableStringBuilder.replace(startIndex,endIndex,"");
      }
      imagePlaceholder=" ";
      int previousCharIndex=(startIndex > 0) ? startIndex - 1 : 0;
      if (!spannableHasCharacterAtIndex(spannableStringBuilder,'\n',previousCharIndex) || spannableStringBuilder.getSpans(startIndex,startIndex,ImageSpan.class).length > 0) {
        imagePlaceholder="\n ";
      }
      int spanIndex=startIndex + imagePlaceholder.length() - 1;
      if (!spannableHasCharacterAtIndex(spannableStringBuilder,'\n',startIndex) && !spannableHasCharacterAtIndex(spannableStringBuilder,'\r',startIndex)) {
        imagePlaceholder+="\n";
      }
      spannableStringBuilder.insert(startIndex,imagePlaceholder);
      spannableStringBuilder.setSpan(noteImageSpan,spanIndex,spanIndex + 1,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
      spannableStringBuilder.setSpan(new AlignmentSpan.Standard(Layout.Alignment.ALIGN_CENTER),spanIndex,spanIndex + 1,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
      indexAdjustment+=imagePlaceholder.length();
    }
  }
}
