{
  Resources resources=parentView.getContext().getResources();
  String message=(status == CommentStatus.TRASH ? resources.getString(R.string.comment_trashed) : resources.getString(R.string.comment_spammed));
  View.OnClickListener undoListener=new View.OnClickListener(){
    @Override public void onClick(    View v){
      mSnackbarDidUndo=true;
      EventBus.getDefault().postSticky(new NoteVisibilityChanged(note.getId(),false));
    }
  }
;
  mSnackbarDidUndo=false;
  Snackbar snackbar=Snackbar.make(parentView,message,Snackbar.LENGTH_LONG).setAction(R.string.undo,undoListener);
  snackbar.setCallback(new Snackbar.Callback(){
    @Override public void onDismissed(    Snackbar snackbar,    int event){
      super.onDismissed(snackbar,event);
      if (mSnackbarDidUndo) {
        return;
      }
      CommentActions.moderateCommentForNote(note,status,new CommentActions.CommentActionListener(){
        @Override public void onActionResult(        CommentActionResult result){
          if (!result.isSuccess()) {
            EventBus.getDefault().postSticky(new NoteVisibilityChanged(note.getId(),false));
            EventBus.getDefault().postSticky(new NoteModerationFailed());
          }
        }
      }
);
    }
  }
);
  snackbar.show();
}
