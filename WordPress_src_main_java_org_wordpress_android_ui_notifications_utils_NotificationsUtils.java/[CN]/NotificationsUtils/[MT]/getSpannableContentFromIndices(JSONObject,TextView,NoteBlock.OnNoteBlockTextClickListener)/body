{
  if (subject == null) {
    return new SpannableStringBuilder();
  }
  String text=subject.optString("text","");
  SpannableStringBuilder spannableStringBuilder=new SpannableStringBuilder(text);
  boolean shouldLink=onNoteBlockTextClickListener != null;
  JSONArray mediaArray=subject.optJSONArray("media");
  if (textView != null && mediaArray != null) {
    Context context=textView.getContext();
    if (context == null) {
      return spannableStringBuilder;
    }
    Drawable loading=context.getResources().getDrawable(R.drawable.remote_image);
    Drawable failed=context.getResources().getDrawable(R.drawable.remote_failed);
    WPImageGetter imageGetter=new WPImageGetter(textView,context.getResources().getDimensionPixelSize(R.dimen.notifications_max_image_size),WordPress.imageLoader,loading,failed);
    int indexAdjustment=0;
    String imagePlaceholder;
    for (int i=0; i < mediaArray.length(); i++) {
      JSONObject mediaObject=mediaArray.optJSONObject(i);
      if (mediaObject == null) {
        continue;
      }
      final Drawable remoteDrawable=imageGetter.getDrawable(mediaObject.optString("url",""));
      ImageSpan noteImageSpan=new ImageSpan(remoteDrawable,mediaObject.optString("url",""));
      int index=JSONUtil.queryJSON(mediaObject,"indices[0]",-1);
      if (index >= 0) {
        index+=indexAdjustment;
        imagePlaceholder=" ";
        if (index == 0) {
          imagePlaceholder="\n ";
        }
        int tempIndex=index + imagePlaceholder.length() - 1;
        if (spannableStringBuilder.getSpans(tempIndex,tempIndex,ImageSpan.class).length > 0) {
          imagePlaceholder="\n" + imagePlaceholder;
        }
        spannableStringBuilder.insert(index,imagePlaceholder);
        index+=imagePlaceholder.length() - 1;
        spannableStringBuilder.setSpan(noteImageSpan,index,index + 1,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        spannableStringBuilder.setSpan(new AlignmentSpan.Standard(Layout.Alignment.ALIGN_CENTER),index,index + 1,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        indexAdjustment+=imagePlaceholder.length();
      }
    }
  }
  JSONArray rangesArray=subject.optJSONArray("ranges");
  if (rangesArray != null) {
    for (int i=0; i < rangesArray.length(); i++) {
      JSONObject rangeObject=rangesArray.optJSONObject(i);
      if (rangeObject == null) {
        continue;
      }
      NoteBlockClickableSpan clickableSpan=new NoteBlockClickableSpan(rangeObject,shouldLink){
        @Override public void onClick(        View widget){
          if (onNoteBlockTextClickListener != null) {
            onNoteBlockTextClickListener.onNoteBlockTextClicked(this);
          }
        }
      }
;
      int[] indices=clickableSpan.getIndices();
      if (indices.length == 2 && indices[0] <= spannableStringBuilder.length() && indices[1] <= spannableStringBuilder.length()) {
        spannableStringBuilder.setSpan(clickableSpan,indices[0],indices[1],Spanned.SPAN_INCLUSIVE_INCLUSIVE);
        if (clickableSpan.getSpanStyle() != Typeface.NORMAL) {
          StyleSpan styleSpan=new StyleSpan(clickableSpan.getSpanStyle());
          spannableStringBuilder.setSpan(styleSpan,indices[0],indices[1],Spanned.SPAN_INCLUSIVE_INCLUSIVE);
        }
      }
    }
  }
  return spannableStringBuilder;
}
