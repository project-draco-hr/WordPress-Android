{
  if (!hasActivity())   return;
  final ViewGroup viewDetail=(ViewGroup)getActivity().findViewById(R.id.layout_detail);
  final NetworkImageView imgAvatar=(NetworkImageView)viewDetail.findViewById(R.id.image_avatar);
  final TextView txtName=(TextView)viewDetail.findViewById(R.id.text_name);
  final TextView txtDate=(TextView)viewDetail.findViewById(R.id.text_date);
  final TextView txtContent=(TextView)viewDetail.findViewById(R.id.text_content);
  if (mComment == null) {
    imgAvatar.setImageDrawable(null);
    txtName.setText(null);
    txtDate.setText(null);
    txtContent.setText(null);
    mTxtStatus.setText(null);
    mLayoutButtons.setVisibility(View.GONE);
    mLayoutReply.setVisibility(View.GONE);
    if (mNote != null && !mIsRequestingComment)     showCommentForNote(mNote);
    return;
  }
  txtName.setText(TextUtils.isEmpty(mComment.name) ? getString(R.string.anonymous) : StringUtils.unescapeHTML(mComment.name));
  txtDate.setText(mComment.dateCreatedFormatted);
  txtContent.setLinksClickable(true);
  txtContent.setMovementMethod(WPLinkMovementMethod.getInstance());
  int maxImageSz=getResources().getDimensionPixelSize(R.dimen.reader_comment_max_image_size);
  CommentUtils.displayHtmlComment(txtContent,mComment.comment,maxImageSz);
  imgAvatar.setDefaultImageResId(R.drawable.placeholder);
  if (mComment.hasProfileImageUrl()) {
    imgAvatar.setImageUrl(mComment.getProfileImageUrl(),WordPress.imageLoader);
  }
 else {
    int avatarSz=getResources().getDimensionPixelSize(R.dimen.avatar_sz_large);
    String avatarUrl=GravatarUtils.gravatarUrlFromEmail(mComment.authorEmail,avatarSz);
    imgAvatar.setImageUrl(avatarUrl,WordPress.imageLoader);
  }
  updateStatusViews();
  if (!TextUtils.isEmpty(mComment.authorURL)) {
    View.OnClickListener authorListener=new View.OnClickListener(){
      @Override public void onClick(      View v){
        ReaderActivityLauncher.openUrl(getActivity(),mComment.authorURL);
      }
    }
;
    imgAvatar.setOnClickListener(authorListener);
    txtName.setOnClickListener(authorListener);
    txtName.setTextColor(getResources().getColor(R.color.reader_hyperlink));
  }
 else {
    txtName.setTextColor(getResources().getColor(R.color.grey_medium_dark));
  }
  if (mLayoutReply.getVisibility() != View.VISIBLE && isReplyingEnabled())   AniUtils.flyIn(mLayoutReply);
}
