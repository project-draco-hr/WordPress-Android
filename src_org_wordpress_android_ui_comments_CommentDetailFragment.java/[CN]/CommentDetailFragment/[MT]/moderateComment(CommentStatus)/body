{
  if (!hasActivity() || !hasComment() || mIsModeratingComment)   return;
  if (!checkConnection(getActivity()))   return;
  if (newStatus == CommentStatus.SPAM && mTxtBtnSpam.getVisibility() == View.VISIBLE) {
    ReaderAniUtils.flyOut(mTxtBtnSpam);
  }
 else   if (newStatus != CommentStatus.SPAM && mTxtBtnModerate.getVisibility() == View.VISIBLE) {
    ReaderAniUtils.flyOut(mTxtBtnModerate);
  }
  mTxtBtnModerate.setEnabled(false);
  mTxtBtnSpam.setEnabled(false);
  final int msgResId;
  final MessageBarType msgType;
switch (newStatus) {
case APPROVED:
    msgResId=R.string.comment_approved;
  msgType=MessageBarType.INFO;
break;
case UNAPPROVED:
msgResId=R.string.comment_unapproved;
msgType=MessageBarType.INFO;
break;
case SPAM:
msgResId=R.string.comment_spammed;
msgType=MessageBarType.ALERT;
break;
default :
msgResId=R.string.comment_moderated;
msgType=MessageBarType.INFO;
break;
}
MessageBarUtils.showMessageBar(getActivity(),getString(msgResId),msgType,null);
CommentActions.CommentActionListener actionListener=new CommentActions.CommentActionListener(){
@Override public void onActionResult(boolean succeeded){
mIsModeratingComment=false;
if (!hasActivity()) return;
mTxtBtnModerate.setEnabled(true);
mTxtBtnSpam.setEnabled(true);
if (succeeded) {
mComment.setStatus(CommentStatus.toString(newStatus));
if (mChangeListener != null) mChangeListener.onCommentModerated();
}
 else {
ToastUtils.showToast(getActivity(),R.string.error_moderate_comment,ToastUtils.Duration.LONG);
}
updateStatusViews();
}
}
;
mIsModeratingComment=true;
CommentActions.moderateComment(mAccountId,mComment,newStatus,actionListener);
}
