{
  super.onCreate(savedInstanceState);
  createMenuDrawer(R.layout.notifications);
  ActionBar actionBar=getSupportActionBar();
  actionBar.setDisplayShowTitleEnabled(true);
  setTitle(getString(R.string.notifications));
  SharedPreferences settings=PreferenceManager.getDefaultSharedPreferences(this);
  String username=settings.getString("wp_pref_wpcom_username",null);
  String password=WordPressDB.decryptPassword(settings.getString("wp_pref_wpcom_password",null));
  FragmentManager fm=getSupportFragmentManager();
  mNotesList=(NotificationsListFragment)fm.findFragmentById(R.id.notes_list);
  mNotesList.setNoteProvider(new NoteProvider());
  mNotesList.setOnNoteClickListener(new NoteClickListener());
  restClient.requestAccessToken(username,password,new OauthTokenResponseHandler(){
    @Override public void onStart(){
      startAnimatingRefreshButton(mRefreshMenuItem);
      shouldAnimateRefreshButton=true;
    }
    @Override public void onSuccess(    OauthToken token){
      launchWithNoteId();
      refreshNotes();
    }
    @Override public void onFailure(    Throwable e,    JSONObject response){
      stopAnimatingRefreshButton(mRefreshMenuItem);
    }
    @Override public void onFinish(){
      stopAnimatingRefreshButton(mRefreshMenuItem);
    }
  }
);
  fragmentDetectors.add(new FragmentDetector(){
    @Override public Fragment getFragment(    Note note){
      if (note.isCommentType()) {
        Fragment fragment=new NoteCommentFragment();
        return fragment;
      }
      return null;
    }
  }
);
  fragmentDetectors.add(new FragmentDetector(){
    @Override public Fragment getFragment(    Note note){
      if (note.isSingleLineListTemplate()) {
        Fragment fragment=new SingleLineListFragment();
        return fragment;
      }
      return null;
    }
  }
);
  fragmentDetectors.add(new FragmentDetector(){
    @Override public Fragment getFragment(    Note note){
      Log.d(TAG,String.format("Is it a big badge template? %b",note.isBigBadgeTemplate()));
      if (note.isBigBadgeTemplate()) {
        Fragment fragment=new BigBadgeFragment();
        return fragment;
      }
      return null;
    }
  }
);
  GCMIntentService.activeNotificationsMap.clear();
}
