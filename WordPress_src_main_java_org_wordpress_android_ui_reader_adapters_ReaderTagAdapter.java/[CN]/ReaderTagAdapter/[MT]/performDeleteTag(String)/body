{
  if (!NetworkUtils.checkConnection(getContext())) {
    return;
  }
  ReaderActions.ActionListener actionListener=new ReaderActions.ActionListener(){
    @Override public void onActionResult(    boolean succeeded){
      if (!succeeded && hasContext()) {
        ToastUtils.showToast(getContext(),R.string.reader_toast_err_remove_tag);
        refresh();
      }
    }
  }
;
  ReaderTag tag=new ReaderTag(tagName,ReaderTagType.FOLLOWED);
  boolean success=ReaderTagActions.performTagAction(tag,TagAction.DELETE,actionListener);
  if (success) {
    int index=mTags.indexOfTagName(tagName);
    if (index > -1) {
      mTags.remove(index);
      notifyItemRemoved(index);
    }
    if (mTagDeletedListener != null) {
      mTagDeletedListener.onTagDeleted(tag);
    }
  }
}
