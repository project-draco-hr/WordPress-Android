{
  boolean success=false;
  List<?> arguments=args[0];
  WordPress.currentBlog=(Blog)arguments.get(0);
  isPage=(Boolean)arguments.get(1);
  int recordCount=(Integer)arguments.get(2);
  loadMore=(Boolean)arguments.get(3);
  client=new XMLRPCClient(WordPress.currentBlog.getUrl(),WordPress.currentBlog.getHttpuser(),WordPress.currentBlog.getHttppassword());
  Object[] result=null;
  Object[] params={WordPress.currentBlog.getBlogId(),WordPress.currentBlog.getUsername(),WordPress.currentBlog.getPassword(),recordCount};
  try {
    result=(Object[])client.call((isPage) ? "wp.getPages" : "metaWeblog.getRecentPosts",params);
    if (result != null) {
      if (result.length > 0) {
        success=true;
        Map<?,?> contentHash=new HashMap<Object,Object>();
        List<Map<?,?>> dbVector=new Vector<Map<?,?>>();
        if (!loadMore) {
          WordPress.wpDB.deleteUploadedPosts(WordPress.currentBlog.getId(),isPage);
        }
        for (int ctr=0; ctr < result.length; ctr++) {
          Map<String,Object> dbValues=new HashMap<String,Object>();
          contentHash=(Map<?,?>)result[ctr];
          dbValues.put("blogID",WordPress.currentBlog.getBlogId());
          dbVector.add(ctr,contentHash);
        }
        WordPress.wpDB.savePosts(dbVector,WordPress.currentBlog.getId(),isPage);
      }
 else {
        if (pla != null) {
          if (postIDs.length == 2) {
            try {
              WordPress.wpDB.deleteUploadedPosts(WordPress.currentBlog.getId(),WordPress.currentPost.isPage());
              onPostActionListener.onPostAction(PostsActivity.POST_CLEAR,WordPress.currentPost);
            }
 catch (            Exception e) {
              e.printStackTrace();
            }
            WordPress.currentPost=null;
          }
        }
      }
    }
  }
 catch (  XMLRPCException e) {
    errorMsg=e.getMessage();
    if (errorMsg == null)     errorMsg=getResources().getString(R.string.error_generic);
  }
  return success;
}
